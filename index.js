// Require the necessary discord.js classes
const { Client, Collector, CommandInteraction, Intents, MessageActionRow, MessageButton, MessageEmbed, MessageManager, SystemChannelFlags, Formatters, Collection, MessageSelectMenu } = require('discord.js');
const { token } = require('./config.json');
const { clientId } = require('./config.json');
const simplydjs = require('simply-djs');
// Create a new client instance
const client = new Client({ intents: [Intents.FLAGS.GUILDS, Intents.FLAGS.GUILD_MESSAGES, Intents.FLAGS.GUILD_VOICE_STATES, Intents.FLAGS.GUILD_MEMBERS, Intents.FLAGS.GUILD_PRESENCES] , shards: 'auto'});
const { DiscordTogether } = require('discord-together');
const { waitForDebugger } = require('inspector');
const { argv0 } = require('process');
const wait = require('util').promisify(setTimeout);
const { Permissions } = require('discord.js');
const { inlineCode, codeBlock, time, roleMention } = require('@discordjs/builders');

let winning_id = 0;
let role4sb = null;
let rank_index = 1;
let nIntervId;
let solo_nIntervId1;
let solo_nIntervId2;
let solo_nIntervId3;
let party_nIntervId1;
let party_nIntervId2;
let party_nIntervId3;
let chat_nIntervId1;
let chat_nIntervId2;
let chat_nIntervId3;
let voice_nIntervId1;
let voice_nIntervId2;
let voice_nIntervId3;
let solo_timeout1;
let solo_timeout2;
let solo_timeout3;
let party_timeout1;
let party_timeout2;
let party_timeout3;
let chat_timeout1;
let chat_timeout2;
let chat_timeout3;
let voice_timeout1;
let voice_timeout2;
let voice_timeout3;
const limon = 0;
let ldb = 0;
let chid = '0';
let decayval = 30;
let chsize = 20;
let srlstatus = 0;
let solo_limit = 0;
let solo_limit_value = 20000;
let solo_limit_interval = 1;
let solo_limit_intstatus = 'daily';
let party_limit = 0;
let party_limit_value = 20000;
let party_limit_interval = 1;
let party_limit_intstatus = 'daily';
let chat_limit = 0;
let chat_limit_value = 20000;
let chat_limit_interval = 1;
let chat_limit_intstatus = 'daily';
let voice_limit = 0;
let voice_limit_value = 20000;
let voice_limit_interval = 1;
let voice_limit_intstatus = 'daily';

const Sequelize = require('sequelize');
const { Op } = require('sequelize');
const sequelize = new Sequelize('database', 'user', 'password', {
	host: 'localhost',
	dialect: 'sqlite',
	logging: false,
	// SQLite only
	storage: 'database.sqlite',
});
const Tags = sequelize.define('tags', {
	username: Sequelize.STRING,
	id: {
		type: Sequelize.STRING,
		unique: true,
		primaryKey: true,
	},
	activity: {
		type: Sequelize.INTEGER,
		defaultValue: 10,
		allowNull: false,
	},
	activitywlim: {
		type: Sequelize.INTEGER,
		defaultValue: 0,
		allowNull: false,
	},
	activitytime: {
		type: Sequelize.INTEGER,
		defaultValue: 10,
		allowNull: false,
	},
	inactivity: {
		type: Sequelize.INTEGER,
		defaultValue: 0,
		allowNull: false,
	},
	sologamescore: {
		type: Sequelize.INTEGER,
		defaultValue: 0,
		allowNull: false,
	},
	sologamescorewlim: {
		type: Sequelize.INTEGER,
		defaultValue: 0,
		allowNull: false,
	},
	sologametime: {
		type: Sequelize.INTEGER,
		defaultValue: 0,
		allowNull: false,
	},
	partygamescore: {
		type: Sequelize.INTEGER,
		defaultValue: 0,
		allowNull: false,
	},
	partygamescorewlim: {
		type: Sequelize.INTEGER,
		defaultValue: 0,
		allowNull: false,
	},
	partygametime: {
		type: Sequelize.INTEGER,
		defaultValue: 0,
		allowNull: false,
	},


	voicescore: {
		type: Sequelize.INTEGER,
		defaultValue: 0,
		allowNull: false,
	},
	voicescorewlim: {
		type: Sequelize.INTEGER,
		defaultValue: 0,
		allowNull: false,
	},
	voicescoretime: {
		type: Sequelize.INTEGER,
		defaultValue: 0,
		allowNull: false,
	},
	lastused: {
		type: Sequelize.INTEGER,
		defaultValue: new Date() - 0,
		allowNull: false,
	},
	ladifference: {
		type: Sequelize.INTEGER,
		defaultValue: 0,
		allowNull: false,
	},
	total: {
		type: Sequelize.INTEGER,
		defaultValue: 0,
		allowNull: false,
	},
	crtid: {
		type: Sequelize.INTEGER,
		defaultValue: 0,
		allowNull: false,
	},
});
waitime = 1;

const Ranks = sequelize.define('ranks', {
	index: {
		type: Sequelize.INTEGER,
		unique: true,
		primaryKey: true,
	},
	name: Sequelize.STRING,
	role: Sequelize.STRING,
	role_icon: Sequelize.STRING,
	points: {
		type: Sequelize.INTEGER,
		defaultValue: 0,
		allowNull: false,
	},


});


client.discordTogether = new DiscordTogether(client);

// When the client is ready, run this code (only once)
client.once('ready', () => {

	Tags.sync();
	Ranks.sync();
	const rank1 = Ranks.upsert({
		index: rank_index,
		name: 'Pro',
		role: null,
		role_icon: null,
		points: 10000,
	});
	rank_index = rank_index + 1;
	const rank2 = Ranks.upsert({
		index: rank_index,
		name: 'Active',
		role: null,
		role_icon: null,
		points: 10000,
	});
	rank_index = rank_index + 1;
	const rank3 = Ranks.upsert({
		index: rank_index,
		name: 'Regular',
		role: null,
		role_icon: null,
		points: 100,
	});
	rank_index = rank_index + 1;
	const rank4 = Ranks.upsert({
		index: rank_index,
		name: 'Lite',
		role: null,
		role_icon: null,
		points: 100,
	});
	rank_index = rank_index + 1;
	const rank5 = Ranks.upsert({
		index: rank_index,
		name: 'New Rank',
		role: null,
		role_icon: null,
		points: 10,
	});

	console.log('Ready!');

});
///voice/////////////
client.on('voiceStateUpdate', async (oldState, newState) => {
	//console.log("Voice state update")
	//console.log(newState.id);
	//console.log(oldState);
	const tag = await Tags.findOne({ where: { id: oldState.id } });
	if (oldState.member.voice.channel && oldState.selfDeaf == false && oldState.selfMute == false) {
		//console.log('hai hm yha');




		if (tag) {



			tag.update({ 'voicescoretime': new Date() - 0 });


		}


	}/*else if(oldState.selfDeaf==true ||oldState.selfMute==true){
		if (tag){
			voicenow123 = tag.get('voicescoretime');
			if(voicenow123>0){
				now123 = new Date() - 0;
		minute_spent = (now123 - voicenow123)/60000
		score123 = Math.floor(minute_spent*1);
		if(voice_limit==0){
			tag.increment({ 'voicescore': score123 });
			tag.update({ 'voicescoretime': 0 });
			
		}else{
			tag.increment({ 'voicescore': score123 });
			tag.increment({ 'voicescorewlim': score123 });
			tag.update({ 'voicescoretime': 0 });
		}

			}
		}
	}*/
	else if (!oldState.member.voice.channel && oldState.selfDeaf == false && oldState.selfMute == false) {
		if (tag) {
			voicenow123 = tag.get('voicescoretime');
			if (voicenow123 > 0) {
				now123 = new Date() - 0;
				minute_spent = (now123 - voicenow123) / 60000
				score123 = Math.floor(minute_spent * 1);
				if (voice_limit == 0) {
					tag.increment({ 'voicescore': score123 });
					tag.update({ 'voicescoretime': 0 });

				} else {
					tempvoicecheck = tag.get('voicescorewlim');
					if (tempvoicecheck <= voice_limit_value) {
						tag.increment({ 'voicescore': score123 });
						tag.increment({ 'voicescorewlim': score123 });
						tag.update({ 'voicescoretime': 0 });
					}
				}
			}
		}
	}
	tag.update({ 'lastused': new Date() - 0 });
	const allup = await Tags.findAll();
	allup.forEach(b => {
		now1 = b.get('lastused');
		now2 = new Date() - now1;
		b.update({ 'ladifference': now2 })
		/////total///////////////////////////////////////////////////////////////////
		act1 = b.get('activity');
		act2 = b.get('sologamescore');
		act3 = b.get('partygamescore');
		act4 = b.get('voicescore');
		act6 = b.get('inactivity');
		act5 = (act1 + act2 + act3 + act4) - act6;
		/////////////////decay inactivity////////////////////////////////////////////
		now3 = b.get('ladifference');
		now1ind = ((((now3 / 1000) / 60) / 60) / 24);
		if (now1ind >= 7) {
			inact1 = (decayval / 100) * act5
			b.update({ 'inactivity': inact1 });
		}
		/////total///////////////////////////////////////////////////////////////////
		act1 = b.get('activity');
		act2 = b.get('sologamescore');
		act3 = b.get('partygamescore');
		act4 = b.get('voicescore');
		act6 = b.get('inactivity');
		act5 = (act1 + act2 + act3 + act4) - act6;

		b.update({ 'total': act5 });
	});

})
///message/////
client.on('messageCreate', async message => {
	message.guild.members.fetch().then(res => res.map(sj => {

		kallu = sj.user.username;
		if (!sj.user.bot) {
			try {
				// equivalent to: INSERT INTO tags (name, description, username) values (?, ?, ?);
				const tag = Tags.upsert({
					id: sj.user.id,

					username: sj.user.username,


				});


				//return interaction.reply(`Tag ${tag.name} added.`);
			}
			catch (error) {
				if (error.name === 'SequelizeUniqueConstraintError') {
					//	return interaction.reply('That tag already exists.');
				}

				//return interaction.reply('Something went wrong with adding a tag.');
			}
		}
	}));
	const tag = await Tags.findOne({ where: { id: message.author.id } });


	if (tag) {
		now1 = tag.get('lastused');
		activelm = tag.get('activitywlim');
		console.log(now1)
		now2 = new Date() - now1;
		console.log(now2)
		// equivalent to: UPDATE tags SET usage_count = usage_count + 1 WHERE name = 'tagName';
		///antispam ///
		if (now2 > 60000) {
			if (chat_limit == 0) {

				tag.increment({ 'activity': 5 });
			} else {
				if (activelm <= chat_limit_value) {
					tag.increment({ 'activity': 5 });
					tag.increment({ 'activitywlim': 5 });
				}





			}

		}
		tag.update({ 'lastused': new Date() - 0 });


	}
	const allup = await Tags.findAll();
	allup.forEach(b => {
		now1 = b.get('lastused');
		now2 = new Date() - now1;
		b.update({ 'ladifference': now2 })
		/////total///////////////////////////////////////////////////////////////////
		act1 = b.get('activity');
		act2 = b.get('sologamescore');
		act3 = b.get('partygamescore');
		act4 = b.get('voicescore');
		act6 = b.get('inactivity');
		act5 = (act1 + act2 + act3 + act4) - act6;
		/////////////////decay inactivity////////////////////////////////////////////
		now3 = b.get('ladifference');
		now1ind = ((((now3 / 1000) / 60) / 60) / 24);
		if (now1ind >= 7) {
			inact1 = (decayval / 100) * act5
			b.update({ 'inactivity': inact1 });
		}
		/////total///////////////////////////////////////////////////////////////////
		act1 = b.get('activity');
		act2 = b.get('sologamescore');
		act3 = b.get('partygamescore');
		act4 = b.get('voicescore');
		act6 = b.get('inactivity');
		act5 = (act1 + act2 + act3 + act4) - act6;

		b.update({ 'total': act5 });
	});


})

//Command with their functions
client.on('interactionCreate', async interaction => {
	if (!interaction.isCommand()) return;
	kallu = [];
	interaction.guild.members.fetch().then(res => res.map(sj => {

		kallu = sj.user.username;
		if (!sj.user.bot) {
			try {
				// equivalent to: INSERT INTO tags (name, description, username) values (?, ?, ?);
				const tag = Tags.upsert({
					id: sj.user.id,

					username: sj.user.username,


				});


				//return interaction.reply(`Tag ${tag.name} added.`);
			}
			catch (error) {
				if (error.name === 'SequelizeUniqueConstraintError') {
					//	return interaction.reply('That tag already exists.');
				}

				//return interaction.reply('Something went wrong with adding a tag.');
			}
		}
	}));
	const tag = await Tags.findOne({ where: { id: interaction.user.id } });


	if (tag) {
		now1 = tag.get('lastused');
		activelm = tag.get('activitywlim');
		console.log(now1)
		now2 = new Date() - now1;
		console.log(now2)
		// equivalent to: UPDATE tags SET usage_count = usage_count + 1 WHERE name = 'tagName';
		///antispam ///
		if (now2 > 60000) {
			if (chat_limit == 0) {

				tag.increment({ 'activity': 10 });
			} else {
				if (activelm <= chat_limit_value) {
					tag.increment({ 'activity': 10 });
					tag.increment({ 'activitywlim': 10 });
				}





			}

		}
		tag.update({ 'lastused': new Date() - 0 });


	}
	const allup = await Tags.findAll();
	allup.forEach(b => {
		now1 = b.get('lastused');
		now2 = new Date() - now1;
		b.update({ 'ladifference': now2 })
		/////total///////////////////////////////////////////////////////////////////
		act1 = b.get('activity');
		act2 = b.get('sologamescore');
		act3 = b.get('partygamescore');
		act4 = b.get('voicescore');
		act6 = b.get('inactivity');
		act5 = (act1 + act2 + act3 + act4) - act6;
		/////////////////decay inactivity////////////////////////////////////////////
		now3 = b.get('ladifference');
		now1ind = ((((now3 / 1000) / 60) / 60) / 24);
		if (now1ind >= 7) {
			inact1 = (decayval / 100) * act5
			b.update({ 'inactivity': inact1 });
		}
		/////total///////////////////////////////////////////////////////////////////
		act1 = b.get('activity');
		act2 = b.get('sologamescore');
		act3 = b.get('partygamescore');
		act4 = b.get('voicescore');
		act6 = b.get('inactivity');
		act5 = (act1 + act2 + act3 + act4) - act6;

		b.update({ 'total': act5 });
	});
	const allup1_new = await Tags.findAll();
	allup1_new.sort((a, b) => b.total - a.total)
	.filter(user => client.users.cache.has(user.id))
	.map(async (user, position) => {
		const allup2_new = await Ranks.findAll();
		allup2_new.sort((a, b) => a.points - b.points)
				.map(user1 => {
					if (user.total >= user1.points) {
						 role4sb = user1.role;

					}
				})
				.join('\n')
				interaction.guild.members.fetch(user.id)
					.then()
					.catch(async catchsmp =>{
						const lag = await Tags.destroy({ where: { id: user.id } });
					});
				if(role4sb!=null){
					interaction.guild.members.fetch(user.id)
					.then(async mem56 => {
						mem56.roles.add(role4sb);
					})
					.catch(async catchsmp =>{
						const lag = await Tags.destroy({ where: { id: user.id } });
					});}
 
				
					
	})
	.join('\n')


	/*now2= new Date();
	await Tags.increment({'inactivity': -now2}, {
		where: {
		  gamescore: 10,
		}
		});*/




	const { commandName } = interaction;
	//111111111111111111111111111111111111111111111111111111111111111111111111111111111111
	if (commandName === 'discord-together-games') {
		if (waitime == 1) {
			if (interaction.member.voice.channel) {
				waitime = 0;
				client.discordTogether.createTogetherCode(interaction.member.voice.channel.id, 'youtube').then(async youtube => {
					dt1 = new MessageButton()

						.setLabel('Youtube')
						.setStyle('LINK')
						.setEmoji('<:WhiteYoutube:886433145665245276.>')
						.setURL(`${youtube.code}`),
						dt2 = new MessageButton()

							.setCustomId('secondary')
							.setLabel('Chess')
							.setStyle('PRIMARY')
							.setEmoji('<:Chess:890873260638613545.>'),
						dt3 = new MessageButton()
							.setCustomId('3ary')
							.setLabel('Fishing')
							.setStyle('SUCCESS')
							.setEmoji('<a:Fishing:886864034413043782.>')
						,
						dt4 = new MessageButton()
							.setCustomId('4ary')
							.setLabel('Betrayal')
							.setStyle('DANGER')
							.setEmoji('<a:loading:890874005899317279.>')
						,
						dt5 = new MessageButton()
							.setCustomId('5ary')
							.setLabel('Poker')
							.setStyle('SECONDARY')
							.setEmoji('<:Poker:886864034362703932.>')
						,
						dt6 = new MessageButton()
							.setCustomId('6ary')
							.setLabel('Doodle Crew')
							.setStyle('PRIMARY')
							.setEmoji('<:DoodleDraw:900529853412036669>')
						,
						dt7 = new MessageButton()
							.setCustomId('7ary')

							.setLabel('Letter Tile')
							.setStyle('SUCCESS')
							.setEmoji('<:LetterTile:900529853898579968>')
						,
						dt8 = new MessageButton()
							.setCustomId('8ary')

							.setLabel('Word Snack')
							.setStyle('DANGER')
							.setEmoji('<:WordSnack:900545077095579710>');








					const row = new MessageActionRow()
						.addComponents(dt1, dt2, dt3, dt4);
					const rowl = new MessageActionRow()
						.addComponents(dt5, dt6, dt7, dt8);


					const embed = new MessageEmbed()
						.setColor('#393636')
						.setTitle('<a:DiscordGlow:886866647216971826>                                        Discord Together Games!')
						.setDescription("Join a voice channel and the click any of the buttons below to activate the activity you'd like to play! These activities are in beta so bugs are to be expected when playing.\n\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\n\n<a:Youtube:875692938275991552> **Youtube** — Watch YouTube videos with your friends! Create a playlist of YouTube videos by searching or pasting in YouTube links. You can even toggle a remote button that lets other Discord server members share the ability to control playback.\n\n<a:Chess:886864034241056788> **Chess** — Play Chess against your friends!\n\n<a:Fishing:886864034413043782>  **Fishing** — An online fishing game where you can relax, chat and fish with up to 24 players!\n\n<a:blue_sus:760415541662973962> **Betrayal** — Betrayal.io is a multiplayer social deduction game like Among Us. You play the game as a crewmate or a secret saboteur called a 'betrayer'. The betrayer must sabotage operations while crewmates must complete all of their duties without being killed.\n\n<:Poker:886864034362703932> **Poker** — Play with up to 7 people or with bots.\n\n<a:DoodleDraw:900530992345931797> **Doodle Crew** — A drawing and guessing game. One game consists of a few rounds in which every round someone has to draw their chosen word and others have to guess it to gain points! The person with the most points at the end of game will then be crowned as the winner!\n\n<:LetterTile:900529853898579968> **Letter Tile** — A word game in which two to four players score points by placing tiles, each bearing a single letter, onto a game board divided into a 15×15 grid of squares. The tiles must form words that, in crossword fashion, read left to right in rows or downward in columns, and be included in a standard dictionary or lexicon.\n\n<:WordSnack:900545077095579710> **Word Snack** — A very simple and exciting game where you have to match the letters to form words. Each level has a group of different letters with which you will form words.")
						.setThumbnail('https://cdn.discordapp.com/emojis/886254255974010922.gif?size=64');
					await interaction.reply({ embeds: [embed], components: [row, rowl] });


					client.discordTogether.createTogetherCode(interaction.member.voice.channel.id, 'chess').then(async chess => {
						dt2 = new MessageButton()

							.setLabel('Chess')
							.setStyle('LINK')
							.setEmoji('<:Chess:890873260638613545.>')
							.setURL(`${chess.code}`);

						const row = new MessageActionRow()
							.addComponents(dt1, dt2, dt3, dt4);




						await interaction.editReply({ components: [row, rowl] });


						client.discordTogether.createTogetherCode(interaction.member.voice.channel.id, 'fishing').then(async fishing => {
							dt3 = new MessageButton()

								.setLabel('Fishing')
								.setStyle('LINK')
								.setEmoji('<a:Fishing:886864034413043782.>')
								.setURL(`${fishing.code}`);
							const row = new MessageActionRow()
								.addComponents(dt1, dt2, dt3, dt4);


							await interaction.editReply({ components: [row, rowl] });
							await wait(3000);


							client.discordTogether.createTogetherCode(interaction.member.voice.channel.id, 'betrayal').then(async betrayal => {
								dt4 = new MessageButton()

									.setLabel('Betrayal')
									.setStyle('LINK')
									.setEmoji('<a:AmongUS:890874005899317279.>')
									.setURL(`${betrayal.code}`);
								const row = new MessageActionRow()
									.addComponents(dt1, dt2, dt3, dt4);




								await interaction.editReply({ components: [row, rowl] });
								await wait(3000);

								client.discordTogether.createTogetherCode(interaction.member.voice.channel.id, 'poker').then(async poker => {
									dt5 = new MessageButton()

										.setLabel('Poker')
										.setStyle('LINK')
										.setEmoji('<:Poker:886864034362703932.>')
										.setURL(`${poker.code}`);

									const rowl = new MessageActionRow()
										.addComponents(dt5, dt6, dt7, dt8);



									await interaction.editReply({ components: [row, rowl] });
									await wait(10000);
									client.discordTogether.createTogetherCode(interaction.member.voice.channel.id, 'doodlecrew').then(async doodlecrew => {
										dt6 = new MessageButton()

											.setLabel('Doodle Crew')
											.setStyle('LINK')
											.setEmoji('<:DoodleDraw:900529853412036669>')
											.setURL(`${doodlecrew.code}`);

										const rowl = new MessageActionRow()
											.addComponents(dt5, dt6, dt7, dt8);



										await interaction.editReply({ components: [row, rowl] });
										client.discordTogether.createTogetherCode(interaction.member.voice.channel.id, 'lettertile').then(async lettertile => {
											dt7 = new MessageButton()

												.setLabel('Letter Tile')
												.setStyle('LINK')
												.setEmoji('<:LetterTile:900529853898579968>')
												.setURL(`${lettertile.code}`);

											const rowl = new MessageActionRow()
												.addComponents(dt5, dt6, dt7, dt8);



											await interaction.editReply({ components: [row, rowl] });


											client.discordTogether.createTogetherCode(interaction.member.voice.channel.id, 'wordsnack').then(async wordsnack => {
												dt8 = new MessageButton()

													.setLabel('Word Snack')
													.setStyle('LINK')
													.setEmoji('<:WordSnack:900545077095579710>')
													.setURL(`${wordsnack.code}`);
												const rowl = new MessageActionRow()
													.addComponents(dt5, dt6, dt7, dt8);



												await interaction.editReply({ components: [row, rowl] });
												await wait(15000)
												waitime = 1;


											})

										})
									})
								})
							})
						})
					})
				})


			}
			else if (!interaction.member.voice.channel) {
				interaction.reply({ content: 'Please join a voice channel!', ephemeral: true });
			}
		} else {
			interaction.reply({ content: 'This command can be  initiated after 30 seconds!', ephemeral: true });
		}
	}

	//2222222222222222222222222222222222222222222222222222222222222222222222222222222222222    
	else if (commandName === 'youtube-together') {
		if (waitime == 1) {
			if (interaction.member.voice.channel) {
				waitime = 0;
				client.discordTogether.createTogetherCode(interaction.member.voice.channel.id, 'youtube').then(async invite => {
					const row = new MessageActionRow()
						.addComponents(
							new MessageButton()

								.setLabel('Youtube')
								.setStyle('LINK')
								.setEmoji('<:WhiteYoutube:886433145665245276.>')
								.setURL(`${invite.code}`),
						);
					await interaction.reply({ content: 'Happy watching!', components: [row] }); // Click the blue link !
					await wait(15000);
					waitime = 1;

				});
			}
			else if (!interaction.member.voice.channel) {
				interaction.reply({ content: 'Please join a voice channel!', ephemeral: true });
			}
		} else {
			interaction.reply({ content: 'This command can be  initiated after 30 seconds!', ephemeral: true });
		}
	}



	//33333333333333333333333333333333333333333333333333333333333333333333333333333333333333    
	else if (commandName === 'chess') {
		if (waitime == 1) {
			if (interaction.member.voice.channel) {
				waitime = 0;
				client.discordTogether.createTogetherCode(interaction.member.voice.channel.id, 'chess').then(async invite => {
					const row = new MessageActionRow()
						.addComponents(
							new MessageButton()

								.setLabel('Chess')
								.setStyle('LINK')
								.setEmoji('<:Chess:890873260638613545.>')
								.setURL(`${invite.code}`),
						);
					await interaction.reply({ content: 'Cheer up, Chess', components: [row] });
					await wait(15000);
					waitime = 1;
				});
			}
			else if (!interaction.member.voice.channel) {
				interaction.reply({ content: 'Please join a voice channel!', ephemeral: true });
			}
		} else {
			interaction.reply({ content: 'This command can be  initiated after 30 seconds!', ephemeral: true });
		}
	}



	//444444444444444444444444444444444444444444444444444444444444444444444444444444444444444
	else if (commandName === 'fishing') {
		if (waitime == 1) {
			if (interaction.member.voice.channel) {
				waitime = 0;
				client.discordTogether.createTogetherCode(interaction.member.voice.channel.id, 'fishing').then(async invite => {
					const row = new MessageActionRow()
						.addComponents(
							new MessageButton()

								.setLabel('Fishing')
								.setStyle('LINK')
								.setEmoji('<a:Fishing:886864034413043782.>')
								.setURL(`${invite.code}`),
						);
					await interaction.reply({ content: 'It’s more than a fish', components: [row] });
					await wait(15000);
					waitime = 1;
				});
			}
			else if (!interaction.member.voice.channel) {
				interaction.reply({ content: 'Please join a voice channel!', ephemeral: true });
			}
		} else {
			interaction.reply({ content: 'This command can be  initiated after 30 seconds!', ephemeral: true });
		}
	}



	//55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555    
	else if (commandName === 'betrayal') {
		if (waitime == 1) {
			if (interaction.member.voice.channel) {
				waitime = 0;
				client.discordTogether.createTogetherCode(interaction.member.voice.channel.id, 'betrayal').then(async invite => {
					const row = new MessageActionRow()
						.addComponents(
							new MessageButton()

								.setLabel('Betrayal')
								.setStyle('LINK')
								.setEmoji('<a:AmongUS:890874005899317279.>')
								.setURL(`${invite.code}`),
						);
					await interaction.reply({ content: 'There is an impostor among us', components: [row] });
					await wait(15000);
					waitime = 1;
				});
			}
			else if (!interaction.member.voice.channel) {
				interaction.reply({ content: 'Please join a voice channel!', ephemeral: true });
			}
		} else {
			interaction.reply({ content: 'This command can be  initiated after 30 seconds!', ephemeral: true });
		}
	}


	//6666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666
	else if (commandName === 'poker') {
		if (waitime == 1) {
			if (interaction.member.voice.channel) {
				waitime = 0;
				client.discordTogether.createTogetherCode(interaction.member.voice.channel.id, 'poker').then(async invite => {
					const row = new MessageActionRow()
						.addComponents(
							new MessageButton()

								.setLabel('Poker')
								.setStyle('LINK')
								.setEmoji('<:Poker:886864034362703932.>')
								.setURL(`${invite.code}`),
						);
					await interaction.reply({ content: 'Life, like poker, has an element of risk.', components: [row] });
					await wait(15000);
					waitime = 1;
				});
			}
			else if (!interaction.member.voice.channel) {
				interaction.reply({ content: 'Please join a voice channel!', ephemeral: true });
			}
		} else {
			interaction.reply({ content: 'This command can be  initiated after 30 seconds!', ephemeral: true });
		}
	}

	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////6
	else if (commandName === 'doodlecrew') {
		if (waitime == 1) {
			if (interaction.member.voice.channel) {
				waitime = 0;
				client.discordTogether.createTogetherCode(interaction.member.voice.channel.id, 'doodlecrew').then(async doodlecrew => {
					const row = new MessageActionRow()
						.addComponents(

							new MessageButton()

								.setLabel('Doodle Crew')
								.setStyle('LINK')
								.setEmoji('<:DoodleDraw:900529853412036669>')
								.setURL(`${doodlecrew.code}`),

						);
					await interaction.reply({ content: 'Play Doodle Crew!', components: [row] });
					await wait(15000);
					waitime = 1;
				});
			}
			else if (!interaction.member.voice.channel) {
				interaction.reply({ content: 'Please join a voice channel!', ephemeral: true });
			}
		} else {
			interaction.reply({ content: 'This command can be  initiated after 30 seconds!', ephemeral: true });
		}
	}
	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////7
	else if (commandName === 'lettertile') {
		if (waitime == 1) {
			if (interaction.member.voice.channel) {
				waitime = 0;
				client.discordTogether.createTogetherCode(interaction.member.voice.channel.id, 'lettertile').then(async lettertile => {
					const row = new MessageActionRow()
						.addComponents(

							new MessageButton()

								.setLabel('Letter Tile')
								.setStyle('LINK')
								.setEmoji('<:LetterTile:900529853898579968>')
								.setURL(`${lettertile.code}`),
						);
					await interaction.reply({ content: 'Play Letter Tile!', components: [row] });
					await wait(15000);
					waitime = 1;
				});
			}
			else if (!interaction.member.voice.channel) {
				interaction.reply({ content: 'Please join a voice channel!', ephemeral: true });
			}
		} else {
			interaction.reply({ content: 'This command can be  initiated after 30 seconds!', ephemeral: true });
		}
	}
	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////8
	else if (commandName === 'wordsnack') {
		if (waitime == 1) {
			if (interaction.member.voice.channel) {
				waitime = 0;
				client.discordTogether.createTogetherCode(interaction.member.voice.channel.id, 'wordsnack').then(async wordsnack => {
					const row = new MessageActionRow()
						.addComponents(

							new MessageButton()

								.setLabel('Word Snack')
								.setStyle('LINK')
								.setEmoji('<:WordSnack:900545077095579710>')
								.setURL(`${wordsnack.code}`),
						);
					await interaction.reply({ content: 'Play Word Snack!', components: [row] });
					await wait(15000);
					waitime = 1;
				});
			}
			else if (!interaction.member.voice.channel) {
				interaction.reply({ content: 'Please join a voice channel!', ephemeral: true });
			}
		} else {
			interaction.reply({ content: 'This command can be  initiated after 30 seconds!', ephemeral: true });
		}
	}
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


	//7777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
	else if (commandName === 'connect4') {
		let opponent = interaction.options.getUser("opponent");

		if (!opponent || opponent.id == clientId) {



			interaction.reply({ content: '\u200B' });

			let m = await interaction.fetchReply();
			interaction.deleteReply();


			let fighters = [interaction.user.id, 'Coco Arcade'].sort(() =>
				Math.random() > 0.5 ? 1 : -1
			);

			let x_emoji = "<:Red:891239779365187624>";
			let o_emoji = "<:Yellow:891239779386142740>";
			let a = [];
			let b = [];
			let c = [];
			let d = [];
			let e = [];
			let f = [];
			let g = [];
			let o = [];
			//<:bl:903904924709036054>
			let dashmoji = '<:c4empty:891239779411304478>';
			let lle = "<:PlayLast:904208723369664552>";
			let le = "<:Rewind:887106133423161364>";
			let mide = "<:Down:904208890747568218>";
			let re = "<:Forward:887106133041496085>";
			let rre = "<:Skip:887101074031407114>";
			a[1] = `${dashmoji}`;
			a[2] = `${dashmoji}`;
			a[3] = `${dashmoji}`;
			a[4] = `${dashmoji}`;
			a[5] = `${dashmoji}`;
			a[6] = `${dashmoji}`;
			b[1] = `${dashmoji}`;
			b[2] = `${dashmoji}`;
			b[3] = `${dashmoji}`;
			b[4] = `${dashmoji}`;
			b[5] = `${dashmoji}`;
			b[6] = `${dashmoji}`;
			c[1] = `${dashmoji}`;
			c[2] = `${dashmoji}`;
			c[3] = `${dashmoji}`;
			c[4] = `${dashmoji}`;
			c[5] = `${dashmoji}`;
			c[6] = `${dashmoji}`;
			d[1] = `${dashmoji}`;
			d[2] = `${dashmoji}`;
			d[3] = `${dashmoji}`;
			d[4] = `${dashmoji}`;
			d[5] = `${dashmoji}`;
			d[6] = `${dashmoji}`;
			e[1] = `${dashmoji}`;
			e[2] = `${dashmoji}`;
			e[3] = `${dashmoji}`;
			e[4] = `${dashmoji}`;
			e[5] = `${dashmoji}`;
			e[6] = `${dashmoji}`;
			f[1] = `${dashmoji}`;
			f[2] = `${dashmoji}`;
			f[3] = `${dashmoji}`;
			f[4] = `${dashmoji}`;
			f[5] = `${dashmoji}`;
			f[6] = `${dashmoji}`;
			g[1] = `${dashmoji}`;
			g[2] = `${dashmoji}`;
			g[3] = `${dashmoji}`;
			g[4] = `${dashmoji}`;
			g[5] = `${dashmoji}`;
			g[6] = `${dashmoji}`;
			o[1] = "<:tstd:892959158893174834>";
			o[2] = "<:tstd:892959158893174834>";
			o[3] = "<:tstd:892959158893174834>";
			o[4] = "<:ytd:891239779549732874>";
			o[5] = "<:tstd:892959158893174834>";
			o[6] = "<:tstd:892959158893174834>";
			o[7] = "<:tstd:892959158893174834>";
			let y = 4;
			let n = 4;
			let disabst = false;


			let Args = {
				user: 0,
				ll: {
					style: "SECONDARY",
					emoji: lle,
					disabled: false
				},
				l: {
					style: "SECONDARY",
					emoji: le,
					disabled: false
				},
				mid: {
					style: "SECONDARY",
					emoji: mide,
					disabled: false
				},
				r: {
					style: "SECONDARY",
					emoji: re,
					disabled: false
				},
				rr: {
					style: "SECONDARY",
					emoji: rre,
					disabled: false
				}
			};
			const { MessageActionRow, MessageButton } = require("discord.js");



			const xoemb = new MessageEmbed()
				.setTitle('Connect 4')
				.setDescription(
					`Round in progress...\n>`
				)
				.setColor('#36393F')

				;

			let msg = await interaction.followUp({
				content: `\u200B`
			});
			connects(msg);

			async function connects(m) {
				Args.userid = fighters[Args.user];
				let won = {
					"<:yellow_square:>": false,
					"<:red_square:>": false
				};
				if (
					a[6] == o_emoji &&
					a[5] == o_emoji &&
					a[4] == o_emoji &&
					a[3] == o_emoji
				)
					won["<:yellow_square:>"] = true;
				if (
					a[2] == o_emoji &&
					a[3] == o_emoji &&
					a[4] == o_emoji &&
					a[5] == o_emoji
				)
					won["<:yellow_square:>"] = true;
				if (
					a[1] == o_emoji &&
					a[2] == o_emoji &&
					a[3] == o_emoji &&
					a[4] == o_emoji
				)
					won["<:yellow_square:>"] = true;
				if (
					b[6] == o_emoji &&
					b[5] == o_emoji &&
					b[4] == o_emoji &&
					b[3] == o_emoji
				)
					won["<:yellow_square:>"] = true;
				if (
					b[2] == o_emoji &&
					b[3] == o_emoji &&
					b[4] == o_emoji &&
					b[5] == o_emoji
				)
					won["<:yellow_square:>"] = true;
				if (
					b[1] == o_emoji &&
					b[2] == o_emoji &&
					b[3] == o_emoji &&
					b[4] == o_emoji
				)
					won["<:yellow_square:>"] = true;
				if (
					c[6] == o_emoji &&
					c[5] == o_emoji &&
					c[4] == o_emoji &&
					c[3] == o_emoji
				)
					won["<:yellow_square:>"] = true;
				if (
					c[2] == o_emoji &&
					c[3] == o_emoji &&
					c[4] == o_emoji &&
					c[5] == o_emoji
				)
					won["<:yellow_square:>"] = true;
				if (
					c[1] == o_emoji &&
					c[2] == o_emoji &&
					c[3] == o_emoji &&
					c[4] == o_emoji
				)
					won["<:yellow_square:>"] = true;
				if (
					d[6] == o_emoji &&
					d[5] == o_emoji &&
					d[4] == o_emoji &&
					d[3] == o_emoji
				)
					won["<:yellow_square:>"] = true;
				if (
					d[2] == o_emoji &&
					d[3] == o_emoji &&
					d[4] == o_emoji &&
					d[5] == o_emoji
				)
					won["<:yellow_square:>"] = true;
				if (
					d[1] == o_emoji &&
					d[2] == o_emoji &&
					d[3] == o_emoji &&
					d[4] == o_emoji
				)
					won["<:yellow_square:>"] = true;
				if (
					e[6] == o_emoji &&
					e[5] == o_emoji &&
					e[4] == o_emoji &&
					e[3] == o_emoji
				)
					won["<:yellow_square:>"] = true;
				if (
					e[2] == o_emoji &&
					e[3] == o_emoji &&
					e[4] == o_emoji &&
					e[5] == o_emoji
				)
					won["<:yellow_square:>"] = true;
				if (
					e[1] == o_emoji &&
					e[2] == o_emoji &&
					e[3] == o_emoji &&
					e[4] == o_emoji
				)
					won["<:yellow_square:>"] = true;
				if (
					f[6] == o_emoji &&
					f[5] == o_emoji &&
					f[4] == o_emoji &&
					f[3] == o_emoji
				)
					won["<:yellow_square:>"] = true;
				if (
					f[2] == o_emoji &&
					f[3] == o_emoji &&
					f[4] == o_emoji &&
					f[5] == o_emoji
				)
					won["<:yellow_square:>"] = true;
				if (
					f[1] == o_emoji &&
					f[2] == o_emoji &&
					f[3] == o_emoji &&
					f[4] == o_emoji
				)
					won["<:yellow_square:>"] = true;
				if (
					g[6] == o_emoji &&
					g[5] == o_emoji &&
					g[4] == o_emoji &&
					g[3] == o_emoji
				)
					won["<:yellow_square:>"] = true;
				if (
					g[2] == o_emoji &&
					g[3] == o_emoji &&
					g[4] == o_emoji &&
					g[5] == o_emoji
				)
					won["<:yellow_square:>"] = true;
				if (
					g[1] == o_emoji &&
					g[2] == o_emoji &&
					g[3] == o_emoji &&
					g[4] == o_emoji
				)
					won["<:yellow_square:>"] = true;
				if (
					a[6] == o_emoji &&
					b[6] == o_emoji &&
					c[6] == o_emoji &&
					d[6] == o_emoji
				)
					won["<:yellow_square:>"] = true;
				if (
					e[6] == o_emoji &&
					b[6] == o_emoji &&
					c[6] == o_emoji &&
					d[6] == o_emoji
				)
					won["<:yellow_square:>"] = true;
				if (
					e[6] == o_emoji &&
					f[6] == o_emoji &&
					c[6] == o_emoji &&
					d[6] == o_emoji
				)
					won["<:yellow_square:>"] = true;
				if (
					e[6] == o_emoji &&
					f[6] == o_emoji &&
					g[6] == o_emoji &&
					d[6] == o_emoji
				)
					won["<:yellow_square:>"] = true;
				if (
					a[5] == o_emoji &&
					b[5] == o_emoji &&
					c[5] == o_emoji &&
					d[5] == o_emoji
				)
					won["<:yellow_square:>"] = true;
				if (
					e[5] == o_emoji &&
					b[5] == o_emoji &&
					c[5] == o_emoji &&
					d[5] == o_emoji
				)
					won["<:yellow_square:>"] = true;
				if (
					e[5] == o_emoji &&
					f[5] == o_emoji &&
					c[5] == o_emoji &&
					d[5] == o_emoji
				)
					won["<:yellow_square:>"] = true;
				if (
					e[5] == o_emoji &&
					f[5] == o_emoji &&
					g[5] == o_emoji &&
					d[5] == o_emoji
				)
					won["<:yellow_square:>"] = true;
				if (
					a[4] == o_emoji &&
					b[4] == o_emoji &&
					c[4] == o_emoji &&
					d[4] == o_emoji
				)
					won["<:yellow_square:>"] = true;
				if (
					e[4] == o_emoji &&
					b[4] == o_emoji &&
					c[4] == o_emoji &&
					d[4] == o_emoji
				)
					won["<:yellow_square:>"] = true;
				if (
					e[4] == o_emoji &&
					f[4] == o_emoji &&
					c[4] == o_emoji &&
					d[4] == o_emoji
				)
					won["<:yellow_square:>"] = true;
				if (
					e[4] == o_emoji &&
					f[4] == o_emoji &&
					g[4] == o_emoji &&
					d[4] == o_emoji
				)
					won["<:yellow_square:>"] = true;
				if (
					a[3] == o_emoji &&
					b[3] == o_emoji &&
					c[3] == o_emoji &&
					d[3] == o_emoji
				)
					won["<:yellow_square:>"] = true;
				if (
					e[3] == o_emoji &&
					b[3] == o_emoji &&
					c[3] == o_emoji &&
					d[3] == o_emoji
				)
					won["<:yellow_square:>"] = true;
				if (
					e[3] == o_emoji &&
					f[3] == o_emoji &&
					c[3] == o_emoji &&
					d[3] == o_emoji
				)
					won["<:yellow_square:>"] = true;
				if (
					e[3] == o_emoji &&
					f[3] == o_emoji &&
					g[3] == o_emoji &&
					d[3] == o_emoji
				)
					won["<:yellow_square:>"] = true;
				if (
					a[2] == o_emoji &&
					b[2] == o_emoji &&
					c[2] == o_emoji &&
					d[2] == o_emoji
				)
					won["<:yellow_square:>"] = true;
				if (
					e[2] == o_emoji &&
					b[2] == o_emoji &&
					c[2] == o_emoji &&
					d[2] == o_emoji
				)
					won["<:yellow_square:>"] = true;
				if (
					e[2] == o_emoji &&
					f[2] == o_emoji &&
					c[2] == o_emoji &&
					d[2] == o_emoji
				)
					won["<:yellow_square:>"] = true;
				if (
					e[2] == o_emoji &&
					f[2] == o_emoji &&
					g[2] == o_emoji &&
					d[2] == o_emoji
				)
					won["<:yellow_square:>"] = true;
				if (
					a[1] == o_emoji &&
					b[1] == o_emoji &&
					c[1] == o_emoji &&
					d[1] == o_emoji
				)
					won["<:yellow_square:>"] = true;
				if (
					e[1] == o_emoji &&
					b[1] == o_emoji &&
					c[1] == o_emoji &&
					d[1] == o_emoji
				)
					won["<:yellow_square:>"] = true;
				if (
					e[1] == o_emoji &&
					f[1] == o_emoji &&
					c[1] == o_emoji &&
					d[1] == o_emoji
				)
					won["<:yellow_square:>"] = true;
				if (
					e[1] == o_emoji &&
					f[1] == o_emoji &&
					g[1] == o_emoji &&
					d[1] == o_emoji
				)
					won["<:yellow_square:>"] = true;
				if (
					a[3] == o_emoji &&
					b[4] == o_emoji &&
					c[5] == o_emoji &&
					d[6] == o_emoji
				)
					won["<:yellow_square:>"] = true;
				if (
					a[2] == o_emoji &&
					b[3] == o_emoji &&
					c[4] == o_emoji &&
					d[5] == o_emoji
				)
					won["<:yellow_square:>"] = true;
				if (
					e[6] == o_emoji &&
					b[3] == o_emoji &&
					c[4] == o_emoji &&
					d[5] == o_emoji
				)
					won["<:yellow_square:>"] = true;
				if (
					a[1] == o_emoji &&
					b[2] == o_emoji &&
					c[3] == o_emoji &&
					d[4] == o_emoji
				)
					won["<:yellow_square:>"] = true;
				if (
					e[5] == o_emoji &&
					b[2] == o_emoji &&
					c[3] == o_emoji &&
					d[4] == o_emoji
				)
					won["<:yellow_square:>"] = true;
				if (
					e[5] == o_emoji &&
					f[6] == o_emoji &&
					c[3] == o_emoji &&
					d[4] == o_emoji
				)
					won["<:yellow_square:>"] = true;
				if (
					e[4] == o_emoji &&
					b[1] == o_emoji &&
					c[2] == o_emoji &&
					d[3] == o_emoji
				)
					won["<:yellow_square:>"] = true;
				if (
					e[4] == o_emoji &&
					f[5] == o_emoji &&
					c[2] == o_emoji &&
					d[3] == o_emoji
				)
					won["<:yellow_square:>"] = true;
				if (
					e[4] == o_emoji &&
					f[5] == o_emoji &&
					g[6] == o_emoji &&
					d[3] == o_emoji
				)
					won["<:yellow_square:>"] = true;
				if (
					c[1] == o_emoji &&
					d[2] == o_emoji &&
					e[3] == o_emoji &&
					f[4] == o_emoji

				)
					won["<:yellow_square:>"] = true;
				if (
					g[5] == o_emoji &&
					d[2] == o_emoji &&
					e[3] == o_emoji &&
					f[4] == o_emoji

				)
					won["<:yellow_square:>"] = true;
				if (
					g[4] == o_emoji &&
					d[1] == o_emoji &&
					e[2] == o_emoji &&
					f[3] == o_emoji

				)
					won["<:yellow_square:>"] = true;
				if (
					a[4] == o_emoji &&
					b[3] == o_emoji &&
					c[2] == o_emoji &&
					d[1] == o_emoji
				)
					won["<:yellow_square:>"] = true;
				if (
					a[5] == o_emoji &&
					b[4] == o_emoji &&
					c[3] == o_emoji &&
					d[2] == o_emoji
				)
					won["<:yellow_square:>"] = true;
				if (
					e[1] == o_emoji &&
					b[4] == o_emoji &&
					c[3] == o_emoji &&
					d[2] == o_emoji
				)
					won["<:yellow_square:>"] = true;
				if (
					a[6] == o_emoji &&
					b[5] == o_emoji &&
					c[4] == o_emoji &&
					d[3] == o_emoji
				)
					won["<:yellow_square:>"] = true;
				if (
					e[2] == o_emoji &&
					b[5] == o_emoji &&
					c[4] == o_emoji &&
					d[3] == o_emoji
				)
					won["<:yellow_square:>"] = true;
				if (
					e[2] == o_emoji &&
					f[1] == o_emoji &&
					c[4] == o_emoji &&
					d[3] == o_emoji
				)
					won["<:yellow_square:>"] = true;
				if (
					e[3] == o_emoji &&
					b[6] == o_emoji &&
					c[5] == o_emoji &&
					d[4] == o_emoji
				)
					won["<:yellow_square:>"] = true;
				if (
					e[3] == o_emoji &&
					f[2] == o_emoji &&
					c[5] == o_emoji &&
					d[4] == o_emoji
				)
					won["<:yellow_square:>"] = true;
				if (
					e[3] == o_emoji &&
					f[2] == o_emoji &&
					g[1] == o_emoji &&
					d[4] == o_emoji
				)
					won["<:yellow_square:>"] = true;
				if (
					c[6] == o_emoji &&
					d[5] == o_emoji &&
					e[4] == o_emoji &&
					f[3] == o_emoji

				)
					won["<:yellow_square:>"] = true;
				if (
					g[2] == o_emoji &&
					d[5] == o_emoji &&
					e[4] == o_emoji &&
					f[3] == o_emoji

				)
					won["<:yellow_square:>"] = true;
				if (
					g[3] == o_emoji &&
					d[6] == o_emoji &&
					e[5] == o_emoji &&
					f[4] == o_emoji

				)
					won["<:yellow_square:>"] = true;









				if (won["<:yellow_square:>"] != false) {
					let foot = '🎉 Winner                                             Defeated'


					const xoemy3 = new MessageEmbed()
						.setTitle('Connect 4')
						.setDescription(
							`Round over`

						)
						.addFields(

							{
								name: `🟡 | ${fighters[1] == interaction.user.id ? `${interaction.user.username}` : `Coco Arcade`
									}`, value: `:tada: Winner`, inline: true
							},
							{
								name: `🔴 | ${fighters[1] == interaction.user.id ? `Coco Arcade` : `${interaction.user.username}`
									}`, value: `Defeated`, inline: true
							},
						)
						.setColor('#36393F')
						;
					const xoemb4 = new MessageEmbed()
						.setTitle('Connect 4')
						.setDescription(
							`Round over`

						)
						.addFields(

							{
								name: `🟡 | ${fighters[0] == interaction.user.id ? `${interaction.user.username}` : `Coco Arcade`
									}`, value: `:tada: Winner`, inline: true
							},
							{
								name: `🔴 | ${fighters[0] == interaction.user.id ? `Coco Arcade` : `${interaction.user.username}`
									}`, value: `Defeated`, inline: true
							},
						)
						.setColor('#36393F');
					if (Args.user == 0) {
						const tagi = await Tags.findOne({ where: { id: fighters[1] } });
						if (tagi) {
							if (solo_limit == 0) {
								tagi.increment({ 'partygamescore': 10 });
							} else {
								temppartycheck = tagi.get('partygamescorewlim');
								if (temppartycheck <= party_limit_value) {
									tagi.increment({ 'partygamescore': 10 });
									tagi.increment({ 'partygamescorewlim': 10 });

								}
							}
						}

						return m.edit({
							content: `${o[1]}${o[2]}${o[3]}${o[4]}${o[5]}${o[6]}${o[7]}\n${a[1]}${b[1]}${c[1]}${d[1]}${e[1]}${f[1]}${g[1]}\n${a[2]}${b[2]}${c[2]}${d[2]}${e[2]}${f[2]}${g[2]}\n${a[3]}${b[3]}${c[3]}${d[3]}${e[3]}${f[3]}${g[3]}\n${a[4]}${b[4]}${c[4]}${d[4]}${e[4]}${f[4]}${g[4]}\n${a[5]}${b[5]}${c[5]}${d[5]}${e[5]}${f[5]}${g[5]}\n${a[6]}${b[6]}${c[6]}${d[6]}${e[6]}${f[6]}${g[6]}`,

							embeds: [xoemy3], components: []
						});
					}
					else if (Args.user == 1) {
						const tagi = await Tags.findOne({ where: { id: fighters[0] } });
						if (tagi) {
							if (party_limit == 0) {
								tagi.increment({ 'partygamescore': 10 });
							} else {
								temppartycheck = tagi.get('partygamescorewlim');
								if (temppartycheck <= party_limit_value) {
									tagi.increment({ 'partygamescore': 10 });
									tagi.increment({ 'partygamescorewlim': 10 });

								}
							}
						}

						return m.edit({
							content: `${o[1]}${o[2]}${o[3]}${o[4]}${o[5]}${o[6]}${o[7]}\n${a[1]}${b[1]}${c[1]}${d[1]}${e[1]}${f[1]}${g[1]}\n${a[2]}${b[2]}${c[2]}${d[2]}${e[2]}${f[2]}${g[2]}\n${a[3]}${b[3]}${c[3]}${d[3]}${e[3]}${f[3]}${g[3]}\n${a[4]}${b[4]}${c[4]}${d[4]}${e[4]}${f[4]}${g[4]}\n${a[5]}${b[5]}${c[5]}${d[5]}${e[5]}${f[5]}${g[5]}\n${a[6]}${b[6]}${c[6]}${d[6]}${e[6]}${f[6]}${g[6]}`,

							embeds: [xoemb4], components: []
						});
					}
				}
				if (
					a[6] == x_emoji &&
					a[5] == x_emoji &&
					a[4] == x_emoji &&
					a[3] == x_emoji
				)
					won["<:red_square:>"] = true;
				if (
					a[2] == x_emoji &&
					a[3] == x_emoji &&
					a[4] == x_emoji &&
					a[5] == x_emoji
				)
					won["<:red_square:>"] = true;
				if (
					a[1] == x_emoji &&
					a[2] == x_emoji &&
					a[3] == x_emoji &&
					a[4] == x_emoji
				)
					won["<:red_square:>"] = true;
				if (
					b[6] == x_emoji &&
					b[5] == x_emoji &&
					b[4] == x_emoji &&
					b[3] == x_emoji
				)
					won["<:red_square:>"] = true;
				if (
					b[2] == x_emoji &&
					b[3] == x_emoji &&
					b[4] == x_emoji &&
					b[5] == x_emoji
				)
					won["<:red_square:>"] = true;
				if (
					b[1] == x_emoji &&
					b[2] == x_emoji &&
					b[3] == x_emoji &&
					b[4] == x_emoji
				)
					won["<:red_square:>"] = true;
				if (
					c[6] == x_emoji &&
					c[5] == x_emoji &&
					c[4] == x_emoji &&
					c[3] == x_emoji
				)
					won["<:red_square:>"] = true;
				if (
					c[2] == x_emoji &&
					c[3] == x_emoji &&
					c[4] == x_emoji &&
					c[5] == x_emoji
				)
					won["<:red_square:>"] = true;
				if (
					c[1] == x_emoji &&
					c[2] == x_emoji &&
					c[3] == x_emoji &&
					c[4] == x_emoji
				)
					won["<:red_square:>"] = true;
				if (
					d[6] == x_emoji &&
					d[5] == x_emoji &&
					d[4] == x_emoji &&
					d[3] == x_emoji
				)
					won["<:red_square:>"] = true;
				if (
					d[2] == x_emoji &&
					d[3] == x_emoji &&
					d[4] == x_emoji &&
					d[5] == x_emoji
				)
					won["<:red_square:>"] = true;
				if (
					d[1] == x_emoji &&
					d[2] == x_emoji &&
					d[3] == x_emoji &&
					d[4] == x_emoji
				)
					won["<:red_square:>"] = true;
				if (
					e[6] == x_emoji &&
					e[5] == x_emoji &&
					e[4] == x_emoji &&
					e[3] == x_emoji
				)
					won["<:red_square:>"] = true;
				if (
					e[2] == x_emoji &&
					e[3] == x_emoji &&
					e[4] == x_emoji &&
					e[5] == x_emoji
				)
					won["<:red_square:>"] = true;
				if (
					e[1] == x_emoji &&
					e[2] == x_emoji &&
					e[3] == x_emoji &&
					e[4] == x_emoji
				)
					won["<:red_square:>"] = true;
				if (
					f[6] == x_emoji &&
					f[5] == x_emoji &&
					f[4] == x_emoji &&
					f[3] == x_emoji
				)
					won["<:red_square:>"] = true;
				if (
					f[2] == x_emoji &&
					f[3] == x_emoji &&
					f[4] == x_emoji &&
					f[5] == x_emoji
				)
					won["<:red_square:>"] = true;
				if (
					f[1] == x_emoji &&
					f[2] == x_emoji &&
					f[3] == x_emoji &&
					f[4] == x_emoji
				)
					won["<:red_square:>"] = true;
				if (
					g[6] == x_emoji &&
					g[5] == x_emoji &&
					g[4] == x_emoji &&
					g[3] == x_emoji
				)
					won["<:red_square:>"] = true;
				if (
					g[2] == x_emoji &&
					g[3] == x_emoji &&
					g[4] == x_emoji &&
					g[5] == x_emoji
				)
					won["<:red_square:>"] = true;
				if (
					g[1] == x_emoji &&
					g[2] == x_emoji &&
					g[3] == x_emoji &&
					g[4] == x_emoji
				)
					won["<:red_square:>"] = true;
				if (
					a[6] == x_emoji &&
					b[6] == x_emoji &&
					c[6] == x_emoji &&
					d[6] == x_emoji
				)
					won["<:red_square:>"] = true;
				if (
					e[6] == x_emoji &&
					b[6] == x_emoji &&
					c[6] == x_emoji &&
					d[6] == x_emoji
				)
					won["<:red_square:>"] = true;
				if (
					e[6] == x_emoji &&
					f[6] == x_emoji &&
					c[6] == x_emoji &&
					d[6] == x_emoji
				)
					won["<:red_square:>"] = true;
				if (
					e[6] == x_emoji &&
					f[6] == x_emoji &&
					g[6] == x_emoji &&
					d[6] == x_emoji
				)
					won["<:red_square:>"] = true;
				if (
					a[5] == x_emoji &&
					b[5] == x_emoji &&
					c[5] == x_emoji &&
					d[5] == x_emoji
				)
					won["<:red_square:>"] = true;
				if (
					e[5] == x_emoji &&
					b[5] == x_emoji &&
					c[5] == x_emoji &&
					d[5] == x_emoji
				)
					won["<:red_square:>"] = true;
				if (
					e[5] == x_emoji &&
					f[5] == x_emoji &&
					c[5] == x_emoji &&
					d[5] == x_emoji
				)
					won["<:red_square:>"] = true;
				if (
					e[5] == x_emoji &&
					f[5] == x_emoji &&
					g[5] == x_emoji &&
					d[5] == x_emoji
				)
					won["<:red_square:>"] = true;
				if (
					a[4] == x_emoji &&
					b[4] == x_emoji &&
					c[4] == x_emoji &&
					d[4] == x_emoji
				)
					won["<:red_square:>"] = true;
				if (
					e[4] == x_emoji &&
					b[4] == x_emoji &&
					c[4] == x_emoji &&
					d[4] == x_emoji
				)
					won["<:red_square:>"] = true;
				if (
					e[4] == x_emoji &&
					f[4] == x_emoji &&
					c[4] == x_emoji &&
					d[4] == x_emoji
				)
					won["<:red_square:>"] = true;
				if (
					e[4] == x_emoji &&
					f[4] == x_emoji &&
					g[4] == x_emoji &&
					d[4] == x_emoji
				)
					won["<:red_square:>"] = true;
				if (
					a[3] == x_emoji &&
					b[3] == x_emoji &&
					c[3] == x_emoji &&
					d[3] == x_emoji
				)
					won["<:red_square:>"] = true;
				if (
					e[3] == x_emoji &&
					b[3] == x_emoji &&
					c[3] == x_emoji &&
					d[3] == x_emoji
				)
					won["<:red_square:>"] = true;
				if (
					e[3] == x_emoji &&
					f[3] == x_emoji &&
					c[3] == x_emoji &&
					d[3] == x_emoji
				)
					won["<:red_square:>"] = true;
				if (
					e[3] == x_emoji &&
					f[3] == x_emoji &&
					g[3] == x_emoji &&
					d[3] == x_emoji
				)
					won["<:red_square:>"] = true;
				if (
					a[2] == x_emoji &&
					b[2] == x_emoji &&
					c[2] == x_emoji &&
					d[2] == x_emoji
				)
					won["<:red_square:>"] = true;
				if (
					e[2] == x_emoji &&
					b[2] == x_emoji &&
					c[2] == x_emoji &&
					d[2] == x_emoji
				)
					won["<:red_square:>"] = true;
				if (
					e[2] == x_emoji &&
					f[2] == x_emoji &&
					c[2] == x_emoji &&
					d[2] == x_emoji
				)
					won["<:red_square:>"] = true;
				if (
					e[2] == x_emoji &&
					f[2] == x_emoji &&
					g[2] == x_emoji &&
					d[2] == x_emoji
				)
					won["<:red_square:>"] = true;
				if (
					a[1] == x_emoji &&
					b[1] == x_emoji &&
					c[1] == x_emoji &&
					d[1] == x_emoji
				)
					won["<:red_square:>"] = true;
				if (
					e[1] == x_emoji &&
					b[1] == x_emoji &&
					c[1] == x_emoji &&
					d[1] == x_emoji
				)
					won["<:red_square:>"] = true;
				if (
					e[1] == x_emoji &&
					f[1] == x_emoji &&
					c[1] == x_emoji &&
					d[1] == x_emoji
				)
					won["<:red_square:>"] = true;
				if (
					e[1] == x_emoji &&
					f[1] == x_emoji &&
					g[1] == x_emoji &&
					d[1] == x_emoji
				)
					won["<:red_square:>"] = true;
				if (
					a[3] == x_emoji &&
					b[4] == x_emoji &&
					c[5] == x_emoji &&
					d[6] == x_emoji
				)
					won["<:red_square:>"] = true;
				if (
					a[2] == x_emoji &&
					b[3] == x_emoji &&
					c[4] == x_emoji &&
					d[5] == x_emoji
				)
					won["<:red_square:>"] = true;
				if (
					e[6] == x_emoji &&
					b[3] == x_emoji &&
					c[4] == x_emoji &&
					d[5] == x_emoji
				)
					won["<:red_square:>"] = true;
				if (
					a[1] == x_emoji &&
					b[2] == x_emoji &&
					c[3] == x_emoji &&
					d[4] == x_emoji
				)
					won["<:red_square:>"] = true;
				if (
					e[5] == x_emoji &&
					b[2] == x_emoji &&
					c[3] == x_emoji &&
					d[4] == x_emoji
				)
					won["<:red_square:>"] = true;
				if (
					e[5] == x_emoji &&
					f[6] == x_emoji &&
					c[3] == x_emoji &&
					d[4] == x_emoji
				)
					won["<:red_square:>"] = true;
				if (
					e[4] == x_emoji &&
					b[1] == x_emoji &&
					c[2] == x_emoji &&
					d[3] == x_emoji
				)
					won["<:red_square:>"] = true;
				if (
					e[4] == x_emoji &&
					f[5] == x_emoji &&
					c[2] == x_emoji &&
					d[3] == x_emoji
				)
					won["<:red_square:>"] = true;
				if (
					e[4] == x_emoji &&
					f[5] == x_emoji &&
					g[6] == x_emoji &&
					d[3] == x_emoji
				)
					won["<:red_square:>"] = true;
				if (
					c[1] == x_emoji &&
					d[2] == x_emoji &&
					e[3] == x_emoji &&
					f[4] == x_emoji

				)
					won["<:red_square:>"] = true;
				if (
					g[5] == x_emoji &&
					d[2] == x_emoji &&
					e[3] == x_emoji &&
					f[4] == x_emoji

				)
					won["<:red_square:>"] = true;
				if (
					g[4] == x_emoji &&
					d[1] == x_emoji &&
					e[2] == x_emoji &&
					f[3] == x_emoji

				)
					won["<:red_square:>"] = true;
				if (
					a[4] == x_emoji &&
					b[3] == x_emoji &&
					c[2] == x_emoji &&
					d[1] == x_emoji
				)
					won["<:red_square:>"] = true;
				if (
					a[5] == x_emoji &&
					b[4] == x_emoji &&
					c[3] == x_emoji &&
					d[2] == x_emoji
				)
					won["<:red_square:>"] = true;
				if (
					e[1] == x_emoji &&
					b[4] == x_emoji &&
					c[3] == x_emoji &&
					d[2] == x_emoji
				)
					won["<:red_square:>"] = true;
				if (
					a[6] == x_emoji &&
					b[5] == x_emoji &&
					c[4] == x_emoji &&
					d[3] == x_emoji
				)
					won["<:red_square:>"] = true;
				if (
					e[2] == x_emoji &&
					b[5] == x_emoji &&
					c[4] == x_emoji &&
					d[3] == x_emoji
				)
					won["<:red_square:>"] = true;
				if (
					e[2] == x_emoji &&
					f[1] == x_emoji &&
					c[4] == x_emoji &&
					d[3] == x_emoji
				)
					won["<:red_square:>"] = true;
				if (
					e[3] == x_emoji &&
					b[6] == x_emoji &&
					c[5] == x_emoji &&
					d[4] == x_emoji
				)
					won["<:red_square:>"] = true;
				if (
					e[3] == x_emoji &&
					f[2] == x_emoji &&
					c[5] == x_emoji &&
					d[4] == x_emoji
				)
					won["<:red_square:>"] = true;
				if (
					e[3] == x_emoji &&
					f[2] == x_emoji &&
					g[1] == x_emoji &&
					d[4] == x_emoji
				)
					won["<:red_square:>"] = true;
				if (
					c[6] == x_emoji &&
					d[5] == x_emoji &&
					e[4] == x_emoji &&
					f[3] == x_emoji

				)
					won["<:red_square:>"] = true;
				if (
					g[2] == x_emoji &&
					d[5] == x_emoji &&
					e[4] == x_emoji &&
					f[3] == x_emoji

				)
					won["<:red_square:>"] = true;
				if (
					g[3] == x_emoji &&
					d[6] == x_emoji &&
					e[5] == x_emoji &&
					f[4] == x_emoji

				)
					won["<:red_square:>"] = true;

				if (won["<:red_square:>"] != false) {
					let foot = '🎉 Winner                                             Defeated'



					const xoemy1 = new MessageEmbed()
						.setTitle('Connect 4')
						.setDescription(
							`Round over`

						)
						.addFields(

							{
								name: `🔴 | ${fighters[1] == interaction.user.id ? `${interaction.user.username}` : `Coco Arcade`
									}`, value: `:tada: Winner`, inline: true
							},
							{
								name: `🟡 | ${fighters[1] == interaction.user.id ? `Coco Arcade` : `${interaction.user.username}`
									}`, value: `Defeated`, inline: true
							},
						)
						.setColor('#36393F')
						;
					const xoemy2 = new MessageEmbed()
						.setTitle('Connect 4')
						.setDescription(
							`Round over`

						)
						.addFields(

							{
								name: `🔴 | ${fighters[0] == interaction.user.id ? `${interaction.user.username}` : `Coco Arcade`
									}`, value: `:tada: Winner`, inline: true
							},
							{
								name: `🟡 | ${fighters[0] == interaction.user.id ? `Coco Arcade` : `${interaction.user.username}`
									}`, value: `Defeated`, inline: true
							},
						)
						.setColor('#36393F');
					if (Args.user == 0) {
						const tagi = await Tags.findOne({ where: { id: fighters[1] } });
						if (tagi) {
							if (party_limit == 0) {
								tagi.increment({ 'partygamescore': 10 });
							} else {
								temppartycheck = tagi.get('partygamescorewlim');
								if (temppartycheck <= party_limit_value) {
									tagi.increment({ 'partygamescore': 10 });
									tagi.increment({ 'partygamescorewlim': 10 });

								}
							}
						}
						return m.edit({
							content: `${o[1]}${o[2]}${o[3]}${o[4]}${o[5]}${o[6]}${o[7]}\n${a[1]}${b[1]}${c[1]}${d[1]}${e[1]}${f[1]}${g[1]}\n${a[2]}${b[2]}${c[2]}${d[2]}${e[2]}${f[2]}${g[2]}\n${a[3]}${b[3]}${c[3]}${d[3]}${e[3]}${f[3]}${g[3]}\n${a[4]}${b[4]}${c[4]}${d[4]}${e[4]}${f[4]}${g[4]}\n${a[5]}${b[5]}${c[5]}${d[5]}${e[5]}${f[5]}${g[5]}\n${a[6]}${b[6]}${c[6]}${d[6]}${e[6]}${f[6]}${g[6]}`,

							embeds: [xoemy1], components: []
						});
					}
					else if (Args.user == 1) {
						const tagi = await Tags.findOne({ where: { id: fighters[0] } });
						if (tagi) {
							if (party_limit == 0) {
								tagi.increment({ 'partygamescore': 10 });
							} else {
								temppartycheck = tagi.get('partygamescorewlim');
								if (temppartycheck <= party_limit_value) {
									tagi.increment({ 'partygamescore': 10 });
									tagi.increment({ 'partygamescorewlim': 10 });

								}
							}
						}
						return m.edit({
							content: `${o[1]}${o[2]}${o[3]}${o[4]}${o[5]}${o[6]}${o[7]}\n${a[1]}${b[1]}${c[1]}${d[1]}${e[1]}${f[1]}${g[1]}\n${a[2]}${b[2]}${c[2]}${d[2]}${e[2]}${f[2]}${g[2]}\n${a[3]}${b[3]}${c[3]}${d[3]}${e[3]}${f[3]}${g[3]}\n${a[4]}${b[4]}${c[4]}${d[4]}${e[4]}${f[4]}${g[4]}\n${a[5]}${b[5]}${c[5]}${d[5]}${e[5]}${f[5]}${g[5]}\n${a[6]}${b[6]}${c[6]}${d[6]}${e[6]}${f[6]}${g[6]}`,

							embeds: [xoemy2], components: []
						});
					}
				}
				let ll = new MessageButton()
					.setStyle(Args.ll.style)
					.setEmoji(Args.ll.emoji)
					.setCustomId("ll")
					.setDisabled(disabst);
				let l = new MessageButton()
					.setStyle(Args.l.style)
					.setEmoji(Args.l.emoji)
					.setCustomId("l")
					.setDisabled(disabst);
				let mid = new MessageButton()
					.setStyle(Args.mid.style)
					.setEmoji(Args.mid.emoji)
					.setCustomId("mid")
					.setDisabled(disabst);
				let r = new MessageButton()
					.setStyle(Args.r.style)
					.setEmoji(Args.r.emoji)
					.setCustomId("r")
					.setDisabled(disabst);
				let rr = new MessageButton()
					.setStyle(Args.rr.style)
					.setEmoji(Args.rr.emoji)
					.setCustomId("rr")
					.setDisabled(disabst);
				let x = new MessageActionRow().addComponents([ll, l, mid, r, rr]);

				let buttons = { components: [x] };
				let em = `${Args.user == 0 ? '🟡' : "🔴"
					}`
				let op = `${Args.user == 1 ? '🟡' : "🔴"
					}`
				let foot = 'current player                   next up'
				const xoemb = new MessageEmbed()
					.setTitle('Connect 4')
					.setDescription(
						`Round in progress...`
					)
					.addFields(

						{
							name: `${em} | ${Args.userid == interaction.user.id ? `${interaction.user.username}` : `Coco Arcade`
								}`, value: `**Current Player**`, inline: true
						},
						{
							name: `${op} | ${Args.userid == interaction.user.id ? `Coco Arcade` : `${interaction.user.username}`
								}`, value: `Next Up`, inline: true
						},
					)
					.setColor('#36393F')
					;



				if (Args.userid == 'Coco Arcade') {
					disabst = true;
					ll = new MessageButton()
						.setStyle(Args.ll.style)
						.setEmoji(Args.ll.emoji)
						.setCustomId("ll")
						.setDisabled(disabst);
					l = new MessageButton()
						.setStyle(Args.l.style)
						.setEmoji(Args.l.emoji)
						.setCustomId("l")
						.setDisabled(disabst);
					mid = new MessageButton()
						.setStyle(Args.mid.style)
						.setEmoji(Args.mid.emoji)
						.setCustomId("mid")
						.setDisabled(disabst);
					r = new MessageButton()
						.setStyle(Args.r.style)
						.setEmoji(Args.r.emoji)
						.setCustomId("r")
						.setDisabled(disabst);
					rr = new MessageButton()
						.setStyle(Args.rr.style)
						.setEmoji(Args.rr.emoji)
						.setCustomId("rr")
						.setDisabled(disabst);
					x = new MessageActionRow().addComponents([ll, l, mid, r, rr]);
					m.edit({
						content: `${Args.userid == interaction.user.id ? `${interaction.user.username}'s turn|${Args.user == 0 ? '🟡' : "🔴"}` : `Coco Arcade is thinking...`
							}\n${o[1]}${o[2]}${o[3]}${o[4]}${o[5]}${o[6]}${o[7]}\n${a[1]}${b[1]}${c[1]}${d[1]}${e[1]}${f[1]}${g[1]}\n${a[2]}${b[2]}${c[2]}${d[2]}${e[2]}${f[2]}${g[2]}\n${a[3]}${b[3]}${c[3]}${d[3]}${e[3]}${f[3]}${g[3]}\n${a[4]}${b[4]}${c[4]}${d[4]}${e[4]}${f[4]}${g[4]}\n${a[5]}${b[5]}${c[5]}${d[5]}${e[5]}${f[5]}${g[5]}\n${a[6]}${b[6]}${c[6]}${d[6]}${e[6]}${f[6]}${g[6]}`,
						components: [x], embeds: [xoemb]
					});
					//////////////////////////////Self winning loops////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////












					if (
						a[6] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						a[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						a[4] == `${Args.user == 0 ? o_emoji : x_emoji}`&&
						a[3] == dashmoji
					)
						a[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
					
						a[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						a[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						a[5] == `${Args.user == 0 ? o_emoji : x_emoji}`&&
						a[2] == dashmoji
					)
						a[2] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
					
						a[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						a[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						a[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						a[1] == dashmoji
					)
						a[1] = `${Args.user == 0 ? o_emoji : x_emoji}`
					else if (
						b[6] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[3] == dashmoji
					
					)
						b[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
					
						b[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[2] == dashmoji
					)
						b[2] = `${Args.user == 0 ? o_emoji : x_emoji}`
					else if (
					
						b[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[1] == dashmoji
					)
						b[1] = `${Args.user == 0 ? o_emoji : x_emoji}`
					else if (
						c[6] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[4] == `${Args.user == 0 ? o_emoji : x_emoji}`  &&
						c[3] == dashmoji
					
					)
						c[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
					
						c[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[2] == dashmoji
					)
						c[2] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
					
						c[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[1] == dashmoji
					)
						c[1] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						d[6] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[4] == `${Args.user == 0 ? o_emoji : x_emoji}`&&
						d[3] == dashmoji
					
					)
						d[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
					
						d[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[5] == `${Args.user == 0 ? o_emoji : x_emoji}`&&
						d[2] == dashmoji
					)
						d[2] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
					
						d[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[4] == `${Args.user == 0 ? o_emoji : x_emoji}`&&
						d[1] == dashmoji
					)
						d[1] = `${Args.user == 0 ? o_emoji : x_emoji}`
					else if (
						e[6] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						e[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						e[4] == `${Args.user == 0 ? o_emoji : x_emoji}`&&
						e[3] == dashmoji
					
					)
						e[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
					
						e[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						e[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						e[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						e[2] == dashmoji
					)
						e[2] = `${Args.user == 0 ? o_emoji : x_emoji}`
					else if (
					
						e[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						e[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						e[4] == `${Args.user == 0 ? o_emoji : x_emoji}`  &&
						e[1] == dashmoji
					)
						e[1] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						f[6] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[3] == dashmoji
					
					)
						f[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
					
						f[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[2] == dashmoji
					)
						f[2] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
					
						f[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[1] == dashmoji
					)
						f[1] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						g[6] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						g[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						g[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
					g[3] == dashmoji
					)
						g[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
					
						g[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						g[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						g[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						g[2] == dashmoji
					)
						g[2] = `${Args.user == 0 ? o_emoji : x_emoji}`
					else if (
					
						g[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						g[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						g[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						g[1] == dashmoji
					)
						g[1] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						a[6] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[6] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[6] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[6] == dashmoji
					)
						d[6] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						a[6] == dashmoji &&
						b[6] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[6] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[6] == `${Args.user == 0 ? o_emoji : x_emoji}`
					)
						a[6] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						a[6] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[6] == dashmoji &&
						c[6] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[6] == `${Args.user == 0 ? o_emoji : x_emoji}`
					)
						b[6] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						a[6] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[6] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[6] == dashmoji &&
						d[6] == `${Args.user == 0 ? o_emoji : x_emoji}`
					)
						c[6] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						e[6] == dashmoji &&
						b[6] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[6] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[6] == `${Args.user == 0 ? o_emoji : x_emoji}`
					)
						e[6] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						e[6] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[6] == dashmoji &&
						c[6] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[6] == `${Args.user == 0 ? o_emoji : x_emoji}`
					)
						b[6] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						e[6] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[6] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[6] == dashmoji &&
						d[6] == `${Args.user == 0 ? o_emoji : x_emoji}`
					)
						c[6] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						e[6] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[6] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[6] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[6] == dashmoji
					)
						d[6] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						e[6] == dashmoji &&
						f[6] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[6] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[6] == `${Args.user == 0 ? o_emoji : x_emoji}`
					)
						e[6] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						e[6] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[6] == dashmoji &&
						c[6] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[6] == `${Args.user == 0 ? o_emoji : x_emoji}`
					)
						f[6] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						e[6] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[6] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[6] == dashmoji &&
						d[6] == `${Args.user == 0 ? o_emoji : x_emoji}`
					)
						c[6] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						e[6] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[6] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[6] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[6] == dashmoji
					)
						d[6] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						e[6] == dashmoji &&
						f[6] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						g[6] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[6] == `${Args.user == 0 ? o_emoji : x_emoji}`
					)
						e[6] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						e[6] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[6] == dashmoji &&
						g[6] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[6] == `${Args.user == 0 ? o_emoji : x_emoji}`
					)
						f[6] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						e[6] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[6] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						g[6] == dashmoji &&
						d[6] == `${Args.user == 0 ? o_emoji : x_emoji}`
					)
						g[6] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						e[6] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[6] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						g[6] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[6] == dashmoji
					)
						d[6] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						a[5] == dashmoji &&
						b[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						a[6] != dashmoji
					)
						a[5] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						a[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[5] == dashmoji &&
						c[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[6] != dashmoji
					)
						b[5] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						a[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[5] == dashmoji &&
						d[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[6] != dashmoji
					)
						c[5] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						a[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[5] == dashmoji &&
						d[6] != dashmoji
					)
						d[5] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						e[5] == dashmoji &&
						b[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						e[6] != dashmoji
					)
						e[5] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						e[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[5] == dashmoji &&
						c[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[6] != dashmoji
					)
						b[5] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						e[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[5] == dashmoji &&
						d[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[6] != dashmoji
					)
						c[5] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						e[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[5] == dashmoji &&
						e[6] != dashmoji
					)
						d[5] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						e[5] == dashmoji &&
						f[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						e[6] != dashmoji
					)
						e[5] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						e[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[5] == dashmoji &&
						c[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[6] != dashmoji
					)
						f[5] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						e[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[5] == dashmoji &&
						d[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[6] != dashmoji
					)
						c[5] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						e[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[5] == dashmoji &&
						d[6] != dashmoji
					)
						d[5] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						e[5] == dashmoji &&
						f[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						g[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						e[6] != dashmoji
					)
						e[5] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						e[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[5] == dashmoji &&
						g[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[6] != dashmoji
					)
						f[5] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						e[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						g[5] == dashmoji &&
						d[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						g[6] != dashmoji
					)
						g[5] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						e[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						g[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[5] == dashmoji &&
						e[6] != dashmoji
					)
						d[5] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						a[4] == dashmoji &&
						b[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						a[5] != dashmoji
					)
						a[4] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						a[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[4] == dashmoji &&
						c[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[5] != dashmoji
					)
						b[4] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						a[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[4] == dashmoji &&
						d[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[5] != dashmoji
					)
						c[4] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						a[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[4] == dashmoji &&
						d[5] != dashmoji
					)
						d[4] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						e[4] == dashmoji &&
						b[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						e[5] != dashmoji
					)
						e[4] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						e[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[4] == dashmoji &&
						c[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[5] != dashmoji
					)
						b[4] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						e[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[4] == dashmoji &&
						d[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[5] != dashmoji
					)
						c[4] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						e[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[4] == dashmoji &&
						d[5] != dashmoji
					)
						d[4] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						e[4] == dashmoji &&
						f[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						e[5] != dashmoji
					)
						e[4] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						e[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[4] == dashmoji &&
						c[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[5] != dashmoji
					)
						f[4] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						e[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[4] == dashmoji &&
						d[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[5] != dashmoji
					)
						c[4] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						e[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[4] == dashmoji &&
						d[5] != dashmoji
					)
						d[4] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						e[4] == dashmoji &&
						f[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						g[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						e[5] != dashmoji
					)
						e[4] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						e[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[4] == dashmoji &&
						g[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[5] != dashmoji
					)
						f[4] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						e[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						g[4] == dashmoji &&
						d[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						g[5] != dashmoji
					)
						g[4] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						e[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						g[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[4] == dashmoji &&
						d[5] != dashmoji
					)
						d[4] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						a[3] == dashmoji &&
						b[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						a[4] != dashmoji
					)
						a[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						a[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[3] == dashmoji &&
						c[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[4] != dashmoji
					)
						b[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						a[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[3] == dashmoji &&
						d[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[4] != dashmoji
					)
						c[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						a[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[3] == dashmoji &&
						d[4] != dashmoji
					)
						d[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					
					else if (
						e[3] == dashmoji &&
						b[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						e[4] != dashmoji
					)
						e[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						e[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[3] == dashmoji &&
						c[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[4] != dashmoji
					)
						b[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						e[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[3] == dashmoji &&
						d[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[4] != dashmoji
					)
						c[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						e[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[3] == dashmoji &&
						d[4] != dashmoji
					)
						d[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					
					else if (
						e[3] == dashmoji &&
						f[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						e[4] != dashmoji
					)
						e[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						e[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[3] == dashmoji &&
						c[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[4] != dashmoji
					)
						f[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						e[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[3] == dashmoji &&
						d[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[4] != dashmoji
					)
						c[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						e[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[3] == dashmoji &&
						d[4] != dashmoji
					)
						d[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					
					else if (
						e[3] == dashmoji &&
						f[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						g[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						e[4] != dashmoji
					)
						e[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						e[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[3] == dashmoji &&
						g[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[4] != dashmoji
					)
						f[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						e[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						g[3] == dashmoji &&
						d[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						g[4] != dashmoji
					)
						g[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						e[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						g[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[3] == dashmoji &&
						d[4] != dashmoji
					)
						d[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					
					else if (
						a[2] == dashmoji &&
						b[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						a[3] != dashmoji
					)
						a[2] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						a[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[2] == dashmoji &&
						c[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[3] != dashmoji
					)
						b[2] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						a[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[2] == dashmoji &&
						d[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[3] != dashmoji
					)
						c[2] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						a[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[2] == dashmoji &&
						d[3] != dashmoji
					)
						d[2] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					
					else if (
						e[2] == dashmoji &&
						b[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						e[3] != dashmoji
					)
						e[2] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						e[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[2] == dashmoji &&
						c[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[3] != dashmoji
					)
						b[2] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						e[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[2] == dashmoji &&
						d[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[3] != dashmoji
					)
						c[2] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						e[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[2] == dashmoji &&
						d[3] != dashmoji
					)
						d[2] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					
					else if (
						e[2] == dashmoji &&
						f[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						e[3] != dashmoji
					)
						e[2] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						e[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[2] == dashmoji &&
						c[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[3] != dashmoji
					)
						f[2] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						e[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[2] == dashmoji &&
						d[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[3] == dashmoji
					)
						c[2] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						e[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[2] == dashmoji &&
						d[3] == dashmoji
					)
						d[2] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					
					else if (
						e[2] == dashmoji &&
						f[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						g[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						e[3] != dashmoji
					)
						e[2] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						e[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[2] == dashmoji &&
						g[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[3] != dashmoji
					)
						f[2] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						e[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						g[2] == dashmoji &&
						d[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						g[3] != dashmoji
					)
						g[2] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						e[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						g[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[2] == dashmoji &&
						d[3] != dashmoji
					)
						d[2] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					////////////////
					else if (
						a[1] == dashmoji &&
						b[1] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[1] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[1] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						a[2] != dashmoji
					)
						a[1] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						a[1] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[1] == dashmoji &&
						c[1] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[1] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[2] != dashmoji
					)
						b[1] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						a[1] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[1] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[1] == dashmoji &&
						d[1] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[2] != dashmoji
					)
						c[1] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						a[1] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[1] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[1] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[1] == dashmoji &&
						d[2] != dashmoji
					)
						d[1] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					////
					else if (
						e[1] == dashmoji &&
						b[1] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[1] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[1] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						e[2] != dashmoji
					)
						e[1] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						e[1] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[1] == dashmoji &&
						c[1] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[1] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[2] != dashmoji
					)
						b[1] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						e[1] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[1] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[1] == dashmoji &&
						d[1] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[2] != dashmoji
					)
						c[1] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						e[1] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[1] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[1] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[1] == dashmoji &&
						d[2] != dashmoji
					)
						d[1] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					/////////////
					else if (
						e[1] == dashmoji &&
						f[1] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[1] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[1] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						e[2] != dashmoji
					)
						e[1] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						e[1] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[1] == dashmoji &&
						c[1] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[1] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[2] != dashmoji
					)
						f[1] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						e[1] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[1] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[1] == dashmoji &&
						d[1] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
					
						c[2] != dashmoji
					)
						c[1] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						e[1] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[1] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[1] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[1] == dashmoji &&
						d[2] != dashmoji
					)
						d[1] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					////////////
					else if (
						e[1] == dashmoji &&
						f[1] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						g[1] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[1] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						e[2] != dashmoji
					)
						e[1] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					
					else if (
						e[1] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[1] == dashmoji &&
						g[1] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[1] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[2] != dashmoji
					)
						f[1] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						e[1] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[1] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						g[1] == dashmoji &&
						d[1] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						g[2] != dashmoji
					)
						g[1]
					else if (
						e[1] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[1] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						g[1] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[1] == dashmoji &&
						d[2] != dashmoji
					)
						d[1] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					/////////////////////////
					else if (
						a[3] == dashmoji &&
						b[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[6] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						a[4] != dashmoji
					)
						a[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					
					else if (
						a[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[4] == dashmoji &&
						c[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[6] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[5] != dashmoji
					)
						b[4] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						a[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[5] == dashmoji &&
						d[6] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[6] != dashmoji
					)
						c[5] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						a[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[6] == dashmoji
					)
						d[6] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					////////////////////////////////////////
					else if (
						a[2] == dashmoji &&
						b[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						a[3] != dashmoji
					)
						a[2] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					
					else if (
						a[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[3] == dashmoji &&
						c[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[4] != dashmoji
					)
						b[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						a[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[4] == dashmoji &&
						d[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[5] != dashmoji
					)
						c[4] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						a[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[5] == dashmoji &&
						d[6] != dashmoji
					)
						d[5] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					
					//////////////////
					else if (
						e[6] == dashmoji &&
						b[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[5] == `${Args.user == 0 ? o_emoji : x_emoji}`
					)
						e[6] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					
					else if (
						e[6] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[3] == dashmoji &&
						c[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[4] != dashmoji
					)
						b[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						e[6] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[4] == dashmoji &&
						d[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[5] != dashmoji
					)
						c[4] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						e[6] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[5] == dashmoji &&
						d[6] != dashmoji
					)
						d[5] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					/////////////////////////////
					else if (
						a[1] == dashmoji &&
						b[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						a[2] != dashmoji
					)
						a[1] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					
					else if (
						a[1] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[2] == dashmoji &&
						c[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[3] != dashmoji
					)
						b[2] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						a[1] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[3] == dashmoji &&
						d[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[4] != dashmoji
					)
						c[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						a[1] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[4] == dashmoji &&
						d[5] != dashmoji
					)
						d[4] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					///////////////////////////////////
					else if (
						e[5] == dashmoji &&
						b[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						e[6] != dashmoji
					)
						e[5] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					
					else if (
						e[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[2] == dashmoji &&
						c[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[3] != dashmoji
					)
						b[2] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						e[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[3] == dashmoji &&
						d[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[4] != dashmoji
					)
						c[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						e[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[4] == dashmoji &&
						d[5] != dashmoji
					)
						d[4] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					//////////////////////////////
					else if (
						e[5] == dashmoji &&
						f[6] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						e[6] != dashmoji
					)
						e[5] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					
					else if (
						e[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[6] == dashmoji &&
						c[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[4] == `${Args.user == 0 ? o_emoji : x_emoji}`
					)
						f[6] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						e[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[6] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[3] == dashmoji &&
						d[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[4] != dashmoji
					)
						c[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						e[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[6] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[4] == dashmoji &&
						d[5] != dashmoji
					)
						d[4] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					//////////////////////
					else if (
						e[4] == dashmoji &&
						b[1] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						e[5] != dashmoji
					)
						e[4] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					
					else if (
						e[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[1] == dashmoji &&
						c[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[2] != dashmoji
					)
						b[1] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						e[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[1] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[2] == dashmoji &&
						d[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[3] != dashmoji
					)
						c[2] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						e[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[1] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[3] == dashmoji &&
						d[4] != dashmoji
					)
						d[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					/////////////////////////////
					else if (
						e[4] == dashmoji &&
						f[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						e[5] != dashmoji
					)
						e[4] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					
					else if (
						e[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[5] == dashmoji &&
						c[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[6] != dashmoji
					)
						f[5] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						e[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[2] == dashmoji &&
						d[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[3] != dashmoji
					)
						c[2] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						e[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[3] == dashmoji &&
						d[4] != dashmoji
					)
						d[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					///////////////////////////////////
					else if (
						e[4] == dashmoji &&
						f[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						g[6] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						e[5] != dashmoji
					)
						e[4] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					
					else if (
						e[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[5] == dashmoji &&
						g[6] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[6] != dashmoji
					)
						f[5] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						e[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						g[6] == dashmoji &&
						d[3] == `${Args.user == 0 ? o_emoji : x_emoji}`
					
					)
						g[6] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						e[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						g[6] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[3] == dashmoji &&
						d[4] != dashmoji
					)
						d[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					//////////////////////////////////
					else if (
						c[1] == dashmoji &&
						d[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						e[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[2] != dashmoji
					
					)
						c[1] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					
					else if (
						c[1] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[2] == dashmoji &&
						e[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[3] != dashmoji
					
					)
						d[2] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						c[1] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						e[3] == dashmoji &&
						f[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						e[4] != dashmoji
					
					)
						e[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						c[1] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						e[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[4] == dashmoji &&
						f[5] != dashmoji
					
					)
						f[4] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					/////////////////////////////
					else if (
						g[5] == dashmoji &&
						d[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						e[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						g[6] != dashmoji
					
					)
						g[5] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					
					else if (
						g[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[2] == dashmoji &&
						e[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[3] != dashmoji
					
					)
						d[2] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						g[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						e[3] == dashmoji &&
						f[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
							e[4] != dashmoji
						
						)
					e[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						g[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						e[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[4] == dashmoji &&
							f[5] != dashmoji
						
						)
					f[4] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					///////////////////////////////////////
					else if (
						g[4] == dashmoji &&
						d[1] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						e[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						g[5] != dashmoji
					
					)
					g[4] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					
					else if (
						g[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[1] == dashmoji &&
						e[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
							d[2] != dashmoji
						
						)
					d[1] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						g[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[1] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						e[2] == dashmoji &&
						f[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
							e[3] != dashmoji
						
						)
					e[2] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						g[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[1] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						e[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[3] == dashmoji &&
						f[4] != dashmoji
					
					)
						f[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					///////////////////////////
					else if (
						a[4] == dashmoji &&
						b[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[1] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						a[5] != dashmoji
					)
					a[4] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					
					else if (
						a[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[3] == dashmoji &&
						c[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[1] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
							b[4] != dashmoji
						)
					b[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						a[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[2] == dashmoji &&
						d[1] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[3] != dashmoji
					)
						c[2] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						a[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[1] == dashmoji &&
						d[2] != dashmoji
					)
						d[1] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					//////////////////////
					else if (
						a[5] == dashmoji &&
						b[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						a[6] != dashmoji
					)
					a[5] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					
					else if (
						a[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[4] == dashmoji &&
						c[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
							b[5] != dashmoji
						)
					b[4] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						a[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[3] == dashmoji &&
						d[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[4] != dashmoji
					)
						c[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						a[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[2] == dashmoji &&
						d[3] != dashmoji
					)
						d[2] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					/////////////////////////////////
					else if (
						e[1] == dashmoji &&
						b[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						e[2] != dashmoji
					)
						e[1] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					
					else if (
						e[1] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[4] == dashmoji &&
						c[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[5] != dashmoji
					)
						b[4] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						e[1] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[3] == dashmoji &&
						d[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
							c[4] != dashmoji
						)
					c[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						e[1] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[2] == dashmoji &&
						d[3] != dashmoji
					)
						d[2] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					//////////////////////////////////////////
					else if (
						a[6] == dashmoji &&
						b[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[3] == `${Args.user == 0 ? o_emoji : x_emoji}`
					)
						a[6] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					
					else if (
						a[6] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[5] == dashmoji &&
						c[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[6] != dashmoji
					)
						b[5] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						a[6] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[4] == dashmoji &&
						d[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
							c[5] != dashmoji
						)
					c[4] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						a[6] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[3] == dashmoji &&
						d[4] != dashmoji
					)
						d[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					//////////////////
					else if (
						e[2] == dashmoji &&
						b[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						e[3] != dashmoji
					)
						e[2] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					
					else if (
						e[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[5] == dashmoji &&
						c[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[6] != dashmoji
					)
						b[5] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						e[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[4] == dashmoji &&
						d[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
							c[5] != dashmoji
						)
					c[4] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						e[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[3] == dashmoji &&
							d[4] != dashmoji
						)
					d[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					//////////////////////
					else if (
						e[2] == dashmoji &&
						f[1] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						e[3] != dashmoji
					)
						e[2] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					
					else if (
						e[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[1] == dashmoji &&
						c[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[2] != dashmoji
					)
						f[1] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						e[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[1] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[4] == dashmoji &&
						d[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[5] != dashmoji
					)
						c[4] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						e[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[1] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[3] == dashmoji &&
						d[4] != dashmoji
					)
						d[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					///////////////////////////////////
					else if (
						e[3] == dashmoji &&
						b[6] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						e[4] != dashmoji
					)
						e[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					
					else if (
						e[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[6] == dashmoji &&
						c[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[4] == `${Args.user == 0 ? o_emoji : x_emoji}`
					)
						b[6] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						e[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[6] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[5] == dashmoji &&
						d[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[6] != dashmoji
					)
						c[5] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						e[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						b[6] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[4] == dashmoji &&
						d[5] != dashmoji
					)
						d[4] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					///////////////////////////////
					else if (
						e[3] == dashmoji &&
						f[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						e[4] != dashmoji
					)
						e[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					
					else if (
						e[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[2] == dashmoji &&
						c[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[3] != dashmoji
					)
						f[2] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						e[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[5] == dashmoji &&
						d[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[6] != dashmoji
					)
						c[5] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						e[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						c[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[4] == dashmoji &&
						d[5] != dashmoji
					)
						d[4] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					////////////////////////
					else if (
						e[3] == dashmoji &&
						f[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						g[1] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						e[4] != dashmoji
					)
						e[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						e[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[2] == dashmoji &&
						g[1] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
							f[3] != dashmoji
						)
					f[2] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						e[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						g[1] == dashmoji &&
						d[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						g[2] != dashmoji
					)
						g[1] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						e[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						g[1] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[4] == dashmoji &&
						d[5] != dashmoji
					)
						d[4] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					/////////////////////////////
					else if (
						c[6] == dashmoji &&
						d[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						e[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[3] == `${Args.user == 0 ? o_emoji : x_emoji}`
					
					)
						c[6] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						c[6] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[5] == dashmoji &&
						e[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[6] != dashmoji
					
					)
						d[5] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						c[6] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						e[4] == dashmoji &&
						f[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						e[5] != dashmoji
						)
					e[4] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						c[6] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						e[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[3] == dashmoji &&
						f[4] != dashmoji
						)
					f[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					////////////////////////////////////////////
					else if (
						g[2] == dashmoji &&
						d[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						e[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						g[3] != dashmoji
					
					)
						g[2] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					
					else if (
						g[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[5] == dashmoji &&
						e[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[6] != dashmoji
					
					)
						d[5] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						g[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						e[4] == dashmoji &&
						f[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						e[5] != dashmoji
					
					)
						e[4] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						g[2] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						e[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[3] == dashmoji &&
						f[4] != dashmoji
					
					)
						f[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					///////////////////////////////////////
					else if (
						g[3] == dashmoji &&
						d[6] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						e[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						g[4] != dashmoji
					
					)
						g[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					
					else if (
						g[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[6] == dashmoji &&
						e[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[4] == `${Args.user == 0 ? o_emoji : x_emoji}`
					
					)
						d[6] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						g[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[6] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						e[5] == dashmoji &&
						f[4] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						e[6] != dashmoji
					
					)
						e[5] = `${Args.user == 0 ? o_emoji : x_emoji}`;
					else if (
						g[3] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						d[6] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						e[5] == `${Args.user == 0 ? o_emoji : x_emoji}` &&
						f[4] == dashmoji &&
						f[5] != dashmoji
					
					)
						f[4] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							a[6] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							a[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							a[4] == `${Args.user == 0 ? x_emoji : o_emoji}`&&
							a[3] == dashmoji
						)
							a[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
						
							a[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							a[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							a[5] == `${Args.user == 0 ? x_emoji : o_emoji}`&&
							a[2] == dashmoji
						)
							a[2] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
						
							a[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							a[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							a[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							a[1] == dashmoji
						)
							a[1] = `${Args.user == 0 ? o_emoji : x_emoji}`
						else if (
							b[6] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[3] == dashmoji
						
						)
							b[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
						
							b[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[2] == dashmoji
						)
							b[2] = `${Args.user == 0 ? o_emoji : x_emoji}`
						else if (
						
							b[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[1] == dashmoji
						)
							b[1] = `${Args.user == 0 ? o_emoji : x_emoji}`
						else if (
							c[6] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[4] == `${Args.user == 0 ? x_emoji : o_emoji}`  &&
							c[3] == dashmoji
						
						)
							c[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
						
							c[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[2] == dashmoji
						)
							c[2] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
						
							c[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[1] == dashmoji
						)
							c[1] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							d[6] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[4] == `${Args.user == 0 ? x_emoji : o_emoji}`&&
							d[3] == dashmoji
						
						)
							d[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
						
							d[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[5] == `${Args.user == 0 ? x_emoji : o_emoji}`&&
							d[2] == dashmoji
						)
							d[2] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
						
							d[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[4] == `${Args.user == 0 ? x_emoji : o_emoji}`&&
							d[1] == dashmoji
						)
							d[1] = `${Args.user == 0 ? o_emoji : x_emoji}`
						else if (
							e[6] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							e[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							e[4] == `${Args.user == 0 ? x_emoji : o_emoji}`&&
							e[3] == dashmoji
						
						)
							e[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
						
							e[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							e[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							e[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							e[2] == dashmoji
						)
							e[2] = `${Args.user == 0 ? o_emoji : x_emoji}`
						else if (
						
							e[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							e[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							e[4] == `${Args.user == 0 ? x_emoji : o_emoji}`  &&
							e[1] == dashmoji
						)
							e[1] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							f[6] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[3] == dashmoji
						
						)
							f[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
						
							f[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[2] == dashmoji
						)
							f[2] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
						
							f[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[1] == dashmoji
						)
							f[1] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							g[6] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							g[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							g[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
						g[3] == dashmoji
						)
							g[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
						
							g[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							g[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							g[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							g[2] == dashmoji
						)
							g[2] = `${Args.user == 0 ? o_emoji : x_emoji}`
						else if (
						
							g[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							g[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							g[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							g[1] == dashmoji
						)
							g[1] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							a[6] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[6] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[6] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[6] == dashmoji
						)
							d[6] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							a[6] == dashmoji &&
							b[6] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[6] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[6] == `${Args.user == 0 ? x_emoji : o_emoji}`
						)
							a[6] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							a[6] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[6] == dashmoji &&
							c[6] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[6] == `${Args.user == 0 ? x_emoji : o_emoji}`
						)
							b[6] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							a[6] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[6] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[6] == dashmoji &&
							d[6] == `${Args.user == 0 ? x_emoji : o_emoji}`
						)
							c[6] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							e[6] == dashmoji &&
							b[6] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[6] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[6] == `${Args.user == 0 ? x_emoji : o_emoji}`
						)
							e[6] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							e[6] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[6] == dashmoji &&
							c[6] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[6] == `${Args.user == 0 ? x_emoji : o_emoji}`
						)
							b[6] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							e[6] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[6] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[6] == dashmoji &&
							d[6] == `${Args.user == 0 ? x_emoji : o_emoji}`
						)
							c[6] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							e[6] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[6] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[6] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[6] == dashmoji
						)
							d[6] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							e[6] == dashmoji &&
							f[6] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[6] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[6] == `${Args.user == 0 ? x_emoji : o_emoji}`
						)
							e[6] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							e[6] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[6] == dashmoji &&
							c[6] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[6] == `${Args.user == 0 ? x_emoji : o_emoji}`
						)
							f[6] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							e[6] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[6] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[6] == dashmoji &&
							d[6] == `${Args.user == 0 ? x_emoji : o_emoji}`
						)
							c[6] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							e[6] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[6] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[6] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[6] == dashmoji
						)
							d[6] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							e[6] == dashmoji &&
							f[6] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							g[6] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[6] == `${Args.user == 0 ? x_emoji : o_emoji}`
						)
							e[6] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							e[6] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[6] == dashmoji &&
							g[6] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[6] == `${Args.user == 0 ? x_emoji : o_emoji}`
						)
							f[6] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							e[6] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[6] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							g[6] == dashmoji &&
							d[6] == `${Args.user == 0 ? x_emoji : o_emoji}`
						)
							g[6] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							e[6] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[6] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							g[6] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[6] == dashmoji
						)
							d[6] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							a[5] == dashmoji &&
							b[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							a[6] != dashmoji
						)
							a[5] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							a[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[5] == dashmoji &&
							c[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[6] != dashmoji
						)
							b[5] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							a[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[5] == dashmoji &&
							d[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[6] != dashmoji
						)
							c[5] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							a[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[5] == dashmoji &&
							d[6] != dashmoji
						)
							d[5] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							e[5] == dashmoji &&
							b[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							e[6] != dashmoji
						)
							e[5] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							e[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[5] == dashmoji &&
							c[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[6] != dashmoji
						)
							b[5] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							e[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[5] == dashmoji &&
							d[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[6] != dashmoji
						)
							c[5] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							e[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[5] == dashmoji &&
							e[6] != dashmoji
						)
							d[5] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							e[5] == dashmoji &&
							f[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							e[6] != dashmoji
						)
							e[5] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							e[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[5] == dashmoji &&
							c[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[6] != dashmoji
						)
							f[5] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							e[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[5] == dashmoji &&
							d[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[6] != dashmoji
						)
							c[5] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							e[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[5] == dashmoji &&
							d[6] != dashmoji
						)
							d[5] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							e[5] == dashmoji &&
							f[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							g[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							e[6] != dashmoji
						)
							e[5] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							e[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[5] == dashmoji &&
							g[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[6] != dashmoji
						)
							f[5] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							e[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							g[5] == dashmoji &&
							d[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							g[6] != dashmoji
						)
							g[5] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							e[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							g[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[5] == dashmoji &&
							e[6] != dashmoji
						)
							d[5] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							a[4] == dashmoji &&
							b[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							a[5] != dashmoji
						)
							a[4] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							a[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[4] == dashmoji &&
							c[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[5] != dashmoji
						)
							b[4] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							a[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[4] == dashmoji &&
							d[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[5] != dashmoji
						)
							c[4] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							a[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[4] == dashmoji &&
							d[5] != dashmoji
						)
							d[4] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							e[4] == dashmoji &&
							b[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							e[5] != dashmoji
						)
							e[4] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							e[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[4] == dashmoji &&
							c[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[5] != dashmoji
						)
							b[4] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							e[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[4] == dashmoji &&
							d[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[5] != dashmoji
						)
							c[4] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							e[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[4] == dashmoji &&
							d[5] != dashmoji
						)
							d[4] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							e[4] == dashmoji &&
							f[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							e[5] != dashmoji
						)
							e[4] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							e[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[4] == dashmoji &&
							c[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[5] != dashmoji
						)
							f[4] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							e[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[4] == dashmoji &&
							d[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[5] != dashmoji
						)
							c[4] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							e[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[4] == dashmoji &&
							d[5] != dashmoji
						)
							d[4] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							e[4] == dashmoji &&
							f[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							g[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							e[5] != dashmoji
						)
							e[4] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							e[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[4] == dashmoji &&
							g[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[5] != dashmoji
						)
							f[4] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							e[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							g[4] == dashmoji &&
							d[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							g[5] != dashmoji
						)
							g[4] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							e[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							g[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[4] == dashmoji &&
							d[5] != dashmoji
						)
							d[4] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							a[3] == dashmoji &&
							b[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							a[4] != dashmoji
						)
							a[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							a[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[3] == dashmoji &&
							c[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[4] != dashmoji
						)
							b[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							a[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[3] == dashmoji &&
							d[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[4] != dashmoji
						)
							c[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							a[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[3] == dashmoji &&
							d[4] != dashmoji
						)
							d[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						
						else if (
							e[3] == dashmoji &&
							b[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							e[4] != dashmoji
						)
							e[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							e[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[3] == dashmoji &&
							c[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[4] != dashmoji
						)
							b[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							e[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[3] == dashmoji &&
							d[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[4] != dashmoji
						)
							c[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							e[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[3] == dashmoji &&
							d[4] != dashmoji
						)
							d[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						
						else if (
							e[3] == dashmoji &&
							f[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							e[4] != dashmoji
						)
							e[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							e[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[3] == dashmoji &&
							c[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[4] != dashmoji
						)
							f[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							e[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[3] == dashmoji &&
							d[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[4] != dashmoji
						)
							c[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							e[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[3] == dashmoji &&
							d[4] != dashmoji
						)
							d[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						
						else if (
							e[3] == dashmoji &&
							f[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							g[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							e[4] != dashmoji
						)
							e[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							e[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[3] == dashmoji &&
							g[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[4] != dashmoji
						)
							f[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							e[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							g[3] == dashmoji &&
							d[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							g[4] != dashmoji
						)
							g[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							e[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							g[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[3] == dashmoji &&
							d[4] != dashmoji
						)
							d[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						
						else if (
							a[2] == dashmoji &&
							b[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							a[3] != dashmoji
						)
							a[2] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							a[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[2] == dashmoji &&
							c[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[3] != dashmoji
						)
							b[2] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							a[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[2] == dashmoji &&
							d[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[3] != dashmoji
						)
							c[2] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							a[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[2] == dashmoji &&
							d[3] != dashmoji
						)
							d[2] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						
						else if (
							e[2] == dashmoji &&
							b[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							e[3] != dashmoji
						)
							e[2] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							e[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[2] == dashmoji &&
							c[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[3] != dashmoji
						)
							b[2] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							e[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[2] == dashmoji &&
							d[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[3] != dashmoji
						)
							c[2] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							e[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[2] == dashmoji &&
							d[3] != dashmoji
						)
							d[2] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						
						else if (
							e[2] == dashmoji &&
							f[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							e[3] != dashmoji
						)
							e[2] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							e[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[2] == dashmoji &&
							c[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[3] != dashmoji
						)
							f[2] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							e[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[2] == dashmoji &&
							d[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[3] == dashmoji
						)
							c[2] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							e[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[2] == dashmoji &&
							d[3] == dashmoji
						)
							d[2] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						
						else if (
							e[2] == dashmoji &&
							f[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							g[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							e[3] != dashmoji
						)
							e[2] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							e[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[2] == dashmoji &&
							g[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[3] != dashmoji
						)
							f[2] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							e[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							g[2] == dashmoji &&
							d[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							g[3] != dashmoji
						)
							g[2] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							e[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							g[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[2] == dashmoji &&
							d[3] != dashmoji
						)
							d[2] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						////////////////
						else if (
							a[1] == dashmoji &&
							b[1] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[1] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[1] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							a[2] != dashmoji
						)
							a[1] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							a[1] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[1] == dashmoji &&
							c[1] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[1] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[2] != dashmoji
						)
							b[1] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							a[1] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[1] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[1] == dashmoji &&
							d[1] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[2] != dashmoji
						)
							c[1] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							a[1] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[1] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[1] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[1] == dashmoji &&
							d[2] != dashmoji
						)
							d[1] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						////
						else if (
							e[1] == dashmoji &&
							b[1] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[1] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[1] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							e[2] != dashmoji
						)
							e[1] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							e[1] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[1] == dashmoji &&
							c[1] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[1] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[2] != dashmoji
						)
							b[1] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							e[1] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[1] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[1] == dashmoji &&
							d[1] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[2] != dashmoji
						)
							c[1] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							e[1] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[1] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[1] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[1] == dashmoji &&
							d[2] != dashmoji
						)
							d[1] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						/////////////
						else if (
							e[1] == dashmoji &&
							f[1] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[1] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[1] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							e[2] != dashmoji
						)
							e[1] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							e[1] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[1] == dashmoji &&
							c[1] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[1] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[2] != dashmoji
						)
							f[1] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							e[1] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[1] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[1] == dashmoji &&
							d[1] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
						
							c[2] != dashmoji
						)
							c[1] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							e[1] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[1] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[1] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[1] == dashmoji &&
							d[2] != dashmoji
						)
							d[1] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						////////////
						else if (
							e[1] == dashmoji &&
							f[1] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							g[1] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[1] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							e[2] != dashmoji
						)
							e[1] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						
						else if (
							e[1] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[1] == dashmoji &&
							g[1] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[1] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[2] != dashmoji
						)
							f[1] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							e[1] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[1] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							g[1] == dashmoji &&
							d[1] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							g[2] != dashmoji
						)
							g[1]
						else if (
							e[1] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[1] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							g[1] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[1] == dashmoji &&
							d[2] != dashmoji
						)
							d[1] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						/////////////////////////
						else if (
							a[3] == dashmoji &&
							b[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[6] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							a[4] != dashmoji
						)
							a[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						
						else if (
							a[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[4] == dashmoji &&
							c[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[6] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[5] != dashmoji
						)
							b[4] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							a[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[5] == dashmoji &&
							d[6] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[6] != dashmoji
						)
							c[5] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							a[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[6] == dashmoji
						)
							d[6] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						////////////////////////////////////////
						else if (
							a[2] == dashmoji &&
							b[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							a[3] != dashmoji
						)
							a[2] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						
						else if (
							a[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[3] == dashmoji &&
							c[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[4] != dashmoji
						)
							b[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							a[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[4] == dashmoji &&
							d[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[5] != dashmoji
						)
							c[4] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							a[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[5] == dashmoji &&
							d[6] != dashmoji
						)
							d[5] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						
						//////////////////
						else if (
							e[6] == dashmoji &&
							b[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[5] == `${Args.user == 0 ? x_emoji : o_emoji}`
						)
							e[6] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						
						else if (
							e[6] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[3] == dashmoji &&
							c[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[4] != dashmoji
						)
							b[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							e[6] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[4] == dashmoji &&
							d[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[5] != dashmoji
						)
							c[4] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							e[6] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[5] == dashmoji &&
							d[6] != dashmoji
						)
							d[5] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						/////////////////////////////
						else if (
							a[1] == dashmoji &&
							b[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							a[2] != dashmoji
						)
							a[1] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						
						else if (
							a[1] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[2] == dashmoji &&
							c[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[3] != dashmoji
						)
							b[2] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							a[1] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[3] == dashmoji &&
							d[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[4] != dashmoji
						)
							c[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							a[1] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[4] == dashmoji &&
							d[5] != dashmoji
						)
							d[4] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						///////////////////////////////////
						else if (
							e[5] == dashmoji &&
							b[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							e[6] != dashmoji
						)
							e[5] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						
						else if (
							e[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[2] == dashmoji &&
							c[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[3] != dashmoji
						)
							b[2] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							e[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[3] == dashmoji &&
							d[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[4] != dashmoji
						)
							c[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							e[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[4] == dashmoji &&
							d[5] != dashmoji
						)
							d[4] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						//////////////////////////////
						else if (
							e[5] == dashmoji &&
							f[6] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							e[6] != dashmoji
						)
							e[5] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						
						else if (
							e[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[6] == dashmoji &&
							c[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[4] == `${Args.user == 0 ? x_emoji : o_emoji}`
						)
							f[6] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							e[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[6] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[3] == dashmoji &&
							d[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[4] != dashmoji
						)
							c[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							e[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[6] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[4] == dashmoji &&
							d[5] != dashmoji
						)
							d[4] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						//////////////////////
						else if (
							e[4] == dashmoji &&
							b[1] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							e[5] != dashmoji
						)
							e[4] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						
						else if (
							e[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[1] == dashmoji &&
							c[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[2] != dashmoji
						)
							b[1] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							e[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[1] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[2] == dashmoji &&
							d[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[3] != dashmoji
						)
							c[2] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							e[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[1] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[3] == dashmoji &&
							d[4] != dashmoji
						)
							d[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						/////////////////////////////
						else if (
							e[4] == dashmoji &&
							f[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							e[5] != dashmoji
						)
							e[4] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						
						else if (
							e[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[5] == dashmoji &&
							c[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[6] != dashmoji
						)
							f[5] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							e[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[2] == dashmoji &&
							d[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[3] != dashmoji
						)
							c[2] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							e[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[3] == dashmoji &&
							d[4] != dashmoji
						)
							d[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						///////////////////////////////////
						else if (
							e[4] == dashmoji &&
							f[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							g[6] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							e[5] != dashmoji
						)
							e[4] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						
						else if (
							e[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[5] == dashmoji &&
							g[6] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[6] != dashmoji
						)
							f[5] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							e[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							g[6] == dashmoji &&
							d[3] == `${Args.user == 0 ? x_emoji : o_emoji}`
						
						)
							g[6] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							e[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							g[6] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[3] == dashmoji &&
							d[4] != dashmoji
						)
							d[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						//////////////////////////////////
						else if (
							c[1] == dashmoji &&
							d[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							e[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[2] != dashmoji
						
						)
							c[1] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						
						else if (
							c[1] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[2] == dashmoji &&
							e[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[3] != dashmoji
						
						)
							d[2] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							c[1] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							e[3] == dashmoji &&
							f[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							e[4] != dashmoji
						
						)
							e[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							c[1] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							e[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[4] == dashmoji &&
							f[5] != dashmoji
						
						)
							f[4] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						/////////////////////////////
						else if (
							g[5] == dashmoji &&
							d[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							e[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							g[6] != dashmoji
						
						)
							g[5] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						
						else if (
							g[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[2] == dashmoji &&
							e[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[3] != dashmoji
						
						)
							d[2] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							g[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							e[3] == dashmoji &&
							f[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
								e[4] != dashmoji
							
							)
						e[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							g[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							e[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[4] == dashmoji &&
								f[5] != dashmoji
							
							)
						f[4] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						///////////////////////////////////////
						else if (
							g[4] == dashmoji &&
							d[1] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							e[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							g[5] != dashmoji
						
						)
						g[4] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						
						else if (
							g[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[1] == dashmoji &&
							e[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
								d[2] != dashmoji
							
							)
						d[1] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							g[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[1] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							e[2] == dashmoji &&
							f[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
								e[3] != dashmoji
							
							)
						e[2] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							g[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[1] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							e[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[3] == dashmoji &&
							f[4] != dashmoji
						
						)
							f[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						///////////////////////////
						else if (
							a[4] == dashmoji &&
							b[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[1] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							a[5] != dashmoji
						)
						a[4] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						
						else if (
							a[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[3] == dashmoji &&
							c[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[1] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
								b[4] != dashmoji
							)
						b[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							a[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[2] == dashmoji &&
							d[1] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[3] != dashmoji
						)
							c[2] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							a[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[1] == dashmoji &&
							d[2] != dashmoji
						)
							d[1] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						//////////////////////
						else if (
							a[5] == dashmoji &&
							b[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							a[6] != dashmoji
						)
						a[5] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						
						else if (
							a[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[4] == dashmoji &&
							c[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
								b[5] != dashmoji
							)
						b[4] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							a[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[3] == dashmoji &&
							d[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[4] != dashmoji
						)
							c[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							a[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[2] == dashmoji &&
							d[3] != dashmoji
						)
							d[2] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						/////////////////////////////////
						else if (
							e[1] == dashmoji &&
							b[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							e[2] != dashmoji
						)
							e[1] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						
						else if (
							e[1] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[4] == dashmoji &&
							c[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[5] != dashmoji
						)
							b[4] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							e[1] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[3] == dashmoji &&
							d[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
								c[4] != dashmoji
							)
						c[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							e[1] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[2] == dashmoji &&
							d[3] != dashmoji
						)
							d[2] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						//////////////////////////////////////////
						else if (
							a[6] == dashmoji &&
							b[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[3] == `${Args.user == 0 ? x_emoji : o_emoji}`
						)
							a[6] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						
						else if (
							a[6] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[5] == dashmoji &&
							c[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[6] != dashmoji
						)
							b[5] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							a[6] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[4] == dashmoji &&
							d[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
								c[5] != dashmoji
							)
						c[4] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							a[6] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[3] == dashmoji &&
							d[4] != dashmoji
						)
							d[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						//////////////////
						else if (
							e[2] == dashmoji &&
							b[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							e[3] != dashmoji
						)
							e[2] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						
						else if (
							e[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[5] == dashmoji &&
							c[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[6] != dashmoji
						)
							b[5] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							e[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[4] == dashmoji &&
							d[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
								c[5] != dashmoji
							)
						c[4] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							e[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[3] == dashmoji &&
								d[4] != dashmoji
							)
						d[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						//////////////////////
						else if (
							e[2] == dashmoji &&
							f[1] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							e[3] != dashmoji
						)
							e[2] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						
						else if (
							e[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[1] == dashmoji &&
							c[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[2] != dashmoji
						)
							f[1] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							e[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[1] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[4] == dashmoji &&
							d[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[5] != dashmoji
						)
							c[4] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							e[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[1] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[3] == dashmoji &&
							d[4] != dashmoji
						)
							d[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						///////////////////////////////////
						else if (
							e[3] == dashmoji &&
							b[6] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							e[4] != dashmoji
						)
							e[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						
						else if (
							e[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[6] == dashmoji &&
							c[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[4] == `${Args.user == 0 ? x_emoji : o_emoji}`
						)
							b[6] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							e[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[6] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[5] == dashmoji &&
							d[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[6] != dashmoji
						)
							c[5] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							e[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							b[6] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[4] == dashmoji &&
							d[5] != dashmoji
						)
							d[4] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						///////////////////////////////
						else if (
							e[3] == dashmoji &&
							f[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							e[4] != dashmoji
						)
							e[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						
						else if (
							e[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[2] == dashmoji &&
							c[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[3] != dashmoji
						)
							f[2] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							e[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[5] == dashmoji &&
							d[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[6] != dashmoji
						)
							c[5] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							e[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							c[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[4] == dashmoji &&
							d[5] != dashmoji
						)
							d[4] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						////////////////////////
						else if (
							e[3] == dashmoji &&
							f[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							g[1] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							e[4] != dashmoji
						)
							e[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							e[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[2] == dashmoji &&
							g[1] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
								f[3] != dashmoji
							)
						f[2] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							e[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							g[1] == dashmoji &&
							d[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							g[2] != dashmoji
						)
							g[1] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							e[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							g[1] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[4] == dashmoji &&
							d[5] != dashmoji
						)
							d[4] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						/////////////////////////////
						else if (
							c[6] == dashmoji &&
							d[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							e[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[3] == `${Args.user == 0 ? x_emoji : o_emoji}`
						
						)
							c[6] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							c[6] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[5] == dashmoji &&
							e[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[6] != dashmoji
						
						)
							d[5] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							c[6] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							e[4] == dashmoji &&
							f[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							e[5] != dashmoji
							)
						e[4] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							c[6] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							e[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[3] == dashmoji &&
							f[4] != dashmoji
							)
						f[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						////////////////////////////////////////////
						else if (
							g[2] == dashmoji &&
							d[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							e[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							g[3] != dashmoji
						
						)
							g[2] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						
						else if (
							g[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[5] == dashmoji &&
							e[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[6] != dashmoji
						
						)
							d[5] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							g[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							e[4] == dashmoji &&
							f[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							e[5] != dashmoji
						
						)
							e[4] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							g[2] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							e[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[3] == dashmoji &&
							f[4] != dashmoji
						
						)
							f[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						///////////////////////////////////////
						else if (
							g[3] == dashmoji &&
							d[6] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							e[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							g[4] != dashmoji
						
						)
							g[3] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						
						else if (
							g[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[6] == dashmoji &&
							e[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[4] == `${Args.user == 0 ? x_emoji : o_emoji}`
						
						)
							d[6] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							g[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[6] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							e[5] == dashmoji &&
							f[4] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							e[6] != dashmoji
						
						)
							e[5] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						else if (
							g[3] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							d[6] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							e[5] == `${Args.user == 0 ? x_emoji : o_emoji}` &&
							f[4] == dashmoji &&
							f[5] != dashmoji
						
						)
							f[4] = `${Args.user == 0 ? o_emoji : x_emoji}`;
						
						
					
					





else{
					for (ej = 6; 1 <= ej; ej--) {
						let brkst = 0;
						for (r = 1; r <= 7; r++) {
							if (r == 1) {
								if (a[ej] == dashmoji) {
									a[ej] = `${Args.user == 0 ? o_emoji : x_emoji}`
									brkst = 1;
									break;
								}
							}
							if (r == 2) {
								if (b[ej] == dashmoji) {
									b[ej] = `${Args.user == 0 ? o_emoji : x_emoji}`
									brkst = 1;
									break;
								}
							}
							if (r == 3) {
								if (c[ej] == dashmoji) {
									c[ej] = `${Args.user == 0 ? o_emoji : x_emoji}`
									brkst = 1;
									break;
								}
							}
							if (r == 4) {
								if (d[ej] == dashmoji) {
									d[ej] = `${Args.user == 0 ? o_emoji : x_emoji}`
									brkst = 1;
									break;
								}
							}
							if (r == 5) {
								if (e[ej] == dashmoji) {
									e[ej] = `${Args.user == 0 ? o_emoji : x_emoji}`
									brkst = 1;
									break;
								}
							}
							if (r == 6) {
								if (f[ej] == dashmoji) {
									f[ej] = `${Args.user == 0 ? o_emoji : x_emoji}`
									brkst = 1;
									break;
								}
							}
							if (r == 7) {
								if (g[ej] == dashmoji) {
									g[ej] = `${Args.user == 0 ? o_emoji : x_emoji}`
									brkst = 1;
									break;
								}
							}


						}
						if (brkst == 1) {

							break;
						}
					}
				}
				no_of_dash = 0;
						for(checking_empt=1; checking_empt<=6; checking_empt++){

							if(a[checking_empt]==dashmoji||b[checking_empt]==dashmoji||c[checking_empt]==dashmoji||d[checking_empt]==dashmoji||e[checking_empt]==dashmoji||f[checking_empt]==dashmoji||g[checking_empt]==dashmoji){
								no_of_dash = no_of_dash +1;
								break;
							}
						}

						if (no_of_dash == 0) {

							if (
								a[6] == o_emoji &&
								a[5] == o_emoji &&
								a[4] == o_emoji &&
								a[3] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								a[2] == o_emoji &&
								a[3] == o_emoji &&
								a[4] == o_emoji &&
								a[5] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								a[1] == o_emoji &&
								a[2] == o_emoji &&
								a[3] == o_emoji &&
								a[4] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								b[6] == o_emoji &&
								b[5] == o_emoji &&
								b[4] == o_emoji &&
								b[3] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								b[2] == o_emoji &&
								b[3] == o_emoji &&
								b[4] == o_emoji &&
								b[5] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								b[1] == o_emoji &&
								b[2] == o_emoji &&
								b[3] == o_emoji &&
								b[4] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								c[6] == o_emoji &&
								c[5] == o_emoji &&
								c[4] == o_emoji &&
								c[3] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								c[2] == o_emoji &&
								c[3] == o_emoji &&
								c[4] == o_emoji &&
								c[5] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								c[1] == o_emoji &&
								c[2] == o_emoji &&
								c[3] == o_emoji &&
								c[4] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								d[6] == o_emoji &&
								d[5] == o_emoji &&
								d[4] == o_emoji &&
								d[3] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								d[2] == o_emoji &&
								d[3] == o_emoji &&
								d[4] == o_emoji &&
								d[5] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								d[1] == o_emoji &&
								d[2] == o_emoji &&
								d[3] == o_emoji &&
								d[4] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								e[6] == o_emoji &&
								e[5] == o_emoji &&
								e[4] == o_emoji &&
								e[3] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								e[2] == o_emoji &&
								e[3] == o_emoji &&
								e[4] == o_emoji &&
								e[5] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								e[1] == o_emoji &&
								e[2] == o_emoji &&
								e[3] == o_emoji &&
								e[4] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								f[6] == o_emoji &&
								f[5] == o_emoji &&
								f[4] == o_emoji &&
								f[3] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								f[2] == o_emoji &&
								f[3] == o_emoji &&
								f[4] == o_emoji &&
								f[5] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								f[1] == o_emoji &&
								f[2] == o_emoji &&
								f[3] == o_emoji &&
								f[4] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								g[6] == o_emoji &&
								g[5] == o_emoji &&
								g[4] == o_emoji &&
								g[3] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								g[2] == o_emoji &&
								g[3] == o_emoji &&
								g[4] == o_emoji &&
								g[5] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								g[1] == o_emoji &&
								g[2] == o_emoji &&
								g[3] == o_emoji &&
								g[4] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								a[6] == o_emoji &&
								b[6] == o_emoji &&
								c[6] == o_emoji &&
								d[6] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								e[6] == o_emoji &&
								b[6] == o_emoji &&
								c[6] == o_emoji &&
								d[6] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								e[6] == o_emoji &&
								f[6] == o_emoji &&
								c[6] == o_emoji &&
								d[6] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								e[6] == o_emoji &&
								f[6] == o_emoji &&
								g[6] == o_emoji &&
								d[6] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								a[5] == o_emoji &&
								b[5] == o_emoji &&
								c[5] == o_emoji &&
								d[5] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								e[5] == o_emoji &&
								b[5] == o_emoji &&
								c[5] == o_emoji &&
								d[5] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								e[5] == o_emoji &&
								f[5] == o_emoji &&
								c[5] == o_emoji &&
								d[5] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								e[5] == o_emoji &&
								f[5] == o_emoji &&
								g[5] == o_emoji &&
								d[5] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								a[4] == o_emoji &&
								b[4] == o_emoji &&
								c[4] == o_emoji &&
								d[4] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								e[4] == o_emoji &&
								b[4] == o_emoji &&
								c[4] == o_emoji &&
								d[4] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								e[4] == o_emoji &&
								f[4] == o_emoji &&
								c[4] == o_emoji &&
								d[4] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								e[4] == o_emoji &&
								f[4] == o_emoji &&
								g[4] == o_emoji &&
								d[4] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								a[3] == o_emoji &&
								b[3] == o_emoji &&
								c[3] == o_emoji &&
								d[3] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								e[3] == o_emoji &&
								b[3] == o_emoji &&
								c[3] == o_emoji &&
								d[3] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								e[3] == o_emoji &&
								f[3] == o_emoji &&
								c[3] == o_emoji &&
								d[3] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								e[3] == o_emoji &&
								f[3] == o_emoji &&
								g[3] == o_emoji &&
								d[3] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								a[2] == o_emoji &&
								b[2] == o_emoji &&
								c[2] == o_emoji &&
								d[2] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								e[2] == o_emoji &&
								b[2] == o_emoji &&
								c[2] == o_emoji &&
								d[2] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								e[2] == o_emoji &&
								f[2] == o_emoji &&
								c[2] == o_emoji &&
								d[2] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								e[2] == o_emoji &&
								f[2] == o_emoji &&
								g[2] == o_emoji &&
								d[2] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								a[1] == o_emoji &&
								b[1] == o_emoji &&
								c[1] == o_emoji &&
								d[1] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								e[1] == o_emoji &&
								b[1] == o_emoji &&
								c[1] == o_emoji &&
								d[1] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								e[1] == o_emoji &&
								f[1] == o_emoji &&
								c[1] == o_emoji &&
								d[1] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								e[1] == o_emoji &&
								f[1] == o_emoji &&
								g[1] == o_emoji &&
								d[1] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								a[3] == o_emoji &&
								b[4] == o_emoji &&
								c[5] == o_emoji &&
								d[6] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								a[2] == o_emoji &&
								b[3] == o_emoji &&
								c[4] == o_emoji &&
								d[5] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								e[6] == o_emoji &&
								b[3] == o_emoji &&
								c[4] == o_emoji &&
								d[5] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								a[1] == o_emoji &&
								b[2] == o_emoji &&
								c[3] == o_emoji &&
								d[4] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								e[5] == o_emoji &&
								b[2] == o_emoji &&
								c[3] == o_emoji &&
								d[4] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								e[5] == o_emoji &&
								f[6] == o_emoji &&
								c[3] == o_emoji &&
								d[4] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								e[4] == o_emoji &&
								b[1] == o_emoji &&
								c[2] == o_emoji &&
								d[3] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								e[4] == o_emoji &&
								f[5] == o_emoji &&
								c[2] == o_emoji &&
								d[3] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								e[4] == o_emoji &&
								f[5] == o_emoji &&
								g[6] == o_emoji &&
								d[3] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								c[1] == o_emoji &&
								d[2] == o_emoji &&
								e[3] == o_emoji &&
								f[4] == o_emoji
			
							)
								won["<:yellow_square:>"] = true;
							if (
								g[5] == o_emoji &&
								d[2] == o_emoji &&
								e[3] == o_emoji &&
								f[4] == o_emoji
			
							)
								won["<:yellow_square:>"] = true;
							if (
								g[4] == o_emoji &&
								d[1] == o_emoji &&
								e[2] == o_emoji &&
								f[3] == o_emoji
			
							)
								won["<:yellow_square:>"] = true;
							if (
								a[4] == o_emoji &&
								b[3] == o_emoji &&
								c[2] == o_emoji &&
								d[1] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								a[5] == o_emoji &&
								b[4] == o_emoji &&
								c[3] == o_emoji &&
								d[2] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								e[1] == o_emoji &&
								b[4] == o_emoji &&
								c[3] == o_emoji &&
								d[2] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								a[6] == o_emoji &&
								b[5] == o_emoji &&
								c[4] == o_emoji &&
								d[3] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								e[2] == o_emoji &&
								b[5] == o_emoji &&
								c[4] == o_emoji &&
								d[3] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								e[2] == o_emoji &&
								f[1] == o_emoji &&
								c[4] == o_emoji &&
								d[3] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								e[3] == o_emoji &&
								b[6] == o_emoji &&
								c[5] == o_emoji &&
								d[4] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								e[3] == o_emoji &&
								f[2] == o_emoji &&
								c[5] == o_emoji &&
								d[4] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								e[3] == o_emoji &&
								f[2] == o_emoji &&
								g[1] == o_emoji &&
								d[4] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								c[6] == o_emoji &&
								d[5] == o_emoji &&
								e[4] == o_emoji &&
								f[3] == o_emoji
			
							)
								won["<:yellow_square:>"] = true;
							if (
								g[2] == o_emoji &&
								d[5] == o_emoji &&
								e[4] == o_emoji &&
								f[3] == o_emoji
			
							)
								won["<:yellow_square:>"] = true;
							if (
								g[3] == o_emoji &&
								d[6] == o_emoji &&
								e[5] == o_emoji &&
								f[4] == o_emoji
			
							)
								won["<:yellow_square:>"] = true;

							const xoemb5 = new MessageEmbed()
								.setTitle('Connect 4')
								.setDescription(
									`Round over`
								)
								.addFields(

									{
										name: `🟡 | ${fighters[0] == interaction.user.id ? `${interaction.user.username}` : `Coco Arcade`
											}`, value: `:warning: Draw`, inline: true
									},
									{
										name: `🔴 | ${fighters[0] == interaction.user.id ? `Coco Arcade` : `${interaction.user.username}`
											}`, value: `:warning: Draw`, inline: true
									},
								)
								.setColor('#36393F')
								;
							if (won["<:yellow_square:>"] == true) return connects(m);
							else if (won["<:red_square:>"] == true) return;
							else {
								return m.edit({ content: `It's a tie!\n${o[1]}${o[2]}${o[3]}${o[4]}${o[5]}${o[6]}${o[7]}\n${a[1]}${b[1]}${c[1]}${d[1]}${e[1]}${f[1]}${g[1]}\n${a[2]}${b[2]}${c[2]}${d[2]}${e[2]}${f[2]}${g[2]}\n${a[3]}${b[3]}${c[3]}${d[3]}${e[3]}${f[3]}${g[3]}\n${a[4]}${b[4]}${c[4]}${d[4]}${e[4]}${f[4]}${g[4]}\n${a[5]}${b[5]}${c[5]}${d[5]}${e[5]}${f[5]}${g[5]}\n${a[6]}${b[6]}${c[6]}${d[6]}${e[6]}${f[6]}${g[6]}`, embeds: [xoemb5], components: [] })
							}
						}
					await wait(8000);
					if (Args.user == 0) {
						y = r;
						o[1] = "<:tstd:892959158893174834>";
										o[2] = "<:tstd:892959158893174834>";
										o[3] = "<:tstd:892959158893174834>";
										o[4] = "<:tstd:892959158893174834>";
										o[5] = "<:tstd:892959158893174834>";
										o[6] = "<:tstd:892959158893174834>";
										o[7] = "<:tstd:892959158893174834>";
						o[y] = "<:ystd:891239779377754123>"
						o[n] = "<:rtd:891239779356774400>"
						// a[6]=o_emoji;
						Args.user = 1;
					} else {
						n = r;
						o[1] = "<:tstd:892959158893174834>";
										o[2] = "<:tstd:892959158893174834>";
										o[3] = "<:tstd:892959158893174834>";
										o[4] = "<:tstd:892959158893174834>";
										o[5] = "<:tstd:892959158893174834>";
										o[6] = "<:tstd:892959158893174834>";
										o[7] = "<:tstd:892959158893174834>";
						o[n] = "<:rstd:891239779365175297>"
						o[y] = "<:ytd:891239779549732874>"
						//	a[6]=x_emoji;
						Args.user = 0;
					}
					disabst = false;
					return connects(m);
				}

				ll = new MessageButton()
					.setStyle(Args.ll.style)
					.setEmoji(Args.ll.emoji)
					.setCustomId("ll")
					.setDisabled(disabst);
				l = new MessageButton()
					.setStyle(Args.l.style)
					.setEmoji(Args.l.emoji)
					.setCustomId("l")
					.setDisabled(disabst);
				mid = new MessageButton()
					.setStyle(Args.mid.style)
					.setEmoji(Args.mid.emoji)
					.setCustomId("mid")
					.setDisabled(disabst);
				r = new MessageButton()
					.setStyle(Args.r.style)
					.setEmoji(Args.r.emoji)
					.setCustomId("r")
					.setDisabled(disabst);
				rr = new MessageButton()
					.setStyle(Args.rr.style)
					.setEmoji(Args.rr.emoji)
					.setCustomId("rr")
					.setDisabled(disabst);
				x = new MessageActionRow().addComponents([ll, l, mid, r, rr]);
				m.edit({
					content: `${Args.userid == interaction.user.id ? `${interaction.user.username}'s turn|${Args.user == 0 ? '🟡' : "🔴"}` : `Coco Arcade is thinking`
						}\n${o[1]}${o[2]}${o[3]}${o[4]}${o[5]}${o[6]}${o[7]}\n${a[1]}${b[1]}${c[1]}${d[1]}${e[1]}${f[1]}${g[1]}\n${a[2]}${b[2]}${c[2]}${d[2]}${e[2]}${f[2]}${g[2]}\n${a[3]}${b[3]}${c[3]}${d[3]}${e[3]}${f[3]}${g[3]}\n${a[4]}${b[4]}${c[4]}${d[4]}${e[4]}${f[4]}${g[4]}\n${a[5]}${b[5]}${c[5]}${d[5]}${e[5]}${f[5]}${g[5]}\n${a[6]}${b[6]}${c[6]}${d[6]}${e[6]}${f[6]}${g[6]}`,
					components: [x], embeds: [xoemb]
				});

				const collector = m.createMessageComponentCollector({
					componentType: "BUTTON",
					max: 1,
					time: 180000
				});

				collector.on("collect", (t) => {
					if (t.user.id !== Args.userid) {
						t.reply({
							content: "You cant play now",
							ephemeral: true
						});

						connects(m);
					} else {
						if (Args.user == 0) {
							o[y] = "<:ytd:891239779549732874>"
							if (t.customId == "ll")
								y = 1
							o[1] = "<:tstd:892959158893174834>";
							o[2] = "<:tstd:892959158893174834>";
							o[3] = "<:tstd:892959158893174834>";
							o[4] = "<:tstd:892959158893174834>";
							o[5] = "<:tstd:892959158893174834>";
							o[6] = "<:tstd:892959158893174834>";
							o[7] = "<:tstd:892959158893174834>";
							o[n] = "<:rstd:891239779365175297>"
							o[y] = "<:ytd:891239779549732874>"
							if (t.customId == "l") {
								y = y - 1;
								if (y < 1) {
									y = 1
								}
								o[1] = "<:tstd:892959158893174834>";
								o[2] = "<:tstd:892959158893174834>";
								o[3] = "<:tstd:892959158893174834>";
								o[4] = "<:tstd:892959158893174834>";
								o[5] = "<:tstd:892959158893174834>";
								o[6] = "<:tstd:892959158893174834>";
								o[7] = "<:tstd:892959158893174834>";
								o[n] = "<:rstd:891239779365175297>"
								o[y] = "<:ytd:891239779549732874>"
							};
							if (t.customId == "rr")
								y = 7;
							o[1] = "<:tstd:892959158893174834>";
							o[2] = "<:tstd:892959158893174834>";
							o[3] = "<:tstd:892959158893174834>";
							o[4] = "<:tstd:892959158893174834>";
							o[5] = "<:tstd:892959158893174834>";
							o[6] = "<:tstd:892959158893174834>";
							o[7] = "<:tstd:892959158893174834>";
							o[n] = "<:rstd:891239779365175297>"
							o[y] = "<:ytd:891239779549732874>"
							if (t.customId == "r") {
								y = y + 1;
								if (y > 7) {
									y = 7
								}
								o[1] = "<:tstd:892959158893174834>";
								o[2] = "<:tstd:892959158893174834>";
								o[3] = "<:tstd:892959158893174834>";
								o[4] = "<:tstd:892959158893174834>";
								o[5] = "<:tstd:892959158893174834>";
								o[6] = "<:tstd:892959158893174834>";
								o[7] = "<:tstd:892959158893174834>";
								o[n] = "<:rstd:891239779365175297>"
								o[y] = "<:ytd:891239779549732874>"
							};
							if (t.customId == "mid") {

								if (y == 1) {
									for (w = 6; w >= 1;) {
										if (a[w] == dashmoji) {
											a[w] = o_emoji
											Args.user = 1;

											o[y] = "<:ystd:891239779377754123>"
											o[n] = "<:rtd:891239779356774400>"
											break;
										}
										else w--
									};
								}

								else if (y == 2) {
									for (w = 6; w >= 1;) {
										if (b[w] == dashmoji) {
											b[w] = o_emoji
											Args.user = 1;

											o[y] = "<:ystd:891239779377754123>"
											o[n] = "<:rtd:891239779356774400>"
											break;
										}
										else w--
									};
								}
								else if (y == 3) {
									for (w = 6; w >= 1;) {
										if (c[w] == dashmoji) {
											c[w] = o_emoji
											Args.user = 1;

											o[y] = "<:ystd:891239779377754123>"
											o[n] = "<:rtd:891239779356774400>"
											break;
										}
										else w--
									};
								}
								else if (y == 4) {
									for (w = 6; w >= 1;) {
										if (d[w] == dashmoji) {
											d[w] = o_emoji
											Args.user = 1;

											o[y] = "<:ystd:891239779377754123>"
											o[n] = "<:rtd:891239779356774400>"

											break;
										}
										else w--
									};
								}
								else if (y == 5) {
									for (w = 6; w >= 1;) {
										if (e[w] == dashmoji) {
											e[w] = o_emoji
											Args.user = 1;
											o[y] = "<:ystd:891239779377754123>"
											o[n] = "<:rtd:891239779356774400>"

											break;
										}
										else w--
									};
								}
								else if (y == 6) {
									for (w = 6; w >= 1;) {
										if (f[w] == dashmoji) {
											f[w] = o_emoji
											Args.user = 1;
											o[y] = "<:ystd:891239779377754123>"
											o[n] = "<:rtd:891239779356774400>"

											break;
										}
										else w--
									};
								}
								else if (y == 7) {
									for (w = 6; w >= 1;) {
										if (g[w] == dashmoji) {
											g[w] = o_emoji
											Args.user = 1;
											o[y] = "<:ystd:891239779377754123>"
											o[n] = "<:rtd:891239779356774400>"

											break;
										}
										else w--
									};
								}


							}





						} else {
							o[n] = "<:rtd:891239779356774400>"
							if (t.customId == "ll")
								n = 1;
							o[1] = "<:tstd:892959158893174834>";
							o[2] = "<:tstd:892959158893174834>";
							o[3] = "<:tstd:892959158893174834>";
							o[4] = "<:tstd:892959158893174834>";
							o[5] = "<:tstd:892959158893174834>";
							o[6] = "<:tstd:892959158893174834>";
							o[7] = "<:tstd:892959158893174834>";
							o[y] = "<:ystd:891239779377754123>"
							o[n] = "<:rtd:891239779356774400>"
							if (t.customId == "l") {
								n = n - 1;
								if (n < 1) {
									n = 1
								}
								o[1] = "<:tstd:892959158893174834>";
								o[2] = "<:tstd:892959158893174834>";
								o[3] = "<:tstd:892959158893174834>";
								o[4] = "<:tstd:892959158893174834>";
								o[5] = "<:tstd:892959158893174834>";
								o[6] = "<:tstd:892959158893174834>";
								o[7] = "<:tstd:892959158893174834>";
								o[y] = "<:ystd:891239779377754123>"
								o[n] = "<:rtd:891239779356774400>"
							};
							if (t.customId == "rr")
								n = 7;
							o[1] = "<:tstd:892959158893174834>";
							o[2] = "<:tstd:892959158893174834>";
							o[3] = "<:tstd:892959158893174834>";
							o[4] = "<:tstd:892959158893174834>";
							o[5] = "<:tstd:892959158893174834>";
							o[6] = "<:tstd:892959158893174834>";
							o[7] = "<:tstd:892959158893174834>";
							o[y] = "<:ystd:891239779377754123>"
							o[n] = "<:rtd:891239779356774400>"
							if (t.customId == "r") {
								n = n + 1;
								if (n > 7) {
									n = 7
								}
								o[1] = "<:tstd:892959158893174834>";
								o[2] = "<:tstd:892959158893174834>";
								o[3] = "<:tstd:892959158893174834>";
								o[4] = "<:tstd:892959158893174834>";
								o[5] = "<:tstd:892959158893174834>";
								o[6] = "<:tstd:892959158893174834>";
								o[7] = "<:tstd:892959158893174834>";
								o[y] = "<:ystd:891239779377754123>"
								o[n] = "<:rtd:891239779356774400>"
							};
							if (t.customId == "mid") {

								if (n == 1) {
									for (w = 6; w >= 1;) {
										if (a[w] == dashmoji) {
											a[w] = x_emoji
											Args.user = 0;

											o[n] = "<:rstd:891239779365175297>"
											o[y] = "<:ytd:891239779549732874>"
											break;
										}
										else w--
									};
								}

								else if (n == 2) {
									for (w = 6; w >= 1;) {
										if (b[w] == dashmoji) {
											b[w] = x_emoji
											Args.user = 0;

											o[n] = "<:rstd:891239779365175297>"
											o[y] = "<:ytd:891239779549732874>"
											break;
										}
										else w--
									};
								}
								else if (n == 3) {
									for (w = 6; w >= 1;) {
										if (c[w] == dashmoji) {
											c[w] = x_emoji
											Args.user = 0;
											o[n] = "<:rstd:891239779365175297>"
											o[y] = "<:ytd:891239779549732874>"
											break;
										}
										else w--
									};
								}
								else if (n == 4) {
									for (w = 6; w >= 1;) {
										if (d[w] == dashmoji) {
											d[w] = x_emoji
											Args.user = 0;
											o[n] = "<:rstd:891239779365175297>"
											o[y] = "<:ytd:891239779549732874>"
											break;
										}
										else w--
									};
								}
								else if (n == 5) {
									for (w = 6; w >= 1;) {
										if (e[w] == dashmoji) {
											e[w] = x_emoji
											Args.user = 0;
											o[n] = "<:rstd:891239779365175297>"
											o[y] = "<:ytd:891239779549732874>"
											break;
										}
										else w--
									};
								}
								else if (n == 6) {
									for (w = 6; w >= 1;) {
										if (f[w] == dashmoji) {
											f[w] = x_emoji
											Args.user = 0;
											o[n] = "<:rstd:891239779365175297>"
											o[y] = "<:ytd:891239779549732874>"
											break;
										}
										else w--
									};
								}
								else if (n == 7) {
									for (w = 6; w >= 1;) {
										if (g[w] == dashmoji) {
											g[w] = x_emoji
											Args.user = 0;
											o[n] = "<:rstd:891239779365175297>"
											o[y] = "<:ytd:891239779549732874>"
											break;
										}
										else w--
									};
								}


							}





						}
						t.deferUpdate();
						no_of_dash = 0;
						for(checking_empt=1; checking_empt<=6; checking_empt++){

							if(a[checking_empt]==dashmoji||b[checking_empt]==dashmoji||c[checking_empt]==dashmoji||d[checking_empt]==dashmoji||e[checking_empt]==dashmoji||f[checking_empt]==dashmoji||g[checking_empt]==dashmoji){
								no_of_dash = no_of_dash +1;
								break;
							}
						}

						if (no_of_dash == 0) {

							if (
								a[6] == o_emoji &&
								a[5] == o_emoji &&
								a[4] == o_emoji &&
								a[3] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								a[2] == o_emoji &&
								a[3] == o_emoji &&
								a[4] == o_emoji &&
								a[5] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								a[1] == o_emoji &&
								a[2] == o_emoji &&
								a[3] == o_emoji &&
								a[4] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								b[6] == o_emoji &&
								b[5] == o_emoji &&
								b[4] == o_emoji &&
								b[3] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								b[2] == o_emoji &&
								b[3] == o_emoji &&
								b[4] == o_emoji &&
								b[5] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								b[1] == o_emoji &&
								b[2] == o_emoji &&
								b[3] == o_emoji &&
								b[4] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								c[6] == o_emoji &&
								c[5] == o_emoji &&
								c[4] == o_emoji &&
								c[3] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								c[2] == o_emoji &&
								c[3] == o_emoji &&
								c[4] == o_emoji &&
								c[5] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								c[1] == o_emoji &&
								c[2] == o_emoji &&
								c[3] == o_emoji &&
								c[4] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								d[6] == o_emoji &&
								d[5] == o_emoji &&
								d[4] == o_emoji &&
								d[3] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								d[2] == o_emoji &&
								d[3] == o_emoji &&
								d[4] == o_emoji &&
								d[5] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								d[1] == o_emoji &&
								d[2] == o_emoji &&
								d[3] == o_emoji &&
								d[4] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								e[6] == o_emoji &&
								e[5] == o_emoji &&
								e[4] == o_emoji &&
								e[3] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								e[2] == o_emoji &&
								e[3] == o_emoji &&
								e[4] == o_emoji &&
								e[5] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								e[1] == o_emoji &&
								e[2] == o_emoji &&
								e[3] == o_emoji &&
								e[4] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								f[6] == o_emoji &&
								f[5] == o_emoji &&
								f[4] == o_emoji &&
								f[3] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								f[2] == o_emoji &&
								f[3] == o_emoji &&
								f[4] == o_emoji &&
								f[5] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								f[1] == o_emoji &&
								f[2] == o_emoji &&
								f[3] == o_emoji &&
								f[4] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								g[6] == o_emoji &&
								g[5] == o_emoji &&
								g[4] == o_emoji &&
								g[3] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								g[2] == o_emoji &&
								g[3] == o_emoji &&
								g[4] == o_emoji &&
								g[5] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								g[1] == o_emoji &&
								g[2] == o_emoji &&
								g[3] == o_emoji &&
								g[4] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								a[6] == o_emoji &&
								b[6] == o_emoji &&
								c[6] == o_emoji &&
								d[6] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								e[6] == o_emoji &&
								b[6] == o_emoji &&
								c[6] == o_emoji &&
								d[6] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								e[6] == o_emoji &&
								f[6] == o_emoji &&
								c[6] == o_emoji &&
								d[6] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								e[6] == o_emoji &&
								f[6] == o_emoji &&
								g[6] == o_emoji &&
								d[6] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								a[5] == o_emoji &&
								b[5] == o_emoji &&
								c[5] == o_emoji &&
								d[5] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								e[5] == o_emoji &&
								b[5] == o_emoji &&
								c[5] == o_emoji &&
								d[5] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								e[5] == o_emoji &&
								f[5] == o_emoji &&
								c[5] == o_emoji &&
								d[5] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								e[5] == o_emoji &&
								f[5] == o_emoji &&
								g[5] == o_emoji &&
								d[5] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								a[4] == o_emoji &&
								b[4] == o_emoji &&
								c[4] == o_emoji &&
								d[4] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								e[4] == o_emoji &&
								b[4] == o_emoji &&
								c[4] == o_emoji &&
								d[4] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								e[4] == o_emoji &&
								f[4] == o_emoji &&
								c[4] == o_emoji &&
								d[4] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								e[4] == o_emoji &&
								f[4] == o_emoji &&
								g[4] == o_emoji &&
								d[4] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								a[3] == o_emoji &&
								b[3] == o_emoji &&
								c[3] == o_emoji &&
								d[3] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								e[3] == o_emoji &&
								b[3] == o_emoji &&
								c[3] == o_emoji &&
								d[3] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								e[3] == o_emoji &&
								f[3] == o_emoji &&
								c[3] == o_emoji &&
								d[3] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								e[3] == o_emoji &&
								f[3] == o_emoji &&
								g[3] == o_emoji &&
								d[3] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								a[2] == o_emoji &&
								b[2] == o_emoji &&
								c[2] == o_emoji &&
								d[2] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								e[2] == o_emoji &&
								b[2] == o_emoji &&
								c[2] == o_emoji &&
								d[2] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								e[2] == o_emoji &&
								f[2] == o_emoji &&
								c[2] == o_emoji &&
								d[2] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								e[2] == o_emoji &&
								f[2] == o_emoji &&
								g[2] == o_emoji &&
								d[2] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								a[1] == o_emoji &&
								b[1] == o_emoji &&
								c[1] == o_emoji &&
								d[1] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								e[1] == o_emoji &&
								b[1] == o_emoji &&
								c[1] == o_emoji &&
								d[1] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								e[1] == o_emoji &&
								f[1] == o_emoji &&
								c[1] == o_emoji &&
								d[1] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								e[1] == o_emoji &&
								f[1] == o_emoji &&
								g[1] == o_emoji &&
								d[1] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								a[3] == o_emoji &&
								b[4] == o_emoji &&
								c[5] == o_emoji &&
								d[6] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								a[2] == o_emoji &&
								b[3] == o_emoji &&
								c[4] == o_emoji &&
								d[5] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								e[6] == o_emoji &&
								b[3] == o_emoji &&
								c[4] == o_emoji &&
								d[5] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								a[1] == o_emoji &&
								b[2] == o_emoji &&
								c[3] == o_emoji &&
								d[4] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								e[5] == o_emoji &&
								b[2] == o_emoji &&
								c[3] == o_emoji &&
								d[4] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								e[5] == o_emoji &&
								f[6] == o_emoji &&
								c[3] == o_emoji &&
								d[4] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								e[4] == o_emoji &&
								b[1] == o_emoji &&
								c[2] == o_emoji &&
								d[3] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								e[4] == o_emoji &&
								f[5] == o_emoji &&
								c[2] == o_emoji &&
								d[3] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								e[4] == o_emoji &&
								f[5] == o_emoji &&
								g[6] == o_emoji &&
								d[3] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								c[1] == o_emoji &&
								d[2] == o_emoji &&
								e[3] == o_emoji &&
								f[4] == o_emoji
			
							)
								won["<:yellow_square:>"] = true;
							if (
								g[5] == o_emoji &&
								d[2] == o_emoji &&
								e[3] == o_emoji &&
								f[4] == o_emoji
			
							)
								won["<:yellow_square:>"] = true;
							if (
								g[4] == o_emoji &&
								d[1] == o_emoji &&
								e[2] == o_emoji &&
								f[3] == o_emoji
			
							)
								won["<:yellow_square:>"] = true;
							if (
								a[4] == o_emoji &&
								b[3] == o_emoji &&
								c[2] == o_emoji &&
								d[1] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								a[5] == o_emoji &&
								b[4] == o_emoji &&
								c[3] == o_emoji &&
								d[2] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								e[1] == o_emoji &&
								b[4] == o_emoji &&
								c[3] == o_emoji &&
								d[2] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								a[6] == o_emoji &&
								b[5] == o_emoji &&
								c[4] == o_emoji &&
								d[3] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								e[2] == o_emoji &&
								b[5] == o_emoji &&
								c[4] == o_emoji &&
								d[3] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								e[2] == o_emoji &&
								f[1] == o_emoji &&
								c[4] == o_emoji &&
								d[3] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								e[3] == o_emoji &&
								b[6] == o_emoji &&
								c[5] == o_emoji &&
								d[4] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								e[3] == o_emoji &&
								f[2] == o_emoji &&
								c[5] == o_emoji &&
								d[4] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								e[3] == o_emoji &&
								f[2] == o_emoji &&
								g[1] == o_emoji &&
								d[4] == o_emoji
							)
								won["<:yellow_square:>"] = true;
							if (
								c[6] == o_emoji &&
								d[5] == o_emoji &&
								e[4] == o_emoji &&
								f[3] == o_emoji
			
							)
								won["<:yellow_square:>"] = true;
							if (
								g[2] == o_emoji &&
								d[5] == o_emoji &&
								e[4] == o_emoji &&
								f[3] == o_emoji
			
							)
								won["<:yellow_square:>"] = true;
							if (
								g[3] == o_emoji &&
								d[6] == o_emoji &&
								e[5] == o_emoji &&
								f[4] == o_emoji
			
							)
								won["<:yellow_square:>"] = true;

							const xoemb5 = new MessageEmbed()
								.setTitle('Connect 4')
								.setDescription(
									`Round over`
								)
								.addFields(

									{
										name: `🟡 | ${fighters[0] == interaction.user.id ? `${interaction.user.username}` : `Coco Arcade`
											}`, value: `:warning: Draw`, inline: true
									},
									{
										name: `🔴 | ${fighters[0] == interaction.user.id ? `Coco Arcade` : `${interaction.user.username}`
											}`, value: `:warning: Draw`, inline: true
									},
								)
								.setColor('#36393F')
								;
							if (won["<:yellow_square:>"] == true) return connects(m);
							else if (won["<:red_square:>"] == true) return;
							else {
								return m.edit({ content: `It's a tie!\n${o[1]}${o[2]}${o[3]}${o[4]}${o[5]}${o[6]}${o[7]}\n${a[1]}${b[1]}${c[1]}${d[1]}${e[1]}${f[1]}${g[1]}\n${a[2]}${b[2]}${c[2]}${d[2]}${e[2]}${f[2]}${g[2]}\n${a[3]}${b[3]}${c[3]}${d[3]}${e[3]}${f[3]}${g[3]}\n${a[4]}${b[4]}${c[4]}${d[4]}${e[4]}${f[4]}${g[4]}\n${a[5]}${b[5]}${c[5]}${d[5]}${e[5]}${f[5]}${g[5]}\n${a[6]}${b[6]}${c[6]}${d[6]}${e[6]}${f[6]}${g[6]}`, embeds: [xoemb5], components: [] })
							}
						}
						connects(m);
					}
				});
				let embed1 = new MessageEmbed()
					.setTitle(`:warning: Error`)
					.setColor('#36393F')
					.setDescription(
						"Sorry, you took too long to respond and the interaction expired."
					);

				collector.on("end", (collected) => {
					if (collected.size == 0)

						m.edit({
							content: `<@!${Args.userid}> didn\'t react in time!`,
							components: [], embeds: [embed1]
						});
				});
			}




		}
		///////////////////////without bot////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////		
		else {


			if (opponent.id == interaction.user.id)
				return interaction.reply({
					content: "You cannot play by yourself!",
					ephemeral: true
				});
			if (opponent.bot)
				return interaction.reply({
					content: "You can't play against bots",
					ephemeral: true
				});



			let accept = new MessageButton()
				.setLabel("Join")
				.setStyle("SUCCESS")
				.setCustomId("acceptttt");


			let accep = new MessageActionRow().addComponents([
				accept
			]);
			interaction.reply({
				content: `<@${opponent.id}> you've been invited to a round of Connect 4 with ${interaction.user.username}.\nJoin in the next 3 minutes to start the game.`,

				components: [accep]
			});
			let m = await interaction.fetchReply();
			const collector = m.createMessageComponentCollector({
				type: "BUTTON",
				time: 180000
			});
			collector.on("collect", async (button) => {
				if (button.user.id !== opponent.id)
					return button.reply({
						content: "You cant play the game as they didnt call u to play.",
						ephemeral: true
					});

				if (button.customId == "declinettt") {
					button.deferUpdate();
					return collector.stop("decline");
				} else if (button.customId == "acceptttt") {
					collector.stop();
					button.message.delete();

					let fighters = [interaction.user.id, opponent.id].sort(() =>
						Math.random() > 0.5 ? 1 : -1
					);

					let x_emoji = "<:Red:891239779365187624>";
					let o_emoji = "<:Yellow:891239779386142740>";
					let a = [];
					let b = [];
					let c = [];
					let d = [];
					let e = [];
					let f = [];
					let g = [];
					let o = [];
					//<:bl:903904924709036054>
					let dashmoji = '<:c4empty:891239779411304478>';
					let lle = "<:PlayLast:904208723369664552>";
					let le = "<:Rewind:887106133423161364>";
					let mide = "<:Down:904208890747568218>";
					let re = "<:Forward:887106133041496085>";
					let rre = "<:Skip:887101074031407114>";
					a[1] = `${dashmoji}`;
					a[2] = `${dashmoji}`;
					a[3] = `${dashmoji}`;
					a[4] = `${dashmoji}`;
					a[5] = `${dashmoji}`;
					a[6] = `${dashmoji}`;
					b[1] = `${dashmoji}`;
					b[2] = `${dashmoji}`;
					b[3] = `${dashmoji}`;
					b[4] = `${dashmoji}`;
					b[5] = `${dashmoji}`;
					b[6] = `${dashmoji}`;
					c[1] = `${dashmoji}`;
					c[2] = `${dashmoji}`;
					c[3] = `${dashmoji}`;
					c[4] = `${dashmoji}`;
					c[5] = `${dashmoji}`;
					c[6] = `${dashmoji}`;
					d[1] = `${dashmoji}`;
					d[2] = `${dashmoji}`;
					d[3] = `${dashmoji}`;
					d[4] = `${dashmoji}`;
					d[5] = `${dashmoji}`;
					d[6] = `${dashmoji}`;
					e[1] = `${dashmoji}`;
					e[2] = `${dashmoji}`;
					e[3] = `${dashmoji}`;
					e[4] = `${dashmoji}`;
					e[5] = `${dashmoji}`;
					e[6] = `${dashmoji}`;
					f[1] = `${dashmoji}`;
					f[2] = `${dashmoji}`;
					f[3] = `${dashmoji}`;
					f[4] = `${dashmoji}`;
					f[5] = `${dashmoji}`;
					f[6] = `${dashmoji}`;
					g[1] = `${dashmoji}`;
					g[2] = `${dashmoji}`;
					g[3] = `${dashmoji}`;
					g[4] = `${dashmoji}`;
					g[5] = `${dashmoji}`;
					g[6] = `${dashmoji}`;
					o[1] = "<:tstd:892959158893174834>";
					o[2] = "<:tstd:892959158893174834>";
					o[3] = "<:tstd:892959158893174834>";
					o[4] = "<:ytd:891239779549732874>";
					o[5] = "<:tstd:892959158893174834>";
					o[6] = "<:tstd:892959158893174834>";
					o[7] = "<:tstd:892959158893174834>";
					let y = 4;
					let n = 4;


					let Args = {
						user: 0,
						ll: {
							style: "SECONDARY",
							emoji: lle,
							disabled: false
						},
						l: {
							style: "SECONDARY",
							emoji: le,
							disabled: false
						},
						mid: {
							style: "SECONDARY",
							emoji: mide,
							disabled: false
						},
						r: {
							style: "SECONDARY",
							emoji: re,
							disabled: false
						},
						rr: {
							style: "SECONDARY",
							emoji: rre,
							disabled: false
						}
					};
					const { MessageActionRow, MessageButton } = require("discord.js");



					const xoemb = new MessageEmbed()
						.setTitle('Connect 4')
						.setDescription(
							`Round in progress...\n>`
						)
						.setColor('#36393F')

						;

					let msg = await interaction.followUp({
						content: `Waiting for Input | <@!${Args.userid}>, Your Emoji: "🟡"}`, embeds: [xoemb]
					});
					connects(msg);

					async function connects(m) {
						Args.userid = fighters[Args.user];
						let won = {
							"<:yellow_square:>": false,
							"<:red_square:>": false
						};
						if (
							a[6] == o_emoji &&
							a[5] == o_emoji &&
							a[4] == o_emoji &&
							a[3] == o_emoji
						)
							won["<:yellow_square:>"] = true;
						if (
							a[2] == o_emoji &&
							a[3] == o_emoji &&
							a[4] == o_emoji &&
							a[5] == o_emoji
						)
							won["<:yellow_square:>"] = true;
						if (
							a[1] == o_emoji &&
							a[2] == o_emoji &&
							a[3] == o_emoji &&
							a[4] == o_emoji
						)
							won["<:yellow_square:>"] = true;
						if (
							b[6] == o_emoji &&
							b[5] == o_emoji &&
							b[4] == o_emoji &&
							b[3] == o_emoji
						)
							won["<:yellow_square:>"] = true;
						if (
							b[2] == o_emoji &&
							b[3] == o_emoji &&
							b[4] == o_emoji &&
							b[5] == o_emoji
						)
							won["<:yellow_square:>"] = true;
						if (
							b[1] == o_emoji &&
							b[2] == o_emoji &&
							b[3] == o_emoji &&
							b[4] == o_emoji
						)
							won["<:yellow_square:>"] = true;
						if (
							c[6] == o_emoji &&
							c[5] == o_emoji &&
							c[4] == o_emoji &&
							c[3] == o_emoji
						)
							won["<:yellow_square:>"] = true;
						if (
							c[2] == o_emoji &&
							c[3] == o_emoji &&
							c[4] == o_emoji &&
							c[5] == o_emoji
						)
							won["<:yellow_square:>"] = true;
						if (
							c[1] == o_emoji &&
							c[2] == o_emoji &&
							c[3] == o_emoji &&
							c[4] == o_emoji
						)
							won["<:yellow_square:>"] = true;
						if (
							d[6] == o_emoji &&
							d[5] == o_emoji &&
							d[4] == o_emoji &&
							d[3] == o_emoji
						)
							won["<:yellow_square:>"] = true;
						if (
							d[2] == o_emoji &&
							d[3] == o_emoji &&
							d[4] == o_emoji &&
							d[5] == o_emoji
						)
							won["<:yellow_square:>"] = true;
						if (
							d[1] == o_emoji &&
							d[2] == o_emoji &&
							d[3] == o_emoji &&
							d[4] == o_emoji
						)
							won["<:yellow_square:>"] = true;
						if (
							e[6] == o_emoji &&
							e[5] == o_emoji &&
							e[4] == o_emoji &&
							e[3] == o_emoji
						)
							won["<:yellow_square:>"] = true;
						if (
							e[2] == o_emoji &&
							e[3] == o_emoji &&
							e[4] == o_emoji &&
							e[5] == o_emoji
						)
							won["<:yellow_square:>"] = true;
						if (
							e[1] == o_emoji &&
							e[2] == o_emoji &&
							e[3] == o_emoji &&
							e[4] == o_emoji
						)
							won["<:yellow_square:>"] = true;
						if (
							f[6] == o_emoji &&
							f[5] == o_emoji &&
							f[4] == o_emoji &&
							f[3] == o_emoji
						)
							won["<:yellow_square:>"] = true;
						if (
							f[2] == o_emoji &&
							f[3] == o_emoji &&
							f[4] == o_emoji &&
							f[5] == o_emoji
						)
							won["<:yellow_square:>"] = true;
						if (
							f[1] == o_emoji &&
							f[2] == o_emoji &&
							f[3] == o_emoji &&
							f[4] == o_emoji
						)
							won["<:yellow_square:>"] = true;
						if (
							g[6] == o_emoji &&
							g[5] == o_emoji &&
							g[4] == o_emoji &&
							g[3] == o_emoji
						)
							won["<:yellow_square:>"] = true;
						if (
							g[2] == o_emoji &&
							g[3] == o_emoji &&
							g[4] == o_emoji &&
							g[5] == o_emoji
						)
							won["<:yellow_square:>"] = true;
						if (
							g[1] == o_emoji &&
							g[2] == o_emoji &&
							g[3] == o_emoji &&
							g[4] == o_emoji
						)
							won["<:yellow_square:>"] = true;
						if (
							a[6] == o_emoji &&
							b[6] == o_emoji &&
							c[6] == o_emoji &&
							d[6] == o_emoji
						)
							won["<:yellow_square:>"] = true;
						if (
							e[6] == o_emoji &&
							b[6] == o_emoji &&
							c[6] == o_emoji &&
							d[6] == o_emoji
						)
							won["<:yellow_square:>"] = true;
						if (
							e[6] == o_emoji &&
							f[6] == o_emoji &&
							c[6] == o_emoji &&
							d[6] == o_emoji
						)
							won["<:yellow_square:>"] = true;
						if (
							e[6] == o_emoji &&
							f[6] == o_emoji &&
							g[6] == o_emoji &&
							d[6] == o_emoji
						)
							won["<:yellow_square:>"] = true;
						if (
							a[5] == o_emoji &&
							b[5] == o_emoji &&
							c[5] == o_emoji &&
							d[5] == o_emoji
						)
							won["<:yellow_square:>"] = true;
						if (
							e[5] == o_emoji &&
							b[5] == o_emoji &&
							c[5] == o_emoji &&
							d[5] == o_emoji
						)
							won["<:yellow_square:>"] = true;
						if (
							e[5] == o_emoji &&
							f[5] == o_emoji &&
							c[5] == o_emoji &&
							d[5] == o_emoji
						)
							won["<:yellow_square:>"] = true;
						if (
							e[5] == o_emoji &&
							f[5] == o_emoji &&
							g[5] == o_emoji &&
							d[5] == o_emoji
						)
							won["<:yellow_square:>"] = true;
						if (
							a[4] == o_emoji &&
							b[4] == o_emoji &&
							c[4] == o_emoji &&
							d[4] == o_emoji
						)
							won["<:yellow_square:>"] = true;
						if (
							e[4] == o_emoji &&
							b[4] == o_emoji &&
							c[4] == o_emoji &&
							d[4] == o_emoji
						)
							won["<:yellow_square:>"] = true;
						if (
							e[4] == o_emoji &&
							f[4] == o_emoji &&
							c[4] == o_emoji &&
							d[4] == o_emoji
						)
							won["<:yellow_square:>"] = true;
						if (
							e[4] == o_emoji &&
							f[4] == o_emoji &&
							g[4] == o_emoji &&
							d[4] == o_emoji
						)
							won["<:yellow_square:>"] = true;
						if (
							a[3] == o_emoji &&
							b[3] == o_emoji &&
							c[3] == o_emoji &&
							d[3] == o_emoji
						)
							won["<:yellow_square:>"] = true;
						if (
							e[3] == o_emoji &&
							b[3] == o_emoji &&
							c[3] == o_emoji &&
							d[3] == o_emoji
						)
							won["<:yellow_square:>"] = true;
						if (
							e[3] == o_emoji &&
							f[3] == o_emoji &&
							c[3] == o_emoji &&
							d[3] == o_emoji
						)
							won["<:yellow_square:>"] = true;
						if (
							e[3] == o_emoji &&
							f[3] == o_emoji &&
							g[3] == o_emoji &&
							d[3] == o_emoji
						)
							won["<:yellow_square:>"] = true;
						if (
							a[2] == o_emoji &&
							b[2] == o_emoji &&
							c[2] == o_emoji &&
							d[2] == o_emoji
						)
							won["<:yellow_square:>"] = true;
						if (
							e[2] == o_emoji &&
							b[2] == o_emoji &&
							c[2] == o_emoji &&
							d[2] == o_emoji
						)
							won["<:yellow_square:>"] = true;
						if (
							e[2] == o_emoji &&
							f[2] == o_emoji &&
							c[2] == o_emoji &&
							d[2] == o_emoji
						)
							won["<:yellow_square:>"] = true;
						if (
							e[2] == o_emoji &&
							f[2] == o_emoji &&
							g[2] == o_emoji &&
							d[2] == o_emoji
						)
							won["<:yellow_square:>"] = true;
						if (
							a[1] == o_emoji &&
							b[1] == o_emoji &&
							c[1] == o_emoji &&
							d[1] == o_emoji
						)
							won["<:yellow_square:>"] = true;
						if (
							e[1] == o_emoji &&
							b[1] == o_emoji &&
							c[1] == o_emoji &&
							d[1] == o_emoji
						)
							won["<:yellow_square:>"] = true;
						if (
							e[1] == o_emoji &&
							f[1] == o_emoji &&
							c[1] == o_emoji &&
							d[1] == o_emoji
						)
							won["<:yellow_square:>"] = true;
						if (
							e[1] == o_emoji &&
							f[1] == o_emoji &&
							g[1] == o_emoji &&
							d[1] == o_emoji
						)
							won["<:yellow_square:>"] = true;
						if (
							a[3] == o_emoji &&
							b[4] == o_emoji &&
							c[5] == o_emoji &&
							d[6] == o_emoji
						)
							won["<:yellow_square:>"] = true;
						if (
							a[2] == o_emoji &&
							b[3] == o_emoji &&
							c[4] == o_emoji &&
							d[5] == o_emoji
						)
							won["<:yellow_square:>"] = true;
						if (
							e[6] == o_emoji &&
							b[3] == o_emoji &&
							c[4] == o_emoji &&
							d[5] == o_emoji
						)
							won["<:yellow_square:>"] = true;
						if (
							a[1] == o_emoji &&
							b[2] == o_emoji &&
							c[3] == o_emoji &&
							d[4] == o_emoji
						)
							won["<:yellow_square:>"] = true;
						if (
							e[5] == o_emoji &&
							b[2] == o_emoji &&
							c[3] == o_emoji &&
							d[4] == o_emoji
						)
							won["<:yellow_square:>"] = true;
						if (
							e[5] == o_emoji &&
							f[6] == o_emoji &&
							c[3] == o_emoji &&
							d[4] == o_emoji
						)
							won["<:yellow_square:>"] = true;
						if (
							e[4] == o_emoji &&
							b[1] == o_emoji &&
							c[2] == o_emoji &&
							d[3] == o_emoji
						)
							won["<:yellow_square:>"] = true;
						if (
							e[4] == o_emoji &&
							f[5] == o_emoji &&
							c[2] == o_emoji &&
							d[3] == o_emoji
						)
							won["<:yellow_square:>"] = true;
						if (
							e[4] == o_emoji &&
							f[5] == o_emoji &&
							g[6] == o_emoji &&
							d[3] == o_emoji
						)
							won["<:yellow_square:>"] = true;
						if (
							c[1] == o_emoji &&
							d[2] == o_emoji &&
							e[3] == o_emoji &&
							f[4] == o_emoji

						)
							won["<:yellow_square:>"] = true;
						if (
							g[5] == o_emoji &&
							d[2] == o_emoji &&
							e[3] == o_emoji &&
							f[4] == o_emoji

						)
							won["<:yellow_square:>"] = true;
						if (
							g[4] == o_emoji &&
							d[1] == o_emoji &&
							e[2] == o_emoji &&
							f[3] == o_emoji

						)
							won["<:yellow_square:>"] = true;
						if (
							a[4] == o_emoji &&
							b[3] == o_emoji &&
							c[2] == o_emoji &&
							d[1] == o_emoji
						)
							won["<:yellow_square:>"] = true;
						if (
							a[5] == o_emoji &&
							b[4] == o_emoji &&
							c[3] == o_emoji &&
							d[2] == o_emoji
						)
							won["<:yellow_square:>"] = true;
						if (
							e[1] == o_emoji &&
							b[4] == o_emoji &&
							c[3] == o_emoji &&
							d[2] == o_emoji
						)
							won["<:yellow_square:>"] = true;
						if (
							a[6] == o_emoji &&
							b[5] == o_emoji &&
							c[4] == o_emoji &&
							d[3] == o_emoji
						)
							won["<:yellow_square:>"] = true;
						if (
							e[2] == o_emoji &&
							b[5] == o_emoji &&
							c[4] == o_emoji &&
							d[3] == o_emoji
						)
							won["<:yellow_square:>"] = true;
						if (
							e[2] == o_emoji &&
							f[1] == o_emoji &&
							c[4] == o_emoji &&
							d[3] == o_emoji
						)
							won["<:yellow_square:>"] = true;
						if (
							e[3] == o_emoji &&
							b[6] == o_emoji &&
							c[5] == o_emoji &&
							d[4] == o_emoji
						)
							won["<:yellow_square:>"] = true;
						if (
							e[3] == o_emoji &&
							f[2] == o_emoji &&
							c[5] == o_emoji &&
							d[4] == o_emoji
						)
							won["<:yellow_square:>"] = true;
						if (
							e[3] == o_emoji &&
							f[2] == o_emoji &&
							g[1] == o_emoji &&
							d[4] == o_emoji
						)
							won["<:yellow_square:>"] = true;
						if (
							c[6] == o_emoji &&
							d[5] == o_emoji &&
							e[4] == o_emoji &&
							f[3] == o_emoji

						)
							won["<:yellow_square:>"] = true;
						if (
							g[2] == o_emoji &&
							d[5] == o_emoji &&
							e[4] == o_emoji &&
							f[3] == o_emoji

						)
							won["<:yellow_square:>"] = true;
						if (
							g[3] == o_emoji &&
							d[6] == o_emoji &&
							e[5] == o_emoji &&
							f[4] == o_emoji

						)
							won["<:yellow_square:>"] = true;









						if (won["<:yellow_square:>"] != false) {
							let foot = '🎉 Winner                                             Defeated'


							const xoemy3 = new MessageEmbed()
								.setTitle('Connect 4')
								.setDescription(
									`Round over`

								)
								.addFields(

									{
										name: `🟡 | ${fighters[1] == interaction.user.id ? `${interaction.user.username}` : `${opponent.username}`
											}`, value: `:tada: Winner`, inline: true
									},
									{
										name: `🔴 | ${fighters[1] == interaction.user.id ? `${opponent.username}` : `${interaction.user.username}`
											}`, value: `Defeated`, inline: true
									},
								)
								.setColor('#36393F')
								;
							const xoemb4 = new MessageEmbed()
								.setTitle('Connect 4')
								.setDescription(
									`Round over`

								)
								.addFields(

									{
										name: `🟡 | ${fighters[0] == interaction.user.id ? `${interaction.user.username}` : `${opponent.username}`
											}`, value: `:tada: Winner`, inline: true
									},
									{
										name: `🔴 | ${fighters[0] == interaction.user.id ? `${opponent.username}` : `${interaction.user.username}`
											}`, value: `Defeated`, inline: true
									},
								)
								.setColor('#36393F');
							if (Args.user == 0) {
								const tagi = await Tags.findOne({ where: { id: fighters[1] } });
								if (tagi) {
									if (party_limit == 0) {
										tagi.increment({ 'partygamescore': 10 });
									} else {
										temppartycheck = tagi.get('partygamescorewlim');
										if (temppartycheck <= party_limit_value) {
											tagi.increment({ 'partygamescore': 10 });
											tagi.increment({ 'partygamescorewlim': 10 });

										}
									}
								}
								return m.edit({
									content: `${o[1]}${o[2]}${o[3]}${o[4]}${o[5]}${o[6]}${o[7]}\n${a[1]}${b[1]}${c[1]}${d[1]}${e[1]}${f[1]}${g[1]}\n${a[2]}${b[2]}${c[2]}${d[2]}${e[2]}${f[2]}${g[2]}\n${a[3]}${b[3]}${c[3]}${d[3]}${e[3]}${f[3]}${g[3]}\n${a[4]}${b[4]}${c[4]}${d[4]}${e[4]}${f[4]}${g[4]}\n${a[5]}${b[5]}${c[5]}${d[5]}${e[5]}${f[5]}${g[5]}\n${a[6]}${b[6]}${c[6]}${d[6]}${e[6]}${f[6]}${g[6]}`,

									embeds: [xoemy3], components:[]
								});
							}
							else if (Args.user == 1) {
								const tagi = await Tags.findOne({ where: { id: fighters[0] } });
								if (tagi) {
									if (party_limit == 0) {
										tagi.increment({ 'partygamescore': 10 });
									} else {
										temppartycheck = tagi.get('partygamescorewlim');
										if (temppartycheck <= party_limit_value) {
											tagi.increment({ 'partygamescore': 10 });
											tagi.increment({ 'partygamescorewlim': 10 });

										}
									}
								}
								return m.edit({
									content: `${o[1]}${o[2]}${o[3]}${o[4]}${o[5]}${o[6]}${o[7]}\n${a[1]}${b[1]}${c[1]}${d[1]}${e[1]}${f[1]}${g[1]}\n${a[2]}${b[2]}${c[2]}${d[2]}${e[2]}${f[2]}${g[2]}\n${a[3]}${b[3]}${c[3]}${d[3]}${e[3]}${f[3]}${g[3]}\n${a[4]}${b[4]}${c[4]}${d[4]}${e[4]}${f[4]}${g[4]}\n${a[5]}${b[5]}${c[5]}${d[5]}${e[5]}${f[5]}${g[5]}\n${a[6]}${b[6]}${c[6]}${d[6]}${e[6]}${f[6]}${g[6]}`,

									embeds: [xoemb4], components:[]
								});
							}
						}
						if (
							a[6] == x_emoji &&
							a[5] == x_emoji &&
							a[4] == x_emoji &&
							a[3] == x_emoji
						)
							won["<:red_square:>"] = true;
						if (
							a[2] == x_emoji &&
							a[3] == x_emoji &&
							a[4] == x_emoji &&
							a[5] == x_emoji
						)
							won["<:red_square:>"] = true;
						if (
							a[1] == x_emoji &&
							a[2] == x_emoji &&
							a[3] == x_emoji &&
							a[4] == x_emoji
						)
							won["<:red_square:>"] = true;
						if (
							b[6] == x_emoji &&
							b[5] == x_emoji &&
							b[4] == x_emoji &&
							b[3] == x_emoji
						)
							won["<:red_square:>"] = true;
						if (
							b[2] == x_emoji &&
							b[3] == x_emoji &&
							b[4] == x_emoji &&
							b[5] == x_emoji
						)
							won["<:red_square:>"] = true;
						if (
							b[1] == x_emoji &&
							b[2] == x_emoji &&
							b[3] == x_emoji &&
							b[4] == x_emoji
						)
							won["<:red_square:>"] = true;
						if (
							c[6] == x_emoji &&
							c[5] == x_emoji &&
							c[4] == x_emoji &&
							c[3] == x_emoji
						)
							won["<:red_square:>"] = true;
						if (
							c[2] == x_emoji &&
							c[3] == x_emoji &&
							c[4] == x_emoji &&
							c[5] == x_emoji
						)
							won["<:red_square:>"] = true;
						if (
							c[1] == x_emoji &&
							c[2] == x_emoji &&
							c[3] == x_emoji &&
							c[4] == x_emoji
						)
							won["<:red_square:>"] = true;
						if (
							d[6] == x_emoji &&
							d[5] == x_emoji &&
							d[4] == x_emoji &&
							d[3] == x_emoji
						)
							won["<:red_square:>"] = true;
						if (
							d[2] == x_emoji &&
							d[3] == x_emoji &&
							d[4] == x_emoji &&
							d[5] == x_emoji
						)
							won["<:red_square:>"] = true;
						if (
							d[1] == x_emoji &&
							d[2] == x_emoji &&
							d[3] == x_emoji &&
							d[4] == x_emoji
						)
							won["<:red_square:>"] = true;
						if (
							e[6] == x_emoji &&
							e[5] == x_emoji &&
							e[4] == x_emoji &&
							e[3] == x_emoji
						)
							won["<:red_square:>"] = true;
						if (
							e[2] == x_emoji &&
							e[3] == x_emoji &&
							e[4] == x_emoji &&
							e[5] == x_emoji
						)
							won["<:red_square:>"] = true;
						if (
							e[1] == x_emoji &&
							e[2] == x_emoji &&
							e[3] == x_emoji &&
							e[4] == x_emoji
						)
							won["<:red_square:>"] = true;
						if (
							f[6] == x_emoji &&
							f[5] == x_emoji &&
							f[4] == x_emoji &&
							f[3] == x_emoji
						)
							won["<:red_square:>"] = true;
						if (
							f[2] == x_emoji &&
							f[3] == x_emoji &&
							f[4] == x_emoji &&
							f[5] == x_emoji
						)
							won["<:red_square:>"] = true;
						if (
							f[1] == x_emoji &&
							f[2] == x_emoji &&
							f[3] == x_emoji &&
							f[4] == x_emoji
						)
							won["<:red_square:>"] = true;
						if (
							g[6] == x_emoji &&
							g[5] == x_emoji &&
							g[4] == x_emoji &&
							g[3] == x_emoji
						)
							won["<:red_square:>"] = true;
						if (
							g[2] == x_emoji &&
							g[3] == x_emoji &&
							g[4] == x_emoji &&
							g[5] == x_emoji
						)
							won["<:red_square:>"] = true;
						if (
							g[1] == x_emoji &&
							g[2] == x_emoji &&
							g[3] == x_emoji &&
							g[4] == x_emoji
						)
							won["<:red_square:>"] = true;
						if (
							a[6] == x_emoji &&
							b[6] == x_emoji &&
							c[6] == x_emoji &&
							d[6] == x_emoji
						)
							won["<:red_square:>"] = true;
						if (
							e[6] == x_emoji &&
							b[6] == x_emoji &&
							c[6] == x_emoji &&
							d[6] == x_emoji
						)
							won["<:red_square:>"] = true;
						if (
							e[6] == x_emoji &&
							f[6] == x_emoji &&
							c[6] == x_emoji &&
							d[6] == x_emoji
						)
							won["<:red_square:>"] = true;
						if (
							e[6] == x_emoji &&
							f[6] == x_emoji &&
							g[6] == x_emoji &&
							d[6] == x_emoji
						)
							won["<:red_square:>"] = true;
						if (
							a[5] == x_emoji &&
							b[5] == x_emoji &&
							c[5] == x_emoji &&
							d[5] == x_emoji
						)
							won["<:red_square:>"] = true;
						if (
							e[5] == x_emoji &&
							b[5] == x_emoji &&
							c[5] == x_emoji &&
							d[5] == x_emoji
						)
							won["<:red_square:>"] = true;
						if (
							e[5] == x_emoji &&
							f[5] == x_emoji &&
							c[5] == x_emoji &&
							d[5] == x_emoji
						)
							won["<:red_square:>"] = true;
						if (
							e[5] == x_emoji &&
							f[5] == x_emoji &&
							g[5] == x_emoji &&
							d[5] == x_emoji
						)
							won["<:red_square:>"] = true;
						if (
							a[4] == x_emoji &&
							b[4] == x_emoji &&
							c[4] == x_emoji &&
							d[4] == x_emoji
						)
							won["<:red_square:>"] = true;
						if (
							e[4] == x_emoji &&
							b[4] == x_emoji &&
							c[4] == x_emoji &&
							d[4] == x_emoji
						)
							won["<:red_square:>"] = true;
						if (
							e[4] == x_emoji &&
							f[4] == x_emoji &&
							c[4] == x_emoji &&
							d[4] == x_emoji
						)
							won["<:red_square:>"] = true;
						if (
							e[4] == x_emoji &&
							f[4] == x_emoji &&
							g[4] == x_emoji &&
							d[4] == x_emoji
						)
							won["<:red_square:>"] = true;
						if (
							a[3] == x_emoji &&
							b[3] == x_emoji &&
							c[3] == x_emoji &&
							d[3] == x_emoji
						)
							won["<:red_square:>"] = true;
						if (
							e[3] == x_emoji &&
							b[3] == x_emoji &&
							c[3] == x_emoji &&
							d[3] == x_emoji
						)
							won["<:red_square:>"] = true;
						if (
							e[3] == x_emoji &&
							f[3] == x_emoji &&
							c[3] == x_emoji &&
							d[3] == x_emoji
						)
							won["<:red_square:>"] = true;
						if (
							e[3] == x_emoji &&
							f[3] == x_emoji &&
							g[3] == x_emoji &&
							d[3] == x_emoji
						)
							won["<:red_square:>"] = true;
						if (
							a[2] == x_emoji &&
							b[2] == x_emoji &&
							c[2] == x_emoji &&
							d[2] == x_emoji
						)
							won["<:red_square:>"] = true;
						if (
							e[2] == x_emoji &&
							b[2] == x_emoji &&
							c[2] == x_emoji &&
							d[2] == x_emoji
						)
							won["<:red_square:>"] = true;
						if (
							e[2] == x_emoji &&
							f[2] == x_emoji &&
							c[2] == x_emoji &&
							d[2] == x_emoji
						)
							won["<:red_square:>"] = true;
						if (
							e[2] == x_emoji &&
							f[2] == x_emoji &&
							g[2] == x_emoji &&
							d[2] == x_emoji
						)
							won["<:red_square:>"] = true;
						if (
							a[1] == x_emoji &&
							b[1] == x_emoji &&
							c[1] == x_emoji &&
							d[1] == x_emoji
						)
							won["<:red_square:>"] = true;
						if (
							e[1] == x_emoji &&
							b[1] == x_emoji &&
							c[1] == x_emoji &&
							d[1] == x_emoji
						)
							won["<:red_square:>"] = true;
						if (
							e[1] == x_emoji &&
							f[1] == x_emoji &&
							c[1] == x_emoji &&
							d[1] == x_emoji
						)
							won["<:red_square:>"] = true;
						if (
							e[1] == x_emoji &&
							f[1] == x_emoji &&
							g[1] == x_emoji &&
							d[1] == x_emoji
						)
							won["<:red_square:>"] = true;
						if (
							a[3] == x_emoji &&
							b[4] == x_emoji &&
							c[5] == x_emoji &&
							d[6] == x_emoji
						)
							won["<:red_square:>"] = true;
						if (
							a[2] == x_emoji &&
							b[3] == x_emoji &&
							c[4] == x_emoji &&
							d[5] == x_emoji
						)
							won["<:red_square:>"] = true;
						if (
							e[6] == x_emoji &&
							b[3] == x_emoji &&
							c[4] == x_emoji &&
							d[5] == x_emoji
						)
							won["<:red_square:>"] = true;
						if (
							a[1] == x_emoji &&
							b[2] == x_emoji &&
							c[3] == x_emoji &&
							d[4] == x_emoji
						)
							won["<:red_square:>"] = true;
						if (
							e[5] == x_emoji &&
							b[2] == x_emoji &&
							c[3] == x_emoji &&
							d[4] == x_emoji
						)
							won["<:red_square:>"] = true;
						if (
							e[5] == x_emoji &&
							f[6] == x_emoji &&
							c[3] == x_emoji &&
							d[4] == x_emoji
						)
							won["<:red_square:>"] = true;
						if (
							e[4] == x_emoji &&
							b[1] == x_emoji &&
							c[2] == x_emoji &&
							d[3] == x_emoji
						)
							won["<:red_square:>"] = true;
						if (
							e[4] == x_emoji &&
							f[5] == x_emoji &&
							c[2] == x_emoji &&
							d[3] == x_emoji
						)
							won["<:red_square:>"] = true;
						if (
							e[4] == x_emoji &&
							f[5] == x_emoji &&
							g[6] == x_emoji &&
							d[3] == x_emoji
						)
							won["<:red_square:>"] = true;
						if (
							c[1] == x_emoji &&
							d[2] == x_emoji &&
							e[3] == x_emoji &&
							f[4] == x_emoji

						)
							won["<:red_square:>"] = true;
						if (
							g[5] == x_emoji &&
							d[2] == x_emoji &&
							e[3] == x_emoji &&
							f[4] == x_emoji

						)
							won["<:red_square:>"] = true;
						if (
							g[4] == x_emoji &&
							d[1] == x_emoji &&
							e[2] == x_emoji &&
							f[3] == x_emoji

						)
							won["<:red_square:>"] = true;
						if (
							a[4] == x_emoji &&
							b[3] == x_emoji &&
							c[2] == x_emoji &&
							d[1] == x_emoji
						)
							won["<:red_square:>"] = true;
						if (
							a[5] == x_emoji &&
							b[4] == x_emoji &&
							c[3] == x_emoji &&
							d[2] == x_emoji
						)
							won["<:red_square:>"] = true;
						if (
							e[1] == x_emoji &&
							b[4] == x_emoji &&
							c[3] == x_emoji &&
							d[2] == x_emoji
						)
							won["<:red_square:>"] = true;
						if (
							a[6] == x_emoji &&
							b[5] == x_emoji &&
							c[4] == x_emoji &&
							d[3] == x_emoji
						)
							won["<:red_square:>"] = true;
						if (
							e[2] == x_emoji &&
							b[5] == x_emoji &&
							c[4] == x_emoji &&
							d[3] == x_emoji
						)
							won["<:red_square:>"] = true;
						if (
							e[2] == x_emoji &&
							f[1] == x_emoji &&
							c[4] == x_emoji &&
							d[3] == x_emoji
						)
							won["<:red_square:>"] = true;
						if (
							e[3] == x_emoji &&
							b[6] == x_emoji &&
							c[5] == x_emoji &&
							d[4] == x_emoji
						)
							won["<:red_square:>"] = true;
						if (
							e[3] == x_emoji &&
							f[2] == x_emoji &&
							c[5] == x_emoji &&
							d[4] == x_emoji
						)
							won["<:red_square:>"] = true;
						if (
							e[3] == x_emoji &&
							f[2] == x_emoji &&
							g[1] == x_emoji &&
							d[4] == x_emoji
						)
							won["<:red_square:>"] = true;
						if (
							c[6] == x_emoji &&
							d[5] == x_emoji &&
							e[4] == x_emoji &&
							f[3] == x_emoji

						)
							won["<:red_square:>"] = true;
						if (
							g[2] == x_emoji &&
							d[5] == x_emoji &&
							e[4] == x_emoji &&
							f[3] == x_emoji

						)
							won["<:red_square:>"] = true;
						if (
							g[3] == x_emoji &&
							d[6] == x_emoji &&
							e[5] == x_emoji &&
							f[4] == x_emoji

						)
							won["<:red_square:>"] = true;

						if (won["<:red_square:>"] != false) {
							let foot = '🎉 Winner                                             Defeated'



							const xoemy1 = new MessageEmbed()
								.setTitle('Connect 4')
								.setDescription(
									`Round over`

								)
								.addFields(

									{
										name: `🔴 | ${fighters[1] == interaction.user.id ? `${interaction.user.username}` : `${opponent.username}`
											}`, value: `:tada: Winner`, inline: true
									},
									{
										name: `🟡 | ${fighters[1] == interaction.user.id ? `${opponent.username}` : `${interaction.user.username}`
											}`, value: `Defeated`, inline: true
									},
								)
								.setColor('#36393F')
								;
							const xoemy2 = new MessageEmbed()
								.setTitle('Connect 4')
								.setDescription(
									`Round over`

								)
								.addFields(

									{
										name: `🔴 | ${fighters[0] == interaction.user.id ? `${interaction.user.username}` : `${opponent.username}`
											}`, value: `:tada: Winner`, inline: true
									},
									{
										name: `🟡 | ${fighters[0] == interaction.user.id ? `${opponent.username}` : `${interaction.user.username}`
											}`, value: `Defeated`, inline: true
									},
								)
								.setColor('#36393F');
							if (Args.user == 0) {
								const tagi = await Tags.findOne({ where: { id: fighters[1] } });
								if (tagi) {
									if (party_limit == 0) {
										tagi.increment({ 'partygamescore': 10 });
									} else {
										temppartycheck = tagi.get('partygamescorewlim');
										if (temppartycheck <= party_limit_value) {
											tagi.increment({ 'partygamescore': 10 });
											tagi.increment({ 'partygamescorewlim': 10 });

										}
									}
								}
								return m.edit({
									content: `${o[1]}${o[2]}${o[3]}${o[4]}${o[5]}${o[6]}${o[7]}\n${a[1]}${b[1]}${c[1]}${d[1]}${e[1]}${f[1]}${g[1]}\n${a[2]}${b[2]}${c[2]}${d[2]}${e[2]}${f[2]}${g[2]}\n${a[3]}${b[3]}${c[3]}${d[3]}${e[3]}${f[3]}${g[3]}\n${a[4]}${b[4]}${c[4]}${d[4]}${e[4]}${f[4]}${g[4]}\n${a[5]}${b[5]}${c[5]}${d[5]}${e[5]}${f[5]}${g[5]}\n${a[6]}${b[6]}${c[6]}${d[6]}${e[6]}${f[6]}${g[6]}`,

									embeds: [xoemy1], components:[]
								});
							}
							else if (Args.user == 1) {
								const tagi = await Tags.findOne({ where: { id: fighters[0] } });
								if (tagi) {
									if (party_limit == 0) {
										tagi.increment({ 'partygamescore': 10 });
									} else {
										temppartycheck = tagi.get('partygamescorewlim');
										if (temppartycheck <= party_limit_value) {
											tagi.increment({ 'partygamescore': 10 });
											tagi.increment({ 'partygamescorewlim': 10 });

										}
									}
								}
								return m.edit({
									content: `${o[1]}${o[2]}${o[3]}${o[4]}${o[5]}${o[6]}${o[7]}\n${a[1]}${b[1]}${c[1]}${d[1]}${e[1]}${f[1]}${g[1]}\n${a[2]}${b[2]}${c[2]}${d[2]}${e[2]}${f[2]}${g[2]}\n${a[3]}${b[3]}${c[3]}${d[3]}${e[3]}${f[3]}${g[3]}\n${a[4]}${b[4]}${c[4]}${d[4]}${e[4]}${f[4]}${g[4]}\n${a[5]}${b[5]}${c[5]}${d[5]}${e[5]}${f[5]}${g[5]}\n${a[6]}${b[6]}${c[6]}${d[6]}${e[6]}${f[6]}${g[6]}`,

									embeds: [xoemy2], components:[]
								});
							}
						}
						let ll = new MessageButton()
							.setStyle(Args.ll.style)
							.setEmoji(Args.ll.emoji)
							.setCustomId("ll");
						let l = new MessageButton()
							.setStyle(Args.l.style)
							.setEmoji(Args.l.emoji)
							.setCustomId("l");
						let mid = new MessageButton()
							.setStyle(Args.mid.style)
							.setEmoji(Args.mid.emoji)
							.setCustomId("mid");
						let r = new MessageButton()
							.setStyle(Args.r.style)
							.setEmoji(Args.r.emoji)
							.setCustomId("r");
						let rr = new MessageButton()
							.setStyle(Args.rr.style)
							.setEmoji(Args.rr.emoji)
							.setCustomId("rr");
						let x = new MessageActionRow().addComponents([ll, l, mid, r, rr]);

						let buttons = { components: [x] };
						let em = `${Args.user == 0 ? '🟡' : "🔴"
							}`
						let op = `${Args.user == 1 ? '🟡' : "🔴"
							}`
						let foot = 'current player                   next up'
						const xoemb = new MessageEmbed()
							.setTitle('Connect 4')
							.setDescription(
								`Round in progress...`
							)
							.addFields(

								{
									name: `${em} | ${Args.userid == interaction.user.id ? `${interaction.user.username}` : `${opponent.username}`
										}`, value: `**Current Player**`, inline: true
								},
								{
									name: `${op} | ${Args.userid == interaction.user.id ? `${opponent.username}` : `${interaction.user.username}`
										}`, value: `Next Up`, inline: true
								},
							)
							.setColor('#36393F')
							;


						m.edit({
							content: `${o[1]}${o[2]}${o[3]}${o[4]}${o[5]}${o[6]}${o[7]}\n${a[1]}${b[1]}${c[1]}${d[1]}${e[1]}${f[1]}${g[1]}\n${a[2]}${b[2]}${c[2]}${d[2]}${e[2]}${f[2]}${g[2]}\n${a[3]}${b[3]}${c[3]}${d[3]}${e[3]}${f[3]}${g[3]}\n${a[4]}${b[4]}${c[4]}${d[4]}${e[4]}${f[4]}${g[4]}\n${a[5]}${b[5]}${c[5]}${d[5]}${e[5]}${f[5]}${g[5]}\n${a[6]}${b[6]}${c[6]}${d[6]}${e[6]}${f[6]}${g[6]}`,
							components: [x], embeds: [xoemb]
						});

						const collector = m.createMessageComponentCollector({
							componentType: "BUTTON",
							max: 1,
							time: 180000
						});

						collector.on("collect", (t) => {
							if (t.user.id !== Args.userid) {
								t.reply({
									content: "You cant play now",
									ephemeral: true
								});

								connects(m);
							} else {
								if (Args.user == 0) {
									o[y] = "<:ytd:891239779549732874>"
									if (t.customId == "ll")
										y = 1
									o[1] = "<:tstd:892959158893174834>";
									o[2] = "<:tstd:892959158893174834>";
									o[3] = "<:tstd:892959158893174834>";
									o[4] = "<:tstd:892959158893174834>";
									o[5] = "<:tstd:892959158893174834>";
									o[6] = "<:tstd:892959158893174834>";
									o[7] = "<:tstd:892959158893174834>";
									o[n] = "<:rstd:891239779365175297>"
									o[y] = "<:ytd:891239779549732874>"
									if (t.customId == "l") {
										y = y - 1;
										if (y < 1) {
											y = 1
										}
										o[1] = "<:tstd:892959158893174834>";
										o[2] = "<:tstd:892959158893174834>";
										o[3] = "<:tstd:892959158893174834>";
										o[4] = "<:tstd:892959158893174834>";
										o[5] = "<:tstd:892959158893174834>";
										o[6] = "<:tstd:892959158893174834>";
										o[7] = "<:tstd:892959158893174834>";
										o[n] = "<:rstd:891239779365175297>"
										o[y] = "<:ytd:891239779549732874>"
									};
									if (t.customId == "rr")
										y = 7;
									o[1] = "<:tstd:892959158893174834>";
									o[2] = "<:tstd:892959158893174834>";
									o[3] = "<:tstd:892959158893174834>";
									o[4] = "<:tstd:892959158893174834>";
									o[5] = "<:tstd:892959158893174834>";
									o[6] = "<:tstd:892959158893174834>";
									o[7] = "<:tstd:892959158893174834>";
									o[n] = "<:rstd:891239779365175297>"
									o[y] = "<:ytd:891239779549732874>"
									if (t.customId == "r") {
										y = y + 1;
										if (y > 7) {
											y = 7
										}
										o[1] = "<:tstd:892959158893174834>";
										o[2] = "<:tstd:892959158893174834>";
										o[3] = "<:tstd:892959158893174834>";
										o[4] = "<:tstd:892959158893174834>";
										o[5] = "<:tstd:892959158893174834>";
										o[6] = "<:tstd:892959158893174834>";
										o[7] = "<:tstd:892959158893174834>";
										o[n] = "<:rstd:891239779365175297>"
										o[y] = "<:ytd:891239779549732874>"
									};
									if (t.customId == "mid") {

										if (y == 1) {
											for (w = 6; w >= 1;) {
												if (a[w] == dashmoji) {
													a[w] = o_emoji
													Args.user = 1;

													o[y] = "<:ystd:891239779377754123>"
													o[n] = "<:rtd:891239779356774400>"
													break;
												}
												else w--
											};
										}

										else if (y == 2) {
											for (w = 6; w >= 1;) {
												if (b[w] == dashmoji) {
													b[w] = o_emoji
													Args.user = 1;

													o[y] = "<:ystd:891239779377754123>"
													o[n] = "<:rtd:891239779356774400>"
													break;
												}
												else w--
											};
										}
										else if (y == 3) {
											for (w = 6; w >= 1;) {
												if (c[w] == dashmoji) {
													c[w] = o_emoji
													Args.user = 1;

													o[y] = "<:ystd:891239779377754123>"
													o[n] = "<:rtd:891239779356774400>"
													break;
												}
												else w--
											};
										}
										else if (y == 4) {
											for (w = 6; w >= 1;) {
												if (d[w] == dashmoji) {
													d[w] = o_emoji
													Args.user = 1;

													o[y] = "<:ystd:891239779377754123>"
													o[n] = "<:rtd:891239779356774400>"

													break;
												}
												else w--
											};
										}
										else if (y == 5) {
											for (w = 6; w >= 1;) {
												if (e[w] == dashmoji) {
													e[w] = o_emoji
													Args.user = 1;
													o[y] = "<:ystd:891239779377754123>"
													o[n] = "<:rtd:891239779356774400>"

													break;
												}
												else w--
											};
										}
										else if (y == 6) {
											for (w = 6; w >= 1;) {
												if (f[w] == dashmoji) {
													f[w] = o_emoji
													Args.user = 1;
													o[y] = "<:ystd:891239779377754123>"
													o[n] = "<:rtd:891239779356774400>"

													break;
												}
												else w--
											};
										}
										else if (y == 7) {
											for (w = 6; w >= 1;) {
												if (g[w] == dashmoji) {
													g[w] = o_emoji
													Args.user = 1;
													o[y] = "<:ystd:891239779377754123>"
													o[n] = "<:rtd:891239779356774400>"

													break;
												}
												else w--
											};
										}


									}





								} else {
									o[n] = "<:rtd:891239779356774400>"
									if (t.customId == "ll")
										n = 1;
									o[1] = "<:tstd:892959158893174834>";
									o[2] = "<:tstd:892959158893174834>";
									o[3] = "<:tstd:892959158893174834>";
									o[4] = "<:tstd:892959158893174834>";
									o[5] = "<:tstd:892959158893174834>";
									o[6] = "<:tstd:892959158893174834>";
									o[7] = "<:tstd:892959158893174834>";
									o[y] = "<:ystd:891239779377754123>"
									o[n] = "<:rtd:891239779356774400>"
									if (t.customId == "l") {
										n = n - 1;
										if (n < 1) {
											n = 1
										}
										o[1] = "<:tstd:892959158893174834>";
										o[2] = "<:tstd:892959158893174834>";
										o[3] = "<:tstd:892959158893174834>";
										o[4] = "<:tstd:892959158893174834>";
										o[5] = "<:tstd:892959158893174834>";
										o[6] = "<:tstd:892959158893174834>";
										o[7] = "<:tstd:892959158893174834>";
										o[y] = "<:ystd:891239779377754123>"
										o[n] = "<:rtd:891239779356774400>"
									};
									if (t.customId == "rr")
										n = 7;
									o[1] = "<:tstd:892959158893174834>";
									o[2] = "<:tstd:892959158893174834>";
									o[3] = "<:tstd:892959158893174834>";
									o[4] = "<:tstd:892959158893174834>";
									o[5] = "<:tstd:892959158893174834>";
									o[6] = "<:tstd:892959158893174834>";
									o[7] = "<:tstd:892959158893174834>";
									o[y] = "<:ystd:891239779377754123>"
									o[n] = "<:rtd:891239779356774400>"
									if (t.customId == "r") {
										n = n + 1;
										if (n > 7) {
											n = 7
										}
										o[1] = "<:tstd:892959158893174834>";
										o[2] = "<:tstd:892959158893174834>";
										o[3] = "<:tstd:892959158893174834>";
										o[4] = "<:tstd:892959158893174834>";
										o[5] = "<:tstd:892959158893174834>";
										o[6] = "<:tstd:892959158893174834>";
										o[7] = "<:tstd:892959158893174834>";
										o[y] = "<:ystd:891239779377754123>"
										o[n] = "<:rtd:891239779356774400>"
									};
									if (t.customId == "mid") {

										if (n == 1) {
											for (w = 6; w >= 1;) {
												if (a[w] == dashmoji) {
													a[w] = x_emoji
													Args.user = 0;

													o[n] = "<:rstd:891239779365175297>"
													o[y] = "<:ytd:891239779549732874>"
													break;
												}
												else w--
											};
										}

										else if (n == 2) {
											for (w = 6; w >= 1;) {
												if (b[w] == dashmoji) {
													b[w] = x_emoji
													Args.user = 0;
													o[y] = "<:ytd:891239779549732874>"
													o[n] = "<:rstd:891239779365175297>"
													break;
												}
												else w--
											};
										}
										else if (n == 3) {
											for (w = 6; w >= 1;) {
												if (c[w] == dashmoji) {
													c[w] = x_emoji
													Args.user = 0;
													o[n] = "<:rstd:891239779365175297>"
													o[y] = "<:ytd:891239779549732874>"
													break;
												}
												else w--
											};
										}
										else if (n == 4) {
											for (w = 6; w >= 1;) {
												if (d[w] == dashmoji) {
													d[w] = x_emoji
													Args.user = 0;
													o[n] = "<:rstd:891239779365175297>"
													o[y] = "<:ytd:891239779549732874>"
													break;
												}
												else w--
											};
										}
										else if (n == 5) {
											for (w = 6; w >= 1;) {
												if (e[w] == dashmoji) {
													e[w] = x_emoji
													Args.user = 0;
													o[n] = "<:rstd:891239779365175297>"
													o[y] = "<:ytd:891239779549732874>"
													break;
												}
												else w--
											};
										}
										else if (n == 6) {
											for (w = 6; w >= 1;) {
												if (f[w] == dashmoji) {
													f[w] = x_emoji
													Args.user = 0;
													o[n] = "<:rstd:891239779365175297>"
													o[y] = "<:ytd:891239779549732874>"
													break;
												}
												else w--
											};
										}
										else if (n == 7) {
											for (w = 6; w >= 1;) {
												if (g[w] == dashmoji) {
													g[w] = x_emoji
													Args.user = 0;
													o[n] = "<:rstd:891239779365175297>"
													o[y] = "<:ytd:891239779549732874>"
													break;
												}
												else w--
											};
										}


									}





								}
								t.deferUpdate();
								no_of_dash = 0;
						for(checking_empt=1; checking_empt<=6; checking_empt++){

							if(a[checking_empt]==dashmoji||b[checking_empt]==dashmoji||c[checking_empt]==dashmoji||d[checking_empt]==dashmoji||e[checking_empt]==dashmoji||f[checking_empt]==dashmoji||g[checking_empt]==dashmoji){
								no_of_dash = no_of_dash +1;
								break;
							}
						}

						if (no_of_dash == 0)  {

									if (
										a[6] == o_emoji &&
										a[5] == o_emoji &&
										a[4] == o_emoji &&
										a[3] == o_emoji
									)
										won["<:yellow_square:>"] = true;
									if (
										a[2] == o_emoji &&
										a[3] == o_emoji &&
										a[4] == o_emoji &&
										a[5] == o_emoji
									)
										won["<:yellow_square:>"] = true;
									if (
										a[1] == o_emoji &&
										a[2] == o_emoji &&
										a[3] == o_emoji &&
										a[4] == o_emoji
									)
										won["<:yellow_square:>"] = true;
									if (
										b[6] == o_emoji &&
										b[5] == o_emoji &&
										b[4] == o_emoji &&
										b[3] == o_emoji
									)
										won["<:yellow_square:>"] = true;
									if (
										b[2] == o_emoji &&
										b[3] == o_emoji &&
										b[4] == o_emoji &&
										b[5] == o_emoji
									)
										won["<:yellow_square:>"] = true;
									if (
										b[1] == o_emoji &&
										b[2] == o_emoji &&
										b[3] == o_emoji &&
										b[4] == o_emoji
									)
										won["<:yellow_square:>"] = true;
									if (
										c[6] == o_emoji &&
										c[5] == o_emoji &&
										c[4] == o_emoji &&
										c[3] == o_emoji
									)
										won["<:yellow_square:>"] = true;
									if (
										c[2] == o_emoji &&
										c[3] == o_emoji &&
										c[4] == o_emoji &&
										c[5] == o_emoji
									)
										won["<:yellow_square:>"] = true;
									if (
										c[1] == o_emoji &&
										c[2] == o_emoji &&
										c[3] == o_emoji &&
										c[4] == o_emoji
									)
										won["<:yellow_square:>"] = true;
									if (
										d[6] == o_emoji &&
										d[5] == o_emoji &&
										d[4] == o_emoji &&
										d[3] == o_emoji
									)
										won["<:yellow_square:>"] = true;
									if (
										d[2] == o_emoji &&
										d[3] == o_emoji &&
										d[4] == o_emoji &&
										d[5] == o_emoji
									)
										won["<:yellow_square:>"] = true;
									if (
										d[1] == o_emoji &&
										d[2] == o_emoji &&
										d[3] == o_emoji &&
										d[4] == o_emoji
									)
										won["<:yellow_square:>"] = true;
									if (
										e[6] == o_emoji &&
										e[5] == o_emoji &&
										e[4] == o_emoji &&
										e[3] == o_emoji
									)
										won["<:yellow_square:>"] = true;
									if (
										e[2] == o_emoji &&
										e[3] == o_emoji &&
										e[4] == o_emoji &&
										e[5] == o_emoji
									)
										won["<:yellow_square:>"] = true;
									if (
										e[1] == o_emoji &&
										e[2] == o_emoji &&
										e[3] == o_emoji &&
										e[4] == o_emoji
									)
										won["<:yellow_square:>"] = true;
									if (
										f[6] == o_emoji &&
										f[5] == o_emoji &&
										f[4] == o_emoji &&
										f[3] == o_emoji
									)
										won["<:yellow_square:>"] = true;
									if (
										f[2] == o_emoji &&
										f[3] == o_emoji &&
										f[4] == o_emoji &&
										f[5] == o_emoji
									)
										won["<:yellow_square:>"] = true;
									if (
										f[1] == o_emoji &&
										f[2] == o_emoji &&
										f[3] == o_emoji &&
										f[4] == o_emoji
									)
										won["<:yellow_square:>"] = true;
									if (
										g[6] == o_emoji &&
										g[5] == o_emoji &&
										g[4] == o_emoji &&
										g[3] == o_emoji
									)
										won["<:yellow_square:>"] = true;
									if (
										g[2] == o_emoji &&
										g[3] == o_emoji &&
										g[4] == o_emoji &&
										g[5] == o_emoji
									)
										won["<:yellow_square:>"] = true;
									if (
										g[1] == o_emoji &&
										g[2] == o_emoji &&
										g[3] == o_emoji &&
										g[4] == o_emoji
									)
										won["<:yellow_square:>"] = true;
									if (
										a[6] == o_emoji &&
										b[6] == o_emoji &&
										c[6] == o_emoji &&
										d[6] == o_emoji
									)
										won["<:yellow_square:>"] = true;
									if (
										e[6] == o_emoji &&
										b[6] == o_emoji &&
										c[6] == o_emoji &&
										d[6] == o_emoji
									)
										won["<:yellow_square:>"] = true;
									if (
										e[6] == o_emoji &&
										f[6] == o_emoji &&
										c[6] == o_emoji &&
										d[6] == o_emoji
									)
										won["<:yellow_square:>"] = true;
									if (
										e[6] == o_emoji &&
										f[6] == o_emoji &&
										g[6] == o_emoji &&
										d[6] == o_emoji
									)
										won["<:yellow_square:>"] = true;
									if (
										a[5] == o_emoji &&
										b[5] == o_emoji &&
										c[5] == o_emoji &&
										d[5] == o_emoji
									)
										won["<:yellow_square:>"] = true;
									if (
										e[5] == o_emoji &&
										b[5] == o_emoji &&
										c[5] == o_emoji &&
										d[5] == o_emoji
									)
										won["<:yellow_square:>"] = true;
									if (
										e[5] == o_emoji &&
										f[5] == o_emoji &&
										c[5] == o_emoji &&
										d[5] == o_emoji
									)
										won["<:yellow_square:>"] = true;
									if (
										e[5] == o_emoji &&
										f[5] == o_emoji &&
										g[5] == o_emoji &&
										d[5] == o_emoji
									)
										won["<:yellow_square:>"] = true;
									if (
										a[4] == o_emoji &&
										b[4] == o_emoji &&
										c[4] == o_emoji &&
										d[4] == o_emoji
									)
										won["<:yellow_square:>"] = true;
									if (
										e[4] == o_emoji &&
										b[4] == o_emoji &&
										c[4] == o_emoji &&
										d[4] == o_emoji
									)
										won["<:yellow_square:>"] = true;
									if (
										e[4] == o_emoji &&
										f[4] == o_emoji &&
										c[4] == o_emoji &&
										d[4] == o_emoji
									)
										won["<:yellow_square:>"] = true;
									if (
										e[4] == o_emoji &&
										f[4] == o_emoji &&
										g[4] == o_emoji &&
										d[4] == o_emoji
									)
										won["<:yellow_square:>"] = true;
									if (
										a[3] == o_emoji &&
										b[3] == o_emoji &&
										c[3] == o_emoji &&
										d[3] == o_emoji
									)
										won["<:yellow_square:>"] = true;
									if (
										e[3] == o_emoji &&
										b[3] == o_emoji &&
										c[3] == o_emoji &&
										d[3] == o_emoji
									)
										won["<:yellow_square:>"] = true;
									if (
										e[3] == o_emoji &&
										f[3] == o_emoji &&
										c[3] == o_emoji &&
										d[3] == o_emoji
									)
										won["<:yellow_square:>"] = true;
									if (
										e[3] == o_emoji &&
										f[3] == o_emoji &&
										g[3] == o_emoji &&
										d[3] == o_emoji
									)
										won["<:yellow_square:>"] = true;
									if (
										a[2] == o_emoji &&
										b[2] == o_emoji &&
										c[2] == o_emoji &&
										d[2] == o_emoji
									)
										won["<:yellow_square:>"] = true;
									if (
										e[2] == o_emoji &&
										b[2] == o_emoji &&
										c[2] == o_emoji &&
										d[2] == o_emoji
									)
										won["<:yellow_square:>"] = true;
									if (
										e[2] == o_emoji &&
										f[2] == o_emoji &&
										c[2] == o_emoji &&
										d[2] == o_emoji
									)
										won["<:yellow_square:>"] = true;
									if (
										e[2] == o_emoji &&
										f[2] == o_emoji &&
										g[2] == o_emoji &&
										d[2] == o_emoji
									)
										won["<:yellow_square:>"] = true;
									if (
										a[1] == o_emoji &&
										b[1] == o_emoji &&
										c[1] == o_emoji &&
										d[1] == o_emoji
									)
										won["<:yellow_square:>"] = true;
									if (
										e[1] == o_emoji &&
										b[1] == o_emoji &&
										c[1] == o_emoji &&
										d[1] == o_emoji
									)
										won["<:yellow_square:>"] = true;
									if (
										e[1] == o_emoji &&
										f[1] == o_emoji &&
										c[1] == o_emoji &&
										d[1] == o_emoji
									)
										won["<:yellow_square:>"] = true;
									if (
										e[1] == o_emoji &&
										f[1] == o_emoji &&
										g[1] == o_emoji &&
										d[1] == o_emoji
									)
										won["<:yellow_square:>"] = true;
									if (
										a[3] == o_emoji &&
										b[4] == o_emoji &&
										c[5] == o_emoji &&
										d[6] == o_emoji
									)
										won["<:yellow_square:>"] = true;
									if (
										a[2] == o_emoji &&
										b[3] == o_emoji &&
										c[4] == o_emoji &&
										d[5] == o_emoji
									)
										won["<:yellow_square:>"] = true;
									if (
										e[6] == o_emoji &&
										b[3] == o_emoji &&
										c[4] == o_emoji &&
										d[5] == o_emoji
									)
										won["<:yellow_square:>"] = true;
									if (
										a[1] == o_emoji &&
										b[2] == o_emoji &&
										c[3] == o_emoji &&
										d[4] == o_emoji
									)
										won["<:yellow_square:>"] = true;
									if (
										e[5] == o_emoji &&
										b[2] == o_emoji &&
										c[3] == o_emoji &&
										d[4] == o_emoji
									)
										won["<:yellow_square:>"] = true;
									if (
										e[5] == o_emoji &&
										f[6] == o_emoji &&
										c[3] == o_emoji &&
										d[4] == o_emoji
									)
										won["<:yellow_square:>"] = true;
									if (
										e[4] == o_emoji &&
										b[1] == o_emoji &&
										c[2] == o_emoji &&
										d[3] == o_emoji
									)
										won["<:yellow_square:>"] = true;
									if (
										e[4] == o_emoji &&
										f[5] == o_emoji &&
										c[2] == o_emoji &&
										d[3] == o_emoji
									)
										won["<:yellow_square:>"] = true;
									if (
										e[4] == o_emoji &&
										f[5] == o_emoji &&
										g[6] == o_emoji &&
										d[3] == o_emoji
									)
										won["<:yellow_square:>"] = true;
									if (
										c[1] == o_emoji &&
										d[2] == o_emoji &&
										e[3] == o_emoji &&
										f[4] == o_emoji
					
									)
										won["<:yellow_square:>"] = true;
									if (
										g[5] == o_emoji &&
										d[2] == o_emoji &&
										e[3] == o_emoji &&
										f[4] == o_emoji
					
									)
										won["<:yellow_square:>"] = true;
									if (
										g[4] == o_emoji &&
										d[1] == o_emoji &&
										e[2] == o_emoji &&
										f[3] == o_emoji
					
									)
										won["<:yellow_square:>"] = true;
									if (
										a[4] == o_emoji &&
										b[3] == o_emoji &&
										c[2] == o_emoji &&
										d[1] == o_emoji
									)
										won["<:yellow_square:>"] = true;
									if (
										a[5] == o_emoji &&
										b[4] == o_emoji &&
										c[3] == o_emoji &&
										d[2] == o_emoji
									)
										won["<:yellow_square:>"] = true;
									if (
										e[1] == o_emoji &&
										b[4] == o_emoji &&
										c[3] == o_emoji &&
										d[2] == o_emoji
									)
										won["<:yellow_square:>"] = true;
									if (
										a[6] == o_emoji &&
										b[5] == o_emoji &&
										c[4] == o_emoji &&
										d[3] == o_emoji
									)
										won["<:yellow_square:>"] = true;
									if (
										e[2] == o_emoji &&
										b[5] == o_emoji &&
										c[4] == o_emoji &&
										d[3] == o_emoji
									)
										won["<:yellow_square:>"] = true;
									if (
										e[2] == o_emoji &&
										f[1] == o_emoji &&
										c[4] == o_emoji &&
										d[3] == o_emoji
									)
										won["<:yellow_square:>"] = true;
									if (
										e[3] == o_emoji &&
										b[6] == o_emoji &&
										c[5] == o_emoji &&
										d[4] == o_emoji
									)
										won["<:yellow_square:>"] = true;
									if (
										e[3] == o_emoji &&
										f[2] == o_emoji &&
										c[5] == o_emoji &&
										d[4] == o_emoji
									)
										won["<:yellow_square:>"] = true;
									if (
										e[3] == o_emoji &&
										f[2] == o_emoji &&
										g[1] == o_emoji &&
										d[4] == o_emoji
									)
										won["<:yellow_square:>"] = true;
									if (
										c[6] == o_emoji &&
										d[5] == o_emoji &&
										e[4] == o_emoji &&
										f[3] == o_emoji
					
									)
										won["<:yellow_square:>"] = true;
									if (
										g[2] == o_emoji &&
										d[5] == o_emoji &&
										e[4] == o_emoji &&
										f[3] == o_emoji
					
									)
										won["<:yellow_square:>"] = true;
									if (
										g[3] == o_emoji &&
										d[6] == o_emoji &&
										e[5] == o_emoji &&
										f[4] == o_emoji
					
									)
										won["<:yellow_square:>"] = true;

									const xoemb5 = new MessageEmbed()
										.setTitle('Connect 4')
										.setDescription(
											`Round over`
										)
										.addFields(

											{
												name: `🟡 | ${fighters[0] == interaction.user.id ? `${interaction.user.username}` : `${opponent.username}`
													}`, value: `:warning: Draw`, inline: true
											},
											{
												name: `🔴 | ${fighters[0] == interaction.user.id ? `${opponent.username}` : `${interaction.user.username}`
													}`, value: `:warning: Draw`, inline: true
											},
										)
										.setColor('#36393F')
										;
									if (won["<:yellow_square:>"] == true) return connects(m);
									else if (won["<:red_square:>"] == true) return;
									else {
										return m.edit({ content: `It's a tie!\n${o[1]}${o[2]}${o[3]}${o[4]}${o[5]}${o[6]}${o[7]}\n${a[1]}${b[1]}${c[1]}${d[1]}${e[1]}${f[1]}${g[1]}\n${a[2]}${b[2]}${c[2]}${d[2]}${e[2]}${f[2]}${g[2]}\n${a[3]}${b[3]}${c[3]}${d[3]}${e[3]}${f[3]}${g[3]}\n${a[4]}${b[4]}${c[4]}${d[4]}${e[4]}${f[4]}${g[4]}\n${a[5]}${b[5]}${c[5]}${d[5]}${e[5]}${f[5]}${g[5]}\n${a[6]}${b[6]}${c[6]}${d[6]}${e[6]}${f[6]}${g[6]}`, embeds: [xoemb5], components:[] })
									}
								}
								connects(m);
							}
						});
						let embed1 = new MessageEmbed()
							.setTitle(`:warning: Error`)
							.setColor('#36393F')
							.setDescription(
								"Sorry, you took too long to respond and the interaction expired."
							);

						collector.on("end", (collected) => {
							if (collected.size == 0)

								m.edit({
									content: `<@!${Args.userid}> didn\'t react in time!`,
									components: [], embeds: [embed1]
								});
						});
					}
				}
			});
			let embed2 = new MessageEmbed()
				.setTitle(`:warning: Error`)
				.setColor('#36393F')
				.setDescription(
					"Sorry, your opponent did not accept your invitation to play Tic Tac Toe."
				);
			collector.on("end", (collected, reason) => {
				if (reason == "time") {

					m.edit({
						content: "<@" + opponent.id + ">. Didnt accept in time",
						embeds: [embed2],
						components: []
					});
				}
				if (reason == "decline") {
					let embed = new MessageEmbed()
						.setTitle("Game Declined!")

						.setColor('#36393F')
						.setFooter(foot)
						.setDescription(`${opponent.user.tag} has declined your game!`);
					m.edit({
						embeds: [embed],
						components: []
					});
				}
			});
		}
		/*interaction.deferReply()

		simplydjs.connect4(client, interaction, {
			slash: true,
			embedColor: '#36393F',
			timeoutEmbedColor: '#FFFF00',


			// other options*/

	}


	//8888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
	else if (commandName === 'fight') {
		/*interaction.deferReply()
		const user = await client.users.cache.get('id');
		interaction.user.send('content');*/

		let opponent = interaction.options.getUser("opponent");
		if (opponent && opponent.id == interaction.user.id) {
			await interaction.reply({ content: 'You cannot play with yourself', ephemeral: true });
		} /*else if (opponent.bot == true) {
			await interaction.reply('cannot play with bots');
		}*/ else {
			let koijeeta = 0;
			intrbut = [];
			logarray = [];
			fightername = [];
			score = [];
			shield = [];
			scoreslide = [];
			shieldslide = [];
			hfd = [];
			if (!opponent || opponent.id == clientId) {
				fighters = [interaction.user.id, 'Coco Arcade'].sort(() =>
					Math.random() > 0.5 ? 1 : -1
				);
			} else {
				fighters = [interaction.user.id, opponent.id].sort(() =>
					Math.random() > 0.5 ? 1 : -1
				);
			}
			let Args = {
				user: 0
			};
			Args.userid = fighters[Args.user];
			if (!opponent || opponent.id == clientId) {
				fightername[0] = `${fighters[0] == interaction.user.id ? `${interaction.user.username}` : `Coco Arcade`
					}`;
				fightername[1] = `${fighters[1] == interaction.user.id ? `${interaction.user.username}` : `Coco Arcade`
					}`;
			} else {
				fightername[0] = `${fighters[0] == interaction.user.id ? `${interaction.user.username}` : `${opponent.username}`
					}`;
				fightername[1] = `${fighters[1] == interaction.user.id ? `${interaction.user.username}` : `${opponent.username}`
					}`;
			}


			score[0] = 100;
			score[1] = 100;
			shield[0] = 0;
			shield[1] = 0;
			hfd[0] = ':heart:';
			hfd[1] = ':heart:';
			scoreslide[0] = '<a:Bar1Full:897823088417316894><a:Bar2Full:897823088551538688><a:Bar2Full:897823088551538688><a:Bar2Full:897823088551538688><a:Bar3Full:897823088589299772>';
			scoreslide[1] = '<a:Bar1Full:897823088417316894><a:Bar2Full:897823088551538688><a:Bar2Full:897823088551538688><a:Bar2Full:897823088551538688><a:Bar3Full:897823088589299772>';
			shieldslide[0] = '<:Bar1Empty:897823088274706452><:Bar2Empty:897823088341831731><:Bar2Empty:897823088341831731><:Bar2Empty:897823088341831731><:Bar3Empty:897823088106934273>';
			shieldslide[1] = '<:Bar1Empty:897823088274706452><:Bar2Empty:897823088341831731><:Bar2Empty:897823088341831731><:Bar2Empty:897823088341831731><:Bar3Empty:897823088106934273>';
			start_log = Math.floor(0 + (Math.random() * 2));
			if(start_log==0){
log = "`" + `${interaction.user.username}` + " started a fight!`";
			}else{
				log = "`" + `${interaction.user.username}` + " came in ready to throw hands!`";
			}
			
			logarray.push(log);
			a1 = `false`;
			const exampleEmbed = new MessageEmbed()
				.setColor('#003060')
				.setThumbnail('https://cdn.discordapp.com/attachments/895655754403557389/897823010097086524/Fight_icon.png')
				.addFields(
					{ name: `${fightername[0]}`, value: `${hfd[0]} ${scoreslide[0]} **${score[0]}%**\n:shield: ${shieldslide[0]} **${shield[0]}lvl**`, inline: true },
					//{ name:'\u200b',value: '\u200b', inline: true },
					{ name: `${fightername[1]}`, value: `${hfd[1]} ${scoreslide[1]} **${score[1]}%**\n:shield: ${shieldslide[1]} **${shield[1]}lvl**`, inline: true },
					//{ name:'\u200b',value: 'https://cdn.discordapp.com/attachments/895655754403557389/897823010097086524/Fight_icon.png', inline: true },
					{ name: 'Last Action', value: `${log}` }

				)
			ring = [
				new MessageButton()
					.setCustomId(`punch`)
					.setLabel(`Punch`)
					.setStyle(`PRIMARY`)
					.setEmoji('<:Fight:897823088463474768>')

				,
				new MessageButton()
					.setCustomId(`kick`)
					.setLabel(`Kick`)
					.setStyle(`PRIMARY`)
					.setEmoji('<:Kick:897823088392171610>'),

				new MessageButton()
					.setCustomId(`defend`)
					.setLabel(`Defend`)
					.setStyle(`PRIMARY`)
					.setEmoji('<:Defend:897823088044048445>')
				,
				new MessageButton()
					.setCustomId(`runaway`)
					.setLabel(`Run Away`)
					.setStyle(`DANGER`)
					.setEmoji('<:Run:897823088379568130>'),
				new MessageButton()
					.setCustomId(`logs`)
					.setLabel(`Logs`)
					.setStyle(`SECONDARY`)

			]
			wwe = new MessageActionRow().addComponents(ring);


			await interaction.reply({
				content: `${Args.userid == 'Coco Arcade' ? `Coco Arcade is thinking` : `Your turn <@!${Args.userid}>!`
					}`, embeds: [exampleEmbed], components: [wwe]
			});
			podium = await interaction.fetchReply();



			const collectorjud = podium.createMessageComponentCollector({
				type: "BUTTON",

				time: 30000
			});
			if (Args.userid == 'Coco Arcade') {
				collectorjud.resetTimer();
				botf(podium);
			}

			collectorjud.on("collect", async (move) => {
				if (move.user.id != Args.userid) {
					if (move.user.id == fighters[0] || move.user.id == fighters[1]) {
						if (move.customId == 'logs') {
							move.reply({ content: `${logarray}`, ephemeral: true });
							collectorjud.resetTimer();

						} else {
							move.reply({
								content: "It's not your turn", ephemeral: true

							});
						}
					} else {
						move.reply({
							content: "You are not in the lobby", ephemeral: true

						});

					};
				} else {
					if (move.customId == 'punch') {
						collectorjud.resetTimer();
						opposition = `${Args.user == 0 ? 1 : 0}`;
						shamage = score[opposition];

						if (shield[opposition] >= 0 && shield[opposition] < 10) {
							damage = Math.floor(15 + (Math.random() * 26));
						} else if (shield[opposition] >= 10 && shield[opposition] < 20) {
							damage = Math.floor(10 + (Math.random() * 16));
						} else if (shield[opposition] >= 20 && shield[opposition] <= 30) {
							damage = Math.floor(3 + (Math.random() * 13));
						}
						probability = Math.floor(1 + (Math.random() * 4));
						if (shield[Args.user] < shield[opposition] && probability == 4) {
							shamage = score[Args.user];

							if (shield[Args.user] >= 0 && shield[Args.user] < 10) {
								damage = Math.floor(15 + (Math.random() * 26));
							} else if (shield[Args.user] >= 10 && shield[Args.user] < 20) {
								damage = Math.floor(10 + (Math.random() * 16));
							} else if (shield[Args.user] >= 20 && shield[Args.user] <= 30) {
								damage = Math.floor(3 + (Math.random() * 13));
							}
							score[Args.user] = score[Args.user] - damage;
							punch_log = Math.floor(0 + (Math.random() * 3));
			if(punch_log==0){
log = "`" + `${fightername[Args.user]}` + " punched " + `${fightername[opposition]}` + " so hard their fingers got smashed in the process dealing " + `${damage} %` + " !`";
			}else if(punch_log==1){
				log = "`" + `${fightername[Args.user]}` + " tried to punch " + `${fightername[opposition]}` + " but fell down, They took his " + `${damage} %` + " !`";
			}else if(punch_log==2){
				log = "`" + `${fightername[Args.user]}` + " swung at " + `${fightername[opposition]}` + ", but" + `${fightername[opposition]}` + " dodged and bitch slapped back for " + `${damage} %` + " damage!`";
			}
							//log = "`" + `${fightername[Args.user]}` + " tried to punch " + `${fightername[opposition]}` + " but fell down, They took his " + `${damage} %` + " !`";
							if (score[Args.user] <= 0) {
								score[Args.user] = 0;
								damage = shamage;
								a1 = `true`
								win_log = Math.floor(0 + (Math.random() * 6));
			if(win_log==0){
log = "`" + `${fightername[opposition]}` + " stomped out " + `${fightername[Args.user]}` + " & ended the fight...`";
			}else if(win_log==1){
				log = "`" + `${fightername[opposition]}` + " bashed " + `${fightername[Args.user]}` + "'s head into the pavement!`";
			}else if(win_log==2){
				log = "`" + `${fightername[opposition]}` + " finished " + `${fightername[Args.user]}` + " off by stabbing him wish a shank!`";
			}else if(win_log==3){
				log = "`" + `${fightername[opposition]}` + " shot " + `${fightername[Args.user]}` + " & won the fight!`";
			}else if(win_log==4){
				log = "`" + `${fightername[opposition]}` + " slit " + `${fightername[Args.user]}` + "'s throat and left the scene...`";
			}else if(win_log==5){
				log = "`" + `${fightername[opposition]}` + " smashed " + `${fightername[Args.user]}` + " !`";
			}
								//log = "`" + `${fightername[opposition]}` + " smashed " + `${fightername[Args.user]}` + " !`";
								hfd[Args.user] = '<a:BearCry:886730332076924978>';
							hfd[opposition] = '<a:BunnyParty:901944552317919232>';
								const tagi = await Tags.findOne({ where: { id: fighters[opposition] } });
								if (tagi) {
									if (party_limit == 0) {
										tagi.increment({ 'partygamescore': 10 });
									} else {
										temppartycheck = tagi.get('partygamescorewlim');
										if (temppartycheck <= party_limit_value) {
											tagi.increment({ 'partygamescore': 10 });
											tagi.increment({ 'partygamescorewlim': 10 });

										}
									}
								}
								koijeeta = 1;
								collectorjud.stop("shine");
							}






						} else {
							score[opposition] = score[opposition] - damage;
							punch_log1 = Math.floor(0 + (Math.random() * 8));
							if(punch_log1==0){
				log = "`" + `${fightername[Args.user]}` + " punched " + `${fightername[opposition]}`+ "  in the face & broke thier jaw for " + `${damage} %`  + " damage!`";
							}else if(punch_log1==1){
								log = "`" + `${fightername[Args.user]}` + " punched " + `${fightername[opposition]}`+ " in the arm for " + `${damage} %`  + "damage!`";
							}else if(punch_log1==2){
								log = "`" + `${fightername[Args.user]}` + " punched " + `${fightername[opposition]}`+ " in the neck for " + `${damage} %`  + " damage! silly man is struggling to breathe!`";
							}else if(punch_log1==3){
								log = "`" + `${fightername[Args.user]}` + " punched " + `${fightername[opposition]}`+ " in the eye for " + `${damage} %`  + " damage! Blood is gushing out their eyes!`";
							}else if(punch_log1==4){
								log = "`" + `${fightername[Args.user]}` + " punched " + `${fightername[opposition]}`+ " in the stomach for " + `${damage} %`  + "damage! "+`${fightername[opposition]}`+" is gasping for air!`";
							}else if(punch_log1==5){
								log = "`" + `${fightername[Args.user]}` + " punched " + `${fightername[opposition]}`+ " in the side of thier head for " + `${damage} %`  +"damage!"+`${fightername[opposition]}`+ " is feeling dizzy...`";
							}else if(punch_log1==6){
								log = "`" + `${fightername[Args.user]}` + " uppercut " + `${fightername[opposition]}`+ " for " + `${damage} %`+"damage! Looks like"+`${fightername[opposition]}`  + " really felt that one!`";
							}else if(punch_log1==7){
								log = "`" + `${fightername[Args.user]}` + " gave a super punch to " + `${fightername[opposition]}` + " dealing " + `${damage} %` + " !`";
							}
							//log = "`" + `${fightername[Args.user]}` + " gave a super punch to " + `${fightername[opposition]}` + " dealing " + `${damage} %` + " !`";
							if (score[opposition] <= 0) {
								score[opposition] = 0;
								damage = shamage;
								a1 = `true`
								win_log1 = Math.floor(0 + (Math.random() * 6));
			if(win_log1==0){
log = "`" + `${fightername[Args.user]}` + " stomped out " + `${fightername[opposition]}` + " & ended the fight...`";
			}else if(win_log1==1){
				log = "`" + `${fightername[Args.user]}` + " bashed " + `${fightername[opposition]}` + "'s head into the pavement!`";
			}else if(win_log1==2){
				log = "`" + `${fightername[Args.user]}` + " finished " + `${fightername[opposition]}` + " off by stabbing him wish a shank!`";
			}else if(win_log1==3){
				log = "`" + `${fightername[Args.user]}` + " shot " + `${fightername[opposition]}` + " & won the fight!`";
			}else if(win_log1==4){
				log = "`" + `${fightername[Args.user]}` + " slit " + `${fightername[opposition]}` + "'s throat and left the scene...`";
			}else if(win_log1==5){
				log = "`" + `${fightername[Args.user]}` + " smashed " + `${fightername[opposition]}` + " !`";
			}
								//log = "`" + `${fightername[Args.user]}` + " smashed " + `${fightername[opposition]}` + " !`";
								hfd[Args.user] = '<a:BunnyParty:901944552317919232>';
							hfd[opposition] = '<a:BearCry:886730332076924978>';
								const tagi = await Tags.findOne({ where: { id: fighters[Args.user] } });
								if (tagi) {
									if (party_limit == 0) {
										tagi.increment({ 'partygamescore': 10 });
									} else {
										temppartycheck = tagi.get('partygamescorewlim');
										if (temppartycheck <= party_limit_value) {
											tagi.increment({ 'partygamescore': 10 });
											tagi.increment({ 'partygamescorewlim': 10 });

										}
									}
								}
								koijeeta = 1;
								collectorjud.stop("shine");
							}


						}
						logarray.push(log);
						move.deferUpdate();
						if (Args.user == 0) {
							Args.user = 1;
							Args.userid = fighters[Args.user];
						} else {
							Args.user = 0;
							Args.userid = fighters[Args.user];
						}

					} else if (move.customId == 'kick') {
						collectorjud.resetTimer();
						opposition = `${Args.user == 0 ? 1 : 0}`;
						shamage = score[opposition];

						if (shield[opposition] >= 0 && shield[opposition] < 10) {
							damage = Math.floor(15 + (Math.random() * 26));
						} else if (shield[opposition] >= 10 && shield[opposition] < 20) {
							damage = Math.floor(10 + (Math.random() * 16));
						} else if (shield[opposition] >= 20 && shield[opposition] <= 30) {
							damage = Math.floor(3 + (Math.random() * 13));
						}
						probability = Math.floor(1 + (Math.random() * 4));
						if (shield[Args.user] < shield[opposition] && probability == 4) {
							shamage = score[Args.user];

							if (shield[Args.user] >= 0 && shield[Args.user] < 10) {
								damage = Math.floor(15 + (Math.random() * 26));
							} else if (shield[Args.user] >= 10 && shield[Args.user] < 20) {
								damage = Math.floor(10 + (Math.random() * 16));
							} else if (shield[Args.user] >= 20 && shield[Args.user] <= 30) {
								damage = Math.floor(3 + (Math.random() * 13));
							}
							score[Args.user] = score[Args.user] - damage;
							kick_log = Math.floor(0 + (Math.random() * 3));
			if(kick_log==0){
log = "`" + `${fightername[Args.user]}` + " tried to drop kick " + `${fightername[opposition]}` + " but fell & busted their ass, taking " + `${damage} %` + " damage!`";
			}else if(kick_log==1){
				log = "`" + `${fightername[Args.user]}` + " tried to kick " + `${fightername[opposition]}` + " but Billy grabbed their leg and slammed them to the ground for " + `${damage} %` + " damage!`";
			}else if(kick_log==2){
				log = "`" + `${fightername[Args.user]}` + " tried to kick " + `${fightername[opposition]}` + " but fell down, They took his " + `${damage} %` + " !`";
			}
							//log = "`" + `${fightername[Args.user]}` + " tried to kick " + `${fightername[opposition]}` + " but fell down, They took his " + `${damage} %` + " !`";
							if (score[Args.user] <= 0) {
								score[Args.user] = 0;
								damage = shamage;
								a1 = `true`
								win_log = Math.floor(0 + (Math.random() * 6));
			if(win_log==0){
log = "`" + `${fightername[opposition]}` + " stomped out " + `${fightername[Args.user]}` + " & ended the fight...`";
			}else if(win_log==1){
				log = "`" + `${fightername[opposition]}` + " bashed " + `${fightername[Args.user]}` + "'s head into the pavement!`";
			}else if(win_log==2){
				log = "`" + `${fightername[opposition]}` + " finished " + `${fightername[Args.user]}` + " off by stabbing him wish a shank!`";
			}else if(win_log==3){
				log = "`" + `${fightername[opposition]}` + " shot " + `${fightername[Args.user]}` + " & won the fight!`";
			}else if(win_log==4){
				log = "`" + `${fightername[opposition]}` + " slit " + `${fightername[Args.user]}` + "'s throat and left the scene...`";
			}else if(win_log==5){
				log = "`" + `${fightername[opposition]}` + " smashed " + `${fightername[Args.user]}` + " !`";
			}
								//log = "`" + `${fightername[opposition]}` + " smashed " + `${fightername[Args.user]}` + " !`";
								hfd[Args.user] = '<a:BearCry:886730332076924978>';
							hfd[opposition] = '<a:BunnyParty:901944552317919232>';
								const tagi = await Tags.findOne({ where: { id: fighters[opposition] } });
								if (tagi) {
									if (party_limit == 0) {
										tagi.increment({ 'partygamescore': 10 });
									} else {
										temppartycheck = tagi.get('partygamescorewlim');
										if (temppartycheck <= party_limit_value) {
											tagi.increment({ 'partygamescore': 10 });
											tagi.increment({ 'partygamescorewlim': 10 });

										}
									}
								}
								koijeeta = 1;
								collectorjud.stop("shine");
							}






						} else {
							score[opposition] = score[opposition] - damage;
							kick_log1 = Math.floor(0 + (Math.random() * 5));
			if(kick_log1==0){
log = "`" + `${fightername[Args.user]}` + " kicked " + `${fightername[opposition]}` + "  in the face for " + `${damage} %` + " damage! That left a mark...`";
			}else if(kick_log1==1){
				log = "`" + `${fightername[Args.user]}` + " drop kicked " + `${fightername[opposition]} for`  + `${damage} % damage! That one knocked the air out of` + `${fightername[opposition]}`+"...`";
			}else if(kick_log1==2){
				log = "`" + `${fightername[Args.user]}` + " low kicked " + `${fightername[opposition]}` + " for " + `${damage} %` + " damage!`";
			}else if(kick_log1==3){
				log = "`" + `${fightername[Args.user]}` + " roundhouse kicked " + `${fightername[opposition]}` + " for " + `${damage} %` + " damage!`";
			}else if(kick_log1==4){
				log = "`" + `${fightername[Args.user]}` + " gave a 133t kick to " + `${fightername[opposition]}` + " dealing " + `${damage} %` + " !`";
			}
							//log = "`" + `${fightername[Args.user]}` + " gave a 133t kick to " + `${fightername[opposition]}` + " dealing " + `${damage} %` + " !`";
							if (score[opposition] <= 0) {
								score[opposition] = 0;
								damage = shamage;
								a1 = `true`
								win_log1 = Math.floor(0 + (Math.random() * 6));
			if(win_log1==0){
log = "`" + `${fightername[Args.user]}` + " stomped out " + `${fightername[opposition]}` + " & ended the fight...`";
			}else if(win_log1==1){
				log = "`" + `${fightername[Args.user]}` + " bashed " + `${fightername[opposition]}` + "'s head into the pavement!`";
			}else if(win_log1==2){
				log = "`" + `${fightername[Args.user]}` + " finished " + `${fightername[opposition]}` + " off by stabbing him wish a shank!`";
			}else if(win_log1==3){
				log = "`" + `${fightername[Args.user]}` + " shot " + `${fightername[opposition]}` + " & won the fight!`";
			}else if(win_log1==4){
				log = "`" + `${fightername[Args.user]}` + " slit " + `${fightername[opposition]}` + "'s throat and left the scene...`";
			}else if(win_log1==5){
				log = "`" + `${fightername[Args.user]}` + " smashed " + `${fightername[opposition]}` + " !`";
			}
								//log = "`" + `${fightername[Args.user]}` + " smashed " + `${fightername[opposition]}` + " !`";
								hfd[Args.user] = '<a:BunnyParty:901944552317919232>';
							hfd[opposition] = '<a:BearCry:886730332076924978>';
								const tagi = await Tags.findOne({ where: { id: fighters[Args.user] } });
								if (tagi) {
									if (party_limit == 0) {
										tagi.increment({ 'partygamescore': 10 });
									} else {
										temppartycheck = tagi.get('partygamescorewlim');
										if (temppartycheck <= party_limit_value) {
											tagi.increment({ 'partygamescore': 10 });
											tagi.increment({ 'partygamescorewlim': 10 });

										}
									}
								}
								koijeeta = 1;
								collectorjud.stop("shine");
							}


						}
						logarray.push(log);
						move.deferUpdate();
						if (Args.user == 0) {
							Args.user = 1;
							Args.userid = fighters[Args.user];
						} else {
							Args.user = 0;
							Args.userid = fighters[Args.user];
						}

					} else if (move.customId == 'defend') {
						collectorjud.resetTimer();
						if (shield[Args.user] == 30) {
							log = "`" + `${fightername[Args.user]}` + " is being greedy!!!`";
						} else {
							scup = 30 - shield[Args.user];
							shup = Math.floor(2 + (Math.random() * 14));//15-2=13+1
							shield[Args.user] = shield[Args.user] + shup;
							if (shield[Args.user] > 30) {
								shup = scup;
								shield[Args.user] = 30;
							}
							shield_log1 = Math.floor(0 + (Math.random() * 7));
			if(shield_log1==0){
log ="`" + `${fightername[Args.user]}` + " is using the power of friendship and gained " + `${shup}` + " level armor!`";
			}else if(shield_log1==1){
				log = "`" + `${fightername[Args.user]}` + " sacrificed the soul of a loved one for " + `${shup}` + " level armor!`";
			}else if(shield_log1==2){
				log = "`" + `${fightername[Args.user]}` + " is using an orphan as a meat shield & gained " + `${shup}` + " level armor!`";
			}else if(shield_log1==3){
				log = "`" + `${fightername[Args.user]}` + " snorted some crack and gained a crackhead energy shield for " + `${shup}` + " level armor!`";
			}else if(shield_log1==4){
				log = "`" + `${fightername[Args.user]}` + " cast a spell and gained " + `${shup}` + " level armor!`";
			}else if(shield_log1==5){
				log = "`" + `${fightername[Args.user]}` + " picked up a small wooden shield to defend with & gained " + `${shup}` + " level armor!`";
			}else if(shield_log1==6){
				log = "`" + `${fightername[Args.user]}` + " increased their defense level by " + `${shup}` + "!`";
			}
							//log = "`" + `${fightername[Args.user]}` + " increased their defense level by " + `${shup}` + "!`";
						}
						logarray.push(log);
						move.deferUpdate();
						if (Args.user == 0) {
							Args.user = 1;
							Args.userid = fighters[Args.user];
						} else {
							Args.user = 0;
							Args.userid = fighters[Args.user];
						}


					} else if (move.customId == 'runaway') {
						ran_log = Math.floor(0 + (Math.random() * 4));
			if(ran_log==0){
log = "`" + `${fightername[Args.user]}` + " ran away from the fight like a little bitch!`";
			}else if(ran_log==1){
				log = "`" + `${fightername[Args.user]}` + " dipped cause he ain't bout that life!`";
			}else if(ran_log==2){
				log = "`" + `${fightername[Args.user]}` + " bitch ass ran away like a coward!`";
			}else if(ran_log==3){
				log = "`" + `${fightername[Args.user]}` + " ran away! What a wimp`";
			}
						//log = "`" + `${fightername[Args.user]}` + " ran away! What a wimp`";
						a1 = `true`;
						hfd[Args.user] = ':flag_white:';
						move.deferUpdate();
						collectorjud.stop("shine");


					} else if (move.customId == 'logs') {
						move.reply({ content: `${logarray.join('\n')}`, ephemeral: true });
						collectorjud.resetTimer();
					}
					//////////////////////////////////////////////turn changing

					///////////////////////////////shield level updating///////////////////////////////////////////////////////////////////////////////
					for (conn = 0; conn <= 1; conn++) {
						if (shield[conn] == 0) {
							shieldslide[conn] = '<:Bar1Empty:897823088274706452><:Bar2Empty:897823088341831731><:Bar2Empty:897823088341831731><:Bar2Empty:897823088341831731><:Bar3Empty:897823088106934273>';
						} else if (shield[conn] > 0 && shield[conn] <= 2) {
							shieldslide[conn] = '<a:Bar1Half:897823088006271017><:Bar2Empty:897823088341831731><:Bar2Empty:897823088341831731><:Bar2Empty:897823088341831731><:Bar3Empty:897823088106934273>';
						} else if (shield[conn] > 2 && shield[conn] <= 6) {
							shieldslide[conn] = '<a:Bar1Mid:897823088106950707><:Bar2Empty:897823088341831731><:Bar2Empty:897823088341831731><:Bar2Empty:897823088341831731><:Bar3Empty:897823088106934273>';
						} else if (shield[conn] > 6 && shield[conn] <= 8) {
							shieldslide[conn] = '<a:Bar1Full:897823088417316894><:Bar2Empty:897823088341831731><:Bar2Empty:897823088341831731><:Bar2Empty:897823088341831731><:Bar3Empty:897823088106934273>';
						} else if (shield[conn] > 8 && shield[conn] <= 10) {
							shieldslide[conn] = '<a:Bar1Full:897823088417316894><a:Bar2Mid:897823088207605801><:Bar2Empty:897823088341831731><:Bar2Empty:897823088341831731><:Bar3Empty:897823088106934273>';
						} else if (shield[conn] > 10 && shield[conn] <= 12) {
							shieldslide[conn] = '<a:Bar1Full:897823088417316894><a:Bar2High:897823088333434893><:Bar2Empty:897823088341831731><:Bar2Empty:897823088341831731><:Bar3Empty:897823088106934273>';
						} else if (shield[conn] > 12 && shield[conn] <= 14) {
							shieldslide[conn] = '<a:Bar1Full:897823088417316894><a:Bar2Full:897823088551538688><:Bar2Empty:897823088341831731><:Bar2Empty:897823088341831731><:Bar3Empty:897823088106934273>';
						} else if (shield[conn] > 14 && shield[conn] <= 16) {
							shieldslide[conn] = '<a:Bar1Full:897823088417316894><a:Bar2Full:897823088551538688><a:Bar2Mid:897823088207605801><:Bar2Empty:897823088341831731><:Bar3Empty:897823088106934273>';
						} else if (shield[conn] > 16 && shield[conn] <= 18) {
							shieldslide[conn] = '<a:Bar1Full:897823088417316894><a:Bar2Full:897823088551538688><a:Bar2High:897823088333434893><:Bar2Empty:897823088341831731><:Bar3Empty:897823088106934273>';
						} else if (shield[conn] > 18 && shield[conn] <= 20) {
							shieldslide[conn] = '<a:Bar1Full:897823088417316894><a:Bar2Full:897823088551538688><a:Bar2Full:897823088551538688><:Bar2Empty:897823088341831731><:Bar3Empty:897823088106934273>';
						} else if (shield[conn] > 20 && shield[conn] <= 22) {
							shieldslide[conn] = '<a:Bar1Full:897823088417316894><a:Bar2Full:897823088551538688><a:Bar2Full:897823088551538688><a:Bar2Mid:897823088207605801><:Bar3Empty:897823088106934273>';
						} else if (shield[conn] > 22 && shield[conn] <= 24) {
							shieldslide[conn] = '<a:Bar1Full:897823088417316894><a:Bar2Full:897823088551538688><a:Bar2Full:897823088551538688><a:Bar2High:897823088333434893><:Bar3Empty:897823088106934273>';
						} else if (shield[conn] > 24 && shield[conn] <= 27) {
							shieldslide[conn] = '<a:Bar1Full:897823088417316894><a:Bar2Full:897823088551538688><a:Bar2Full:897823088551538688><a:Bar2Full:897823088551538688><:Bar3Empty:897823088106934273>';
						} else if (shield[conn] > 27 && shield[conn] <= 29) {
							shieldslide[conn] = '<a:Bar1Full:897823088417316894><a:Bar2Full:897823088551538688><a:Bar2Full:897823088551538688><a:Bar2Full:897823088551538688><a:Bar3Mid:897823088362782750>';
						} else if (shield[conn] == 30) {
							shieldslide[conn] = '<a:Bar1Full:897823088417316894><a:Bar2Full:897823088551538688><a:Bar2Full:897823088551538688><a:Bar2Full:897823088551538688><a:Bar3Full:897823088589299772>';
						}
					}
					////////////////////////////////////////////score level updating/////////////////////////////////////////////////////////////////////////
					for (conn = 0; conn <= 1; conn++) {
						if (score[conn] == 0) {
							scoreslide[conn] = '<:Bar1Empty:897823088274706452><:Bar2Empty:897823088341831731><:Bar2Empty:897823088341831731><:Bar2Empty:897823088341831731><:Bar3Empty:897823088106934273>';
							
						} else if (score[conn] > 0 && score[conn] <= 8) {
							scoreslide[conn] = '<a:Bar1Half:897823088006271017><:Bar2Empty:897823088341831731><:Bar2Empty:897823088341831731><:Bar2Empty:897823088341831731><:Bar3Empty:897823088106934273>';
						} else if (score[conn] > 8 && score[conn] <= 17) {
							scoreslide[conn] = '<a:Bar1Mid:897823088106950707><:Bar2Empty:897823088341831731><:Bar2Empty:897823088341831731><:Bar2Empty:897823088341831731><:Bar3Empty:897823088106934273>';
						} else if (score[conn] > 17 && score[conn] <= 27) {
							scoreslide[conn] = '<a:Bar1Full:897823088417316894><:Bar2Empty:897823088341831731><:Bar2Empty:897823088341831731><:Bar2Empty:897823088341831731><:Bar3Empty:897823088106934273>';
						} else if (score[conn] > 27 && score[conn] <= 36) {
							scoreslide[conn] = '<a:Bar1Full:897823088417316894><a:Bar2Mid:897823088207605801><:Bar2Empty:897823088341831731><:Bar2Empty:897823088341831731><:Bar3Empty:897823088106934273>';
						} else if (score[conn] > 36 && score[conn] <= 44) {
							scoreslide[conn] = '<a:Bar1Full:897823088417316894><a:Bar2High:897823088333434893><:Bar2Empty:897823088341831731><:Bar2Empty:897823088341831731><:Bar3Empty:897823088106934273>';
						} else if (score[conn] > 44 && score[conn] <= 51) {
							scoreslide[conn] = '<a:Bar1Full:897823088417316894><a:Bar2Full:897823088551538688><:Bar2Empty:897823088341831731><:Bar2Empty:897823088341831731><:Bar3Empty:897823088106934273>';
						} else if (score[conn] > 51 && score[conn] <= 58) {
							scoreslide[conn] = '<a:Bar1Full:897823088417316894><a:Bar2Full:897823088551538688><a:Bar2Mid:897823088207605801><:Bar2Empty:897823088341831731><:Bar3Empty:897823088106934273>';
						} else if (score[conn] > 58 && score[conn] <= 65) {
							scoreslide[conn] = '<a:Bar1Full:897823088417316894><a:Bar2Full:897823088551538688><a:Bar2High:897823088333434893><:Bar2Empty:897823088341831731><:Bar3Empty:897823088106934273>';
						} else if (score[conn] > 65 && score[conn] <= 72) {
							scoreslide[conn] = '<a:Bar1Full:897823088417316894><a:Bar2Full:897823088551538688><a:Bar2Full:897823088551538688><:Bar2Empty:897823088341831731><:Bar3Empty:897823088106934273>';
						} else if (score[conn] > 72 && score[conn] <= 79) {
							scoreslide[conn] = '<a:Bar1Full:897823088417316894><a:Bar2Full:897823088551538688><a:Bar2Full:897823088551538688><a:Bar2Mid:897823088207605801><:Bar3Empty:897823088106934273>';
						} else if (score[conn] > 79 && score[conn] <= 86) {
							scoreslide[conn] = '<a:Bar1Full:897823088417316894><a:Bar2Full:897823088551538688><a:Bar2Full:897823088551538688><a:Bar2High:897823088333434893><:Bar3Empty:897823088106934273>';
						} else if (score[conn] > 86 && score[conn] <= 93) {
							scoreslide[conn] = '<a:Bar1Full:897823088417316894><a:Bar2Full:897823088551538688><a:Bar2Full:897823088551538688><a:Bar2Full:897823088551538688><:Bar3Empty:897823088106934273>';
						} else if (score[conn] > 93 && score[conn] < 100) {
							scoreslide[conn] = '<a:Bar1Full:897823088417316894><a:Bar2Full:897823088551538688><a:Bar2Full:897823088551538688><a:Bar2Full:897823088551538688><a:Bar3Mid:897823088362782750>';
						} else if (score[conn] == 100) {
							scoreslide[conn] = '<a:Bar1Full:897823088417316894><a:Bar2Full:897823088551538688><a:Bar2Full:897823088551538688><a:Bar2Full:897823088551538688><a:Bar3Full:897823088589299772>';
						}
					}

					//////////////////////message updating

					const exampleEmbed = new MessageEmbed()
						.setColor('#003060')
						.setThumbnail('https://cdn.discordapp.com/attachments/895655754403557389/897823010097086524/Fight_icon.png')
						.addFields(
							{ name: `${fightername[0]}`, value: `${hfd[0]} ${scoreslide[0]} **${score[0]}%**\n:shield: ${shieldslide[0]} **${shield[0]}lvl**`, inline: true },
							//{ name:'\u200b',value: '\u200b', inline: true },
							{ name: `${fightername[1]}`, value: `${hfd[1]} ${scoreslide[1]} **${score[1]}%**\n:shield: ${shieldslide[1]} **${shield[1]}lvl**`, inline: true },
							//{ name:'\u200b',value: 'https://cdn.discordapp.com/attachments/895655754403557389/897823010097086524/Fight_icon.png', inline: true },
							{ name: 'Last Action', value: `${log}` }

						)
					ring = [
						new MessageButton()
							.setCustomId(`punch`)
							.setLabel(`Punch`)
							.setStyle(`PRIMARY`)
							.setEmoji('<:Fight:897823088463474768>')
							.setDisabled(`${a1}`)

						,
						new MessageButton()
							.setCustomId(`kick`)
							.setLabel(`Kick`)
							.setStyle(`PRIMARY`)
							.setEmoji('<:Kick:897823088392171610>')
							.setDisabled(`${a1}`),

						new MessageButton()
							.setCustomId(`defend`)
							.setLabel(`Defend`)
							.setStyle(`PRIMARY`)
							.setEmoji('<:Defend:897823088044048445>')
							.setDisabled(`${a1}`)
						,
						new MessageButton()
							.setCustomId(`runaway`)
							.setLabel(`Run Away`)
							.setStyle(`DANGER`)
							.setEmoji('<:Run:897823088379568130>')
							.setDisabled(`${a1}`),
						new MessageButton()
							.setCustomId(`logs`)
							.setLabel(`Logs`)
							.setStyle(`SECONDARY`)
							.setDisabled(`${a1}`)

					]
					wwe = new MessageActionRow().addComponents(ring);



					if (koijeeta == 1) {
						await interaction.editReply({ content: `:tada:`, embeds: [exampleEmbed], components: [wwe] });
					} else {
						await interaction.editReply({
							content: `${Args.userid == 'Coco Arcade' ? `Coco Arcade is thinking` : `Your turn <@!${Args.userid}>!`
								}`, embeds: [exampleEmbed], components: [wwe]
						});
					}
					if (Args.userid == 'Coco Arcade' && koijeeta != 1) {
						botf(podium);
						collectorjud.resetTimer();
					}





				}



			})
			collectorjud.on("end", (collected, reason) => {

				if (reason == 'time') {
					ran_log = Math.floor(0 + (Math.random() * 4));
			if(ran_log==0){
log = "`" + `${fightername[Args.user]}` + " ran away from the fight like a little bitch!`";
			}else if(ran_log==1){
				log = "`" + `${fightername[Args.user]}` + " dipped cause he ain't bout that life!`";
			}else if(ran_log==2){
				log = "`" + `${fightername[Args.user]}` + " bitch ass ran away like a coward!`";
			}else if(ran_log==3){
				log = "`" + `${fightername[Args.user]}` + " ran away! What a wimp`";
			}
					//log = "`" + `${fightername[Args.user]}` + " ran away! What a wimp`";
					a1 = `true`;
					hfd[Args.user] = ':flag_white:';
					const exampleEmbed = new MessageEmbed()
						.setColor('#003060')
						.setThumbnail('https://cdn.discordapp.com/attachments/895655754403557389/897823010097086524/Fight_icon.png')
						.addFields(
							{ name: `${fightername[0]}`, value: `${hfd[0]} ${scoreslide[0]} **${score[0]}%**\n:shield: ${shieldslide[0]} **${shield[0]}lvl**`, inline: true },
							//{ name:'\u200b',value: '\u200b', inline: true },
							{ name: `${fightername[1]}`, value: `${hfd[1]} ${scoreslide[1]} **${score[1]}%**\n:shield: ${shieldslide[1]} **${shield[1]}lvl**`, inline: true },
							//{ name:'\u200b',value: 'https://cdn.discordapp.com/attachments/895655754403557389/897823010097086524/Fight_icon.png', inline: true },
							{ name: 'Last Action', value: `${log}` }

						)
					ring = [
						new MessageButton()
							.setCustomId(`punch`)
							.setLabel(`Punch`)
							.setStyle(`PRIMARY`)
							.setEmoji('<:Fight:897823088463474768>')
							.setDisabled(`${a1}`)

						,
						new MessageButton()
							.setCustomId(`kick`)
							.setLabel(`Kick`)
							.setStyle(`PRIMARY`)
							.setEmoji('<:Kick:897823088392171610>')
							.setDisabled(`${a1}`),

						new MessageButton()
							.setCustomId(`defend`)
							.setLabel(`Defend`)
							.setStyle(`PRIMARY`)
							.setEmoji('<:Defend:897823088044048445>')
							.setDisabled(`${a1}`)
						,
						new MessageButton()
							.setCustomId(`runaway`)
							.setLabel(`Run Away`)
							.setStyle(`DANGER`)
							.setEmoji('<:Run:897823088379568130>')
							.setDisabled(`${a1}`),
						new MessageButton()
							.setCustomId(`logs`)
							.setLabel(`Logs`)
							.setStyle(`SECONDARY`)
							.setDisabled(`${a1}`)

					]
					wwe = new MessageActionRow().addComponents(ring);


					interaction.editReply({ content: `Your turn <@!${Args.userid}>!`, embeds: [exampleEmbed], components: [wwe] });

				}


			})


			async function botf(podium) {
				await wait(5000);
				botfight = Math.floor(0 + (Math.random() * 3));
				if (botfight == 0) {
					collectorjud.resetTimer();
					opposition = `${Args.user == 0 ? 1 : 0}`;
					shamage = score[opposition];

					if (shield[opposition] >= 0 && shield[opposition] < 10) {
						damage = Math.floor(15 + (Math.random() * 26));
					} else if (shield[opposition] >= 10 && shield[opposition] < 20) {
						damage = Math.floor(10 + (Math.random() * 16));
					} else if (shield[opposition] >= 20 && shield[opposition] <= 30) {
						damage = Math.floor(3 + (Math.random() * 13));
					}
					probability = Math.floor(1 + (Math.random() * 4));
					if (shield[Args.user] < shield[opposition] && probability == 4) {
						shamage = score[Args.user];

						if (shield[Args.user] >= 0 && shield[Args.user] < 10) {
							damage = Math.floor(15 + (Math.random() * 26));
						} else if (shield[Args.user] >= 10 && shield[Args.user] < 20) {
							damage = Math.floor(10 + (Math.random() * 16));
						} else if (shield[Args.user] >= 20 && shield[Args.user] <= 30) {
							damage = Math.floor(3 + (Math.random() * 13));
						}
						score[Args.user] = score[Args.user] - damage;
						punch_log = Math.floor(0 + (Math.random() * 3));
						if(punch_log==0){
			log = "`" + `${fightername[Args.user]}` + " punched " + `${fightername[opposition]}` + " so hard their fingers got smashed in the process dealing " + `${damage} %` + " !`";
						}else if(punch_log==1){
							log = "`" + `${fightername[Args.user]}` + " tried to punch " + `${fightername[opposition]}` + " but fell down, They took his " + `${damage} %` + " !`";
						}else if(punch_log==2){
							log = "`" + `${fightername[Args.user]}` + " swung at " + `${fightername[opposition]}` + ", but" + `${fightername[opposition]}` + " dodged and bitch slapped back for " + `${damage} %` + " damage!`";
						}
						//log = "`" + `${fightername[Args.user]}` + " tried to punch " + `${fightername[opposition]}` + " but fell down, They took his " + `${damage} %` + " !`";
						if (score[Args.user] <= 0) {
							score[Args.user] = 0;
							damage = shamage;
							a1 = `true`
							win_log = Math.floor(0 + (Math.random() * 6));
			if(win_log==0){
log = "`" + `${fightername[opposition]}` + " stomped out " + `${fightername[Args.user]}` + " & ended the fight...`";
			}else if(win_log==1){
				log = "`" + `${fightername[opposition]}` + " bashed " + `${fightername[Args.user]}` + "'s head into the pavement!`";
			}else if(win_log==2){
				log = "`" + `${fightername[opposition]}` + " finished " + `${fightername[Args.user]}` + " off by stabbing him wish a shank!`";
			}else if(win_log==3){
				log = "`" + `${fightername[opposition]}` + " shot " + `${fightername[Args.user]}` + " & won the fight!`";
			}else if(win_log==4){
				log = "`" + `${fightername[opposition]}` + " slit " + `${fightername[Args.user]}` + "'s throat and left the scene...`";
			}else if(win_log==5){
				log = "`" + `${fightername[opposition]}` + " smashed " + `${fightername[Args.user]}` + " !`";
			}
							//log = "`" + `${fightername[opposition]}` + " smashed " + `${fightername[Args.user]}` + " !`";
							hfd[Args.user] = '<a:BearCry:886730332076924978>';
							hfd[opposition] = '<a:BunnyParty:901944552317919232>';
							const tagi = await Tags.findOne({ where: { id: fighters[opposition] } });
							if (tagi) {
								if (party_limit == 0) {
									tagi.increment({ 'partygamescore': 10 });
								} else {
									temppartycheck = tagi.get('partygamescorewlim');
									if (temppartycheck <= party_limit_value) {
										tagi.increment({ 'partygamescore': 10 });
										tagi.increment({ 'partygamescorewlim': 10 });

									}
								}
							}
							koijeeta = 1;
							collectorjud.stop("shine");
						}






					} else {
						score[opposition] = score[opposition] - damage;
						punch_log1 = Math.floor(0 + (Math.random() * 8));
							if(punch_log1==0){
				log = "`" + `${fightername[Args.user]}` + " punched " + `${fightername[opposition]}`+ "  in the face & broke thier jaw for " + `${damage} %`  + " damage!`";
							}else if(punch_log1==1){
								log = "`" + `${fightername[Args.user]}` + " punched " + `${fightername[opposition]}`+ " in the arm for " + `${damage} %`  + "damage!`";
							}else if(punch_log1==2){
								log = "`" + `${fightername[Args.user]}` + " punched " + `${fightername[opposition]}`+ " in the neck for " + `${damage} %`  + " damage! silly man is struggling to breathe!`";
							}else if(punch_log1==3){
								log = "`" + `${fightername[Args.user]}` + " punched " + `${fightername[opposition]}`+ " in the eye for " + `${damage} %`  + " damage! Blood is gushing out their eyes!`";
							}else if(punch_log1==4){
								log = "`" + `${fightername[Args.user]}` + " punched " + `${fightername[opposition]}`+ " in the stomach for " + `${damage} %`  + "damage! "+`${fightername[opposition]}`+" is gasping for air!`";
							}else if(punch_log1==5){
								log = "`" + `${fightername[Args.user]}` + " punched " + `${fightername[opposition]}`+ " in the side of thier head for " + `${damage} %`  +"damage!"+`${fightername[opposition]}`+ " is feeling dizzy...`";
							}else if(punch_log1==6){
								log = "`" + `${fightername[Args.user]}` + " uppercut " + `${fightername[opposition]}`+ " for " + `${damage} %`+"damage! Looks like"+`${fightername[opposition]}`  + " really felt that one!`";
							}else if(punch_log1==7){
								log = "`" + `${fightername[Args.user]}` + " gave a super punch to " + `${fightername[opposition]}` + " dealing " + `${damage} %` + " !`";
							}
						//log = "`" + `${fightername[Args.user]}` + " gave a super punch to " + `${fightername[opposition]}` + " dealing " + `${damage} %` + " !`";
						if (score[opposition] <= 0) {
							score[opposition] = 0;
							damage = shamage;
							a1 = `true`
							win_log1 = Math.floor(0 + (Math.random() * 6));
			if(win_log1==0){
log = "`" + `${fightername[Args.user]}` + " stomped out " + `${fightername[opposition]}` + " & ended the fight...`";
			}else if(win_log1==1){
				log = "`" + `${fightername[Args.user]}` + " bashed " + `${fightername[opposition]}` + "'s head into the pavement!`";
			}else if(win_log1==2){
				log = "`" + `${fightername[Args.user]}` + " finished " + `${fightername[opposition]}` + " off by stabbing him wish a shank!`";
			}else if(win_log1==3){
				log = "`" + `${fightername[Args.user]}` + " shot " + `${fightername[opposition]}` + " & won the fight!`";
			}else if(win_log1==4){
				log = "`" + `${fightername[Args.user]}` + " slit " + `${fightername[opposition]}` + "'s throat and left the scene...`";
			}else if(win_log1==5){
				log = "`" + `${fightername[Args.user]}` + " smashed " + `${fightername[opposition]}` + " !`";
			}
							//log = "`" + `${fightername[Args.user]}` + " smashed " + `${fightername[opposition]}` + " !`";
							hfd[Args.user] = '<a:BunnyParty:901944552317919232>';
							hfd[opposition] = '<a:BearCry:886730332076924978>';
							const tagi = await Tags.findOne({ where: { id: fighters[Args.user] } });
							if (tagi) {
								if (party_limit == 0) {
									tagi.increment({ 'partygamescore': 10 });
								} else {
									temppartycheck = tagi.get('partygamescorewlim');
									if (temppartycheck <= party_limit_value) {
										tagi.increment({ 'partygamescore': 10 });
										tagi.increment({ 'partygamescorewlim': 10 });

									}
								}
							}
							koijeeta = 1;
							collectorjud.stop("shine");
						}


					}
					logarray.push(log);

					if (Args.user == 0) {
						Args.user = 1;
						Args.userid = fighters[Args.user];
					} else {
						Args.user = 0;
						Args.userid = fighters[Args.user];
					}

				} else if (botfight == 1) {
					collectorjud.resetTimer();
					opposition = `${Args.user == 0 ? 1 : 0}`;
					shamage = score[opposition];

					if (shield[opposition] >= 0 && shield[opposition] < 10) {
						damage = Math.floor(15 + (Math.random() * 26));
					} else if (shield[opposition] >= 10 && shield[opposition] < 20) {
						damage = Math.floor(10 + (Math.random() * 16));
					} else if (shield[opposition] >= 20 && shield[opposition] <= 30) {
						damage = Math.floor(3 + (Math.random() * 13));
					}
					probability = Math.floor(1 + (Math.random() * 4));
					if (shield[Args.user] < shield[opposition] && probability == 4) {
						shamage = score[Args.user];

						if (shield[Args.user] >= 0 && shield[Args.user] < 10) {
							damage = Math.floor(15 + (Math.random() * 26));
						} else if (shield[Args.user] >= 10 && shield[Args.user] < 20) {
							damage = Math.floor(10 + (Math.random() * 16));
						} else if (shield[Args.user] >= 20 && shield[Args.user] <= 30) {
							damage = Math.floor(3 + (Math.random() * 13));
						}
						score[Args.user] = score[Args.user] - damage;
						kick_log = Math.floor(0 + (Math.random() * 3));
						if(kick_log==0){
			log = "`" + `${fightername[Args.user]}` + " tried to drop kick " + `${fightername[opposition]}` + " but fell & busted their ass, taking " + `${damage} %` + " damage!`";
						}else if(kick_log==1){
							log = "`" + `${fightername[Args.user]}` + " tried to kick " + `${fightername[opposition]}` + " but Billy grabbed their leg and slammed them to the ground for " + `${damage} %` + " damage!`";
						}else if(kick_log==2){
							log = "`" + `${fightername[Args.user]}` + " tried to kick " + `${fightername[opposition]}` + " but fell down, They took his " + `${damage} %` + " !`";
						}
						//log = "`" + `${fightername[Args.user]}` + " tried to kick " + `${fightername[opposition]}` + " but fell down, They took his " + `${damage} %` + " !`";
						if (score[Args.user] <= 0) {
							score[Args.user] = 0;
							damage = shamage;
							a1 = `true`
							win_log = Math.floor(0 + (Math.random() * 6));
			if(win_log==0){
log = "`" + `${fightername[opposition]}` + " stomped out " + `${fightername[Args.user]}` + " & ended the fight...`";
			}else if(win_log==1){
				log = "`" + `${fightername[opposition]}` + " bashed " + `${fightername[Args.user]}` + "'s head into the pavement!`";
			}else if(win_log==2){
				log = "`" + `${fightername[opposition]}` + " finished " + `${fightername[Args.user]}` + " off by stabbing him wish a shank!`";
			}else if(win_log==3){
				log = "`" + `${fightername[opposition]}` + " shot " + `${fightername[Args.user]}` + " & won the fight!`";
			}else if(win_log==4){
				log = "`" + `${fightername[opposition]}` + " slit " + `${fightername[Args.user]}` + "'s throat and left the scene...`";
			}else if(win_log==5){
				log = "`" + `${fightername[opposition]}` + " smashed " + `${fightername[Args.user]}` + " !`";
			}
							//log = "`" + `${fightername[opposition]}` + " smashed " + `${fightername[Args.user]}` + " !`";
							hfd[Args.user] = '<a:BearCry:886730332076924978>';
							hfd[opposition] = '<a:BunnyParty:901944552317919232>';
							const tagi = await Tags.findOne({ where: { id: fighters[opposition] } });
							if (tagi) {
								if (party_limit == 0) {
									tagi.increment({ 'partygamescore': 10 });
								} else {
									temppartycheck = tagi.get('partygamescorewlim');
									if (temppartycheck <= party_limit_value) {
										tagi.increment({ 'partygamescore': 10 });
										tagi.increment({ 'partygamescorewlim': 10 });

									}
								}
							}
							koijeeta = 1;
							collectorjud.stop("shine");
						}






					} else {
						score[opposition] = score[opposition] - damage;
						kick_log1 = Math.floor(0 + (Math.random() * 5));
						if(kick_log1==0){
			log = "`" + `${fightername[Args.user]}` + " kicked " + `${fightername[opposition]}` + "  in the face for " + `${damage} %` + " damage! That left a mark...`";
						}else if(kick_log1==1){
							log = "`" + `${fightername[Args.user]}` + " drop kicked " + `${fightername[opposition]} for`  + `${damage} % damage! That one knocked the air out of` + `${fightername[opposition]}`+"...`";
						}else if(kick_log1==2){
							log = "`" + `${fightername[Args.user]}` + " low kicked " + `${fightername[opposition]}` + " for " + `${damage} %` + " damage!`";
						}else if(kick_log1==3){
							log = "`" + `${fightername[Args.user]}` + " roundhouse kicked " + `${fightername[opposition]}` + " for " + `${damage} %` + " damage!`";
						}else if(kick_log1==4){
							log = "`" + `${fightername[Args.user]}` + " gave a 133t kick to " + `${fightername[opposition]}` + " dealing " + `${damage} %` + " !`";
						}
						//log = "`" + `${fightername[Args.user]}` + " gave a 133t kick to " + `${fightername[opposition]}` + " dealing " + `${damage} %` + " !`";
						if (score[opposition] <= 0) {
							score[opposition] = 0;
							damage = shamage;
							a1 = `true`
							win_log1 = Math.floor(0 + (Math.random() * 6));
			if(win_log1==0){
log = "`" + `${fightername[Args.user]}` + " stomped out " + `${fightername[opposition]}` + " & ended the fight...`";
			}else if(win_log1==1){
				log = "`" + `${fightername[Args.user]}` + " bashed " + `${fightername[opposition]}` + "'s head into the pavement!`";
			}else if(win_log1==2){
				log = "`" + `${fightername[Args.user]}` + " finished " + `${fightername[opposition]}` + " off by stabbing him wish a shank!`";
			}else if(win_log1==3){
				log = "`" + `${fightername[Args.user]}` + " shot " + `${fightername[opposition]}` + " & won the fight!`";
			}else if(win_log1==4){
				log = "`" + `${fightername[Args.user]}` + " slit " + `${fightername[opposition]}` + "'s throat and left the scene...`";
			}else if(win_log1==5){
				log = "`" + `${fightername[Args.user]}` + " smashed " + `${fightername[opposition]}` + " !`";
			}
							//log = "`" + `${fightername[Args.user]}` + " smashed " + `${fightername[opposition]}` + " !`";
							hfd[Args.user] = '<a:BunnyParty:901944552317919232>';
							hfd[opposition] = '<a:BearCry:886730332076924978>';
							const tagi = await Tags.findOne({ where: { id: fighters[Args.user] } });
							if (tagi) {
								if (party_limit == 0) {
									tagi.increment({ 'partygamescore': 10 });
								} else {
									temppartycheck = tagi.get('partygamescorewlim');
									if (temppartycheck <= party_limit_value) {
										tagi.increment({ 'partygamescore': 10 });
										tagi.increment({ 'partygamescorewlim': 10 });

									}
								}
							}
							koijeeta = 1;
							collectorjud.stop("shine");
						}


					}
					logarray.push(log);

					if (Args.user == 0) {
						Args.user = 1;
						Args.userid = fighters[Args.user];
					} else {
						Args.user = 0;
						Args.userid = fighters[Args.user];
					}

				} else if (botfight == 2) {
					collectorjud.resetTimer();
					if (shield[Args.user] == 30) {
						log = "`" + `${fightername[Args.user]}` + " is being greedy!!!`";
					} else {
						scup = 30 - shield[Args.user];
						shup = Math.floor(2 + (Math.random() * 14));//15-2=13+1
						shield[Args.user] = shield[Args.user] + shup;
						if (shield[Args.user] > 30) {
							shup = scup;
							shield[Args.user] = 30;
						}
						shield_log1 = Math.floor(0 + (Math.random() * 7));
			if(shield_log1==0){
log ="`" + `${fightername[Args.user]}` + " is using the power of friendship and gained " + `${shup}` + " level armor!`";
			}else if(shield_log1==1){
				log = "`" + `${fightername[Args.user]}` + " sacrificed the soul of a loved one for " + `${shup}` + " level armor!`";
			}else if(shield_log1==2){
				log = "`" + `${fightername[Args.user]}` + " is using an orphan as a meat shield & gained " + `${shup}` + " level armor!`";
			}else if(shield_log1==3){
				log = "`" + `${fightername[Args.user]}` + " snorted some crack and gained a crackhead energy shield for " + `${shup}` + " level armor!`";
			}else if(shield_log1==4){
				log = "`" + `${fightername[Args.user]}` + " cast a spell and gained " + `${shup}` + " level armor!`";
			}else if(shield_log1==5){
				log = "`" + `${fightername[Args.user]}` + " picked up a small wooden shield to defend with & gained " + `${shup}` + " level armor!`";
			}else if(shield_log1==6){
				log = "`" + `${fightername[Args.user]}` + " increased their defense level by " + `${shup}` + "!`";
			}
						//log = "`" + `${fightername[Args.user]}` + " increased their defense level by " + `${shup}` + "!`";
					}
					logarray.push(log);

					if (Args.user == 0) {
						Args.user = 1;
						Args.userid = fighters[Args.user];
					} else {
						Args.user = 0;
						Args.userid = fighters[Args.user];
					}
				}
				for (conn = 0; conn <= 1; conn++) {
					if (shield[conn] == 0) {
						shieldslide[conn] = '<:Bar1Empty:897823088274706452><:Bar2Empty:897823088341831731><:Bar2Empty:897823088341831731><:Bar2Empty:897823088341831731><:Bar3Empty:897823088106934273>';
					} else if (shield[conn] > 0 && shield[conn] <= 2) {
						shieldslide[conn] = '<a:Bar1Half:897823088006271017><:Bar2Empty:897823088341831731><:Bar2Empty:897823088341831731><:Bar2Empty:897823088341831731><:Bar3Empty:897823088106934273>';
					} else if (shield[conn] > 2 && shield[conn] <= 6) {
						shieldslide[conn] = '<a:Bar1Mid:897823088106950707><:Bar2Empty:897823088341831731><:Bar2Empty:897823088341831731><:Bar2Empty:897823088341831731><:Bar3Empty:897823088106934273>';
					} else if (shield[conn] > 6 && shield[conn] <= 8) {
						shieldslide[conn] = '<a:Bar1Full:897823088417316894><:Bar2Empty:897823088341831731><:Bar2Empty:897823088341831731><:Bar2Empty:897823088341831731><:Bar3Empty:897823088106934273>';
					} else if (shield[conn] > 8 && shield[conn] <= 10) {
						shieldslide[conn] = '<a:Bar1Full:897823088417316894><a:Bar2Mid:897823088207605801><:Bar2Empty:897823088341831731><:Bar2Empty:897823088341831731><:Bar3Empty:897823088106934273>';
					} else if (shield[conn] > 10 && shield[conn] <= 12) {
						shieldslide[conn] = '<a:Bar1Full:897823088417316894><a:Bar2High:897823088333434893><:Bar2Empty:897823088341831731><:Bar2Empty:897823088341831731><:Bar3Empty:897823088106934273>';
					} else if (shield[conn] > 12 && shield[conn] <= 14) {
						shieldslide[conn] = '<a:Bar1Full:897823088417316894><a:Bar2Full:897823088551538688><:Bar2Empty:897823088341831731><:Bar2Empty:897823088341831731><:Bar3Empty:897823088106934273>';
					} else if (shield[conn] > 14 && shield[conn] <= 16) {
						shieldslide[conn] = '<a:Bar1Full:897823088417316894><a:Bar2Full:897823088551538688><a:Bar2Mid:897823088207605801><:Bar2Empty:897823088341831731><:Bar3Empty:897823088106934273>';
					} else if (shield[conn] > 16 && shield[conn] <= 18) {
						shieldslide[conn] = '<a:Bar1Full:897823088417316894><a:Bar2Full:897823088551538688><a:Bar2High:897823088333434893><:Bar2Empty:897823088341831731><:Bar3Empty:897823088106934273>';
					} else if (shield[conn] > 18 && shield[conn] <= 20) {
						shieldslide[conn] = '<a:Bar1Full:897823088417316894><a:Bar2Full:897823088551538688><a:Bar2Full:897823088551538688><:Bar2Empty:897823088341831731><:Bar3Empty:897823088106934273>';
					} else if (shield[conn] > 20 && shield[conn] <= 22) {
						shieldslide[conn] = '<a:Bar1Full:897823088417316894><a:Bar2Full:897823088551538688><a:Bar2Full:897823088551538688><a:Bar2Mid:897823088207605801><:Bar3Empty:897823088106934273>';
					} else if (shield[conn] > 22 && shield[conn] <= 24) {
						shieldslide[conn] = '<a:Bar1Full:897823088417316894><a:Bar2Full:897823088551538688><a:Bar2Full:897823088551538688><a:Bar2High:897823088333434893><:Bar3Empty:897823088106934273>';
					} else if (shield[conn] > 24 && shield[conn] <= 27) {
						shieldslide[conn] = '<a:Bar1Full:897823088417316894><a:Bar2Full:897823088551538688><a:Bar2Full:897823088551538688><a:Bar2Full:897823088551538688><:Bar3Empty:897823088106934273>';
					} else if (shield[conn] > 27 && shield[conn] <= 29) {
						shieldslide[conn] = '<a:Bar1Full:897823088417316894><a:Bar2Full:897823088551538688><a:Bar2Full:897823088551538688><a:Bar2Full:897823088551538688><a:Bar3Mid:897823088362782750>';
					} else if (shield[conn] == 30) {
						shieldslide[conn] = '<a:Bar1Full:897823088417316894><a:Bar2Full:897823088551538688><a:Bar2Full:897823088551538688><a:Bar2Full:897823088551538688><a:Bar3Full:897823088589299772>';
					}
				}
				////////////////////////////////////////////score level updating/////////////////////////////////////////////////////////////////////////
				for (conn = 0; conn <= 1; conn++) {
					if (score[conn] == 0) {
						scoreslide[conn] = '<:Bar1Empty:897823088274706452><:Bar2Empty:897823088341831731><:Bar2Empty:897823088341831731><:Bar2Empty:897823088341831731><:Bar3Empty:897823088106934273>';
						
					} else if (score[conn] > 0 && score[conn] <= 8) {
						scoreslide[conn] = '<a:Bar1Half:897823088006271017><:Bar2Empty:897823088341831731><:Bar2Empty:897823088341831731><:Bar2Empty:897823088341831731><:Bar3Empty:897823088106934273>';
					} else if (score[conn] > 8 && score[conn] <= 17) {
						scoreslide[conn] = '<a:Bar1Mid:897823088106950707><:Bar2Empty:897823088341831731><:Bar2Empty:897823088341831731><:Bar2Empty:897823088341831731><:Bar3Empty:897823088106934273>';
					} else if (score[conn] > 17 && score[conn] <= 27) {
						scoreslide[conn] = '<a:Bar1Full:897823088417316894><:Bar2Empty:897823088341831731><:Bar2Empty:897823088341831731><:Bar2Empty:897823088341831731><:Bar3Empty:897823088106934273>';
					} else if (score[conn] > 27 && score[conn] <= 36) {
						scoreslide[conn] = '<a:Bar1Full:897823088417316894><a:Bar2Mid:897823088207605801><:Bar2Empty:897823088341831731><:Bar2Empty:897823088341831731><:Bar3Empty:897823088106934273>';
					} else if (score[conn] > 36 && score[conn] <= 44) {
						scoreslide[conn] = '<a:Bar1Full:897823088417316894><a:Bar2High:897823088333434893><:Bar2Empty:897823088341831731><:Bar2Empty:897823088341831731><:Bar3Empty:897823088106934273>';
					} else if (score[conn] > 44 && score[conn] <= 51) {
						scoreslide[conn] = '<a:Bar1Full:897823088417316894><a:Bar2Full:897823088551538688><:Bar2Empty:897823088341831731><:Bar2Empty:897823088341831731><:Bar3Empty:897823088106934273>';
					} else if (score[conn] > 51 && score[conn] <= 58) {
						scoreslide[conn] = '<a:Bar1Full:897823088417316894><a:Bar2Full:897823088551538688><a:Bar2Mid:897823088207605801><:Bar2Empty:897823088341831731><:Bar3Empty:897823088106934273>';
					} else if (score[conn] > 58 && score[conn] <= 65) {
						scoreslide[conn] = '<a:Bar1Full:897823088417316894><a:Bar2Full:897823088551538688><a:Bar2High:897823088333434893><:Bar2Empty:897823088341831731><:Bar3Empty:897823088106934273>';
					} else if (score[conn] > 65 && score[conn] <= 72) {
						scoreslide[conn] = '<a:Bar1Full:897823088417316894><a:Bar2Full:897823088551538688><a:Bar2Full:897823088551538688><:Bar2Empty:897823088341831731><:Bar3Empty:897823088106934273>';
					} else if (score[conn] > 72 && score[conn] <= 79) {
						scoreslide[conn] = '<a:Bar1Full:897823088417316894><a:Bar2Full:897823088551538688><a:Bar2Full:897823088551538688><a:Bar2Mid:897823088207605801><:Bar3Empty:897823088106934273>';
					} else if (score[conn] > 79 && score[conn] <= 86) {
						scoreslide[conn] = '<a:Bar1Full:897823088417316894><a:Bar2Full:897823088551538688><a:Bar2Full:897823088551538688><a:Bar2High:897823088333434893><:Bar3Empty:897823088106934273>';
					} else if (score[conn] > 86 && score[conn] <= 93) {
						scoreslide[conn] = '<a:Bar1Full:897823088417316894><a:Bar2Full:897823088551538688><a:Bar2Full:897823088551538688><a:Bar2Full:897823088551538688><:Bar3Empty:897823088106934273>';
					} else if (score[conn] > 93 && score[conn] < 100) {
						scoreslide[conn] = '<a:Bar1Full:897823088417316894><a:Bar2Full:897823088551538688><a:Bar2Full:897823088551538688><a:Bar2Full:897823088551538688><a:Bar3Mid:897823088362782750>';
					} else if (score[conn] == 100) {
						scoreslide[conn] = '<a:Bar1Full:897823088417316894><a:Bar2Full:897823088551538688><a:Bar2Full:897823088551538688><a:Bar2Full:897823088551538688><a:Bar3Full:897823088589299772>';
					}
				}

				//////////////////////message updating

				const exampleEmbed = new MessageEmbed()
					.setColor('#003060')
					.setThumbnail('https://cdn.discordapp.com/attachments/895655754403557389/897823010097086524/Fight_icon.png')
					.addFields(
						{ name: `${fightername[0]}`, value: `${hfd[0]} ${scoreslide[0]} **${score[0]}%**\n:shield: ${shieldslide[0]} **${shield[0]}lvl**`, inline: true },
						//{ name:'\u200b',value: '\u200b', inline: true },
						{ name: `${fightername[1]}`, value: `${hfd[1]} ${scoreslide[1]} **${score[1]}%**\n:shield: ${shieldslide[1]} **${shield[1]}lvl**`, inline: true },
						//{ name:'\u200b',value: 'https://cdn.discordapp.com/attachments/895655754403557389/897823010097086524/Fight_icon.png', inline: true },
						{ name: 'Last Action', value: `${log}` }

					)
				ring = [
					new MessageButton()
						.setCustomId(`punch`)
						.setLabel(`Punch`)
						.setStyle(`PRIMARY`)
						.setEmoji('<:Fight:897823088463474768>')
						.setDisabled(`${a1}`)

					,
					new MessageButton()
						.setCustomId(`kick`)
						.setLabel(`Kick`)
						.setStyle(`PRIMARY`)
						.setEmoji('<:Kick:897823088392171610>')
						.setDisabled(`${a1}`),

					new MessageButton()
						.setCustomId(`defend`)
						.setLabel(`Defend`)
						.setStyle(`PRIMARY`)
						.setEmoji('<:Defend:897823088044048445>')
						.setDisabled(`${a1}`)
					,
					new MessageButton()
						.setCustomId(`runaway`)
						.setLabel(`Run Away`)
						.setStyle(`DANGER`)
						.setEmoji('<:Run:897823088379568130>')
						.setDisabled(`${a1}`),
					new MessageButton()
						.setCustomId(`logs`)
						.setLabel(`Logs`)
						.setStyle(`SECONDARY`)
						.setDisabled(`${a1}`)

				]
				wwe = new MessageActionRow().addComponents(ring);

				if (koijeeta == 1) {
					await interaction.editReply({ content: `:tada:`, embeds: [exampleEmbed], components: [wwe] });
				} else {
					await interaction.editReply({
						content: `${Args.userid == 'Coco Arcade' ? `Coco Arcade is thinking` : `Your turn <@!${Args.userid}>!`
							}`, embeds: [exampleEmbed], components: [wwe]
					});
				}


			}



















































		}
	}


	//9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
	else if (commandName === 'chaos') {
		//await interaction.reply('Server info.');
		listofwords = [];
		listofwords = ["abandon", "ability", "able", "abortion", "about", "above", "abroad", "absence", "absolute", "absolutely", "absorb", "abuse", "academic", "accept", "access", "accident", "accompany", "accomplish", "according", "account", "accurate", "accuse", "achieve", "achievement", "acid", "acknowledge", "acquire", "across", "act", "action", "active", "activist", "activity", "actor", "actress", "actual", "actually", "ad", "adapt", "add", "addition", "additional", "address", "adequate", "adjust", "adjustment", "administration", "administrator", "admire", "admission", "admit", "adolescent", "adopt", "adult", "advance", "advanced", "advantage", "adventure", "advertising", "advice", "advise", "adviser", "advocate", "affair", "affect", "afford", "afraid", "African", "African-American", "after", "afternoon", "again", "against", "age", "agency", "agenda", "agent", "aggressive", "ago", "agree", "agreement", "agricultural", "ah", "ahead", "aid", "aide", "AIDS", "aim", "air", "aircraft", "airline", "airport", "album", "alcohol", "alive", "all", "alliance", "allow", "ally", "almost", "alone", "along", "already", "also", "alter", "alternative", "although", "always", "AM", "amazing", "American", "among", "amount", "analysis", "analyst", "analyze", "ancient", "and", "anger", "angle", "angry", "animal", "anniversary", "announce", "annual", "another", "answer", "anticipate", "anxiety", "any", "anybody", "anymore", "anyone", "anything", "anyway", "anywhere", "apart", "apartment", "apparent", "apparently", "appeal", "appear", "appearance", "apple", "application", "apply", "appoint", "appointment", "appreciate", "approach", "appropriate", "approval", "approve", "approximately", "Arab", "architect", "area", "argue", "argument", "arise", "arm", "armed", "army", "around", "arrange", "arrangement", "arrest", "arrival", "arrive", "art", "article", "artist", "artistic", "as", "Asian", "aside", "ask", "asleep", "aspect", "assault", "assert", "assess", "assessment", "asset", "assign", "assignment", "assist", "assistance", "assistant", "associate", "association", "assume", "assumption", "assure", "at", "athlete", "athletic", "atmosphere", "attach", "attack", "attempt", "attend", "attention", "attitude", "attorney", "attract", "attractive", "attribute", "audience", "author", "authority", "auto", "available", "average", "avoid", "award", "aware", "awareness", "away", "awful", "baby", "back", "background", "bad", "badly", "bag", "bake", "balance", "ball", "ban", "band", "bank", "bar", "barely", "barrel", "barrier", "base", "baseball", "basic", "basically", "basis", "basket", "basketball", "bathroom", "battery", "battle", "be", "beach", "bean", "bear", "beat", "beautiful", "beauty", "because", "become", "bed", "bedroom", "beer", "before", "begin", "beginning", "behavior", "behind", "being", "belief", "believe", "bell", "belong", "below", "belt", "bench", "bend", "beneath", "benefit", "beside", "besides", "best", "bet", "better", "between", "beyond", "Bible", "big", "bike", "bill", "billion", "bind", "biological", "bird", "birth", "birthday", "bit", "bite", "black", "blade", "blame", "blanket", "blind", "block", "blood", "blow", "blue", "board", "boat", "body", "bomb", "bombing", "bond", "bone", "book", "boom", "boot", "border", "born", "borrow", "boss", "both", "bother", "bottle", "bottom", "boundary", "bowl", "box", "boy", "boyfriend", "brain", "branch", "brand", "bread", "break", "breakfast", "breast", "breath", "breathe", "brick", "bridge", "brief", "briefly", "bright", "brilliant", "bring", "British", "broad", "broken", "brother", "brown", "brush", "buck", "budget", "build", "building", "bullet", "bunch", "burden", "burn", "bury", "bus", "business", "busy", "but", "butter", "button", "buy", "buyer", "by", "cabin", "cabinet", "cable", "cake", "calculate", "call", "camera", "camp", "campaign", "campus", "can", "Canadian", "cancer", "candidate", "cap", "capability", "capable", "capacity", "capital", "captain", "capture", "car", "carbon", "card", "care", "career", "careful", "carefully", "carrier", "carry", "case", "cash", "cast", "cat", "catch", "category", "Catholic", "cause", "ceiling", "celebrate", "celebration", "celebrity", "cell", "center", "central", "century", "CEO", "ceremony", "certain", "certainly", "chain", "chair", "chairman", "challenge", "chamber", "champion", "championship", "chance", "change", "changing", "channel", "chapter", "character", "characteristic", "characterize", "charge", "charity", "chart", "chase", "cheap", "check", "cheek", "cheese", "chef", "chemical", "chest", "chicken", "chief", "child", "childhood", "Chinese", "chip", "chocolate", "choice", "cholesterol", "choose", "Christian", "Christmas", "church", "cigarette", "circle", "circumstance", "cite", "citizen", "city", "civil", "civilian", "claim", "class", "classic", "classroom", "clean", "clear", "clearly", "client", "climate", "climb", "clinic", "clinical", "clock", "close", "closely", "closer", "clothes", "clothing", "cloud", "club", "clue", "cluster", "coach", "coal", "coalition", "coast", "coat", "code", "coffee", "cognitive", "cold", "collapse", "colleague", "collect", "collection", "collective", "college", "colonial", "color", "column", "combination", "combine", "come", "comedy", "comfort", "comfortable", "command", "commander", "comment", "commercial", "commission", "commit", "commitment", "committee", "common", "communicate", "communication", "community", "company", "compare", "comparison", "compete", "competition", "competitive", "competitor", "complain", "complaint", "complete", "completely", "complex", "complicated", "component", "compose", "composition", "comprehensive", "computer", "concentrate", "concentration", "concept", "concern", "concerned", "concert", "conclude", "conclusion", "concrete", "condition", "conduct", "conference", "confidence", "confident", "confirm", "conflict", "confront", "confusion", "Congress", "congressional", "connect", "connection", "consciousness", "consensus", "consequence", "conservative", "consider", "considerable", "consideration", "consist", "consistent", "constant", "constantly", "constitute", "constitutional", "construct", "construction", "consultant", "consume", "consumer", "consumption", "contact", "contain", "container", "contemporary", "content", "contest", "context", "continue", "continued", "contract", "contrast", "contribute", "contribution", "control", "controversial", "controversy", "convention", "conventional", "conversation", "convert", "conviction", "convince", "cook", "cookie", "cooking", "cool", "cooperation", "cop", "cope", "copy", "core", "corn", "corner", "corporate", "corporation", "correct", "correspondent", "cost", "cotton", "couch", "could", "council", "counselor", "count", "counter", "country", "county", "couple", "courage", "course", "court", "cousin", "cover", "coverage", "cow", "crack", "craft", "crash", "crazy", "cream", "create", "creation", "creative", "creature", "credit", "crew", "crime", "criminal", "crisis", "criteria", "critic", "critical", "criticism", "criticize", "crop", "cross", "crowd", "crucial", "cry", "cultural", "culture", "cup", "curious", "current", "currently", "curriculum", "custom", "customer", "cut", "cycle", "dad", "daily", "damage", "dance", "danger", "dangerous", "dare", "dark", "darkness", "data", "date", "daughter", "day", "dead", "deal", "dealer", "dear", "death", "debate", "debt", "decade", "decide", "decision", "deck", "declare", "decline", "decrease", "deep", "deeply", "deer", "defeat", "defend", "defendant", "defense", "defensive", "deficit", "define", "definitely", "definition", "degree", "delay", "deliver", "delivery", "demand", "democracy", "Democrat", "democratic", "demonstrate", "demonstration", "deny", "department", "depend", "dependent", "depending", "depict", "depression", "depth", "deputy", "derive", "describe", "description", "desert", "deserve", "design", "designer", "desire", "desk", "desperate", "despite", "destroy", "destruction", "detail", "detailed", "detect", "determine", "develop", "developing", "development", "device", "devote", "dialogue", "die", "diet", "differ", "difference", "different", "differently", "difficult", "difficulty", "dig", "digital", "dimension", "dining", "dinner", "direct", "direction", "directly", "director", "dirt", "dirty", "disability", "disagree", "disappear", "disaster", "discipline", "discourse", "discover", "discovery", "discrimination", "discuss", "discussion", "disease", "dish", "dismiss", "disorder", "display", "dispute", "distance", "distant", "distinct", "distinction", "distinguish", "distribute", "distribution", "district", "diverse", "diversity", "divide", "division", "divorce", "DNA", "do", "doctor", "document", "dog", "domestic", "dominant", "dominate", "door", "double", "doubt", "down", "downtown", "dozen", "draft", "drag", "drama", "dramatic", "dramatically", "draw", "drawing", "dream", "dress", "drink", "drive", "driver", "drop", "drug", "dry", "due", "during", "dust", "duty", "each", "eager", "ear", "early", "earn", "earnings", "earth", "ease", "easily", "east", "eastern", "easy", "eat", "economic", "economics", "economist", "economy", "edge", "edition", "editor", "educate", "education", "educational", "educator", "effect", "effective", "effectively", "efficiency", "efficient", "effort", "egg", "eight", "either", "elderly", "elect", "election", "electric", "electricity", "electronic", "element", "elementary", "eliminate", "elite", "else", "elsewhere", "e-mail", "embrace", "emerge", "emergency", "emission", "emotion", "emotional", "emphasis", "emphasize", "employ", "employee", "employer", "employment", "empty", "enable", "encounter", "encourage", "end", "enemy", "energy", "enforcement", "engage", "engine", "engineer", "engineering", "English", "enhance", "enjoy", "enormous", "enough", "ensure", "enter", "enterprise", "entertainment", "entire", "entirely", "entrance", "entry", "environment", "environmental", "episode", "equal", "equally", "equipment", "era", "error", "escape", "especially", "essay", "essential", "essentially", "establish", "establishment", "estate", "estimate", "etc", "ethics", "ethnic", "European", "evaluate", "evaluation", "even", "evening", "event", "eventually", "ever", "every", "everybody", "everyday", "everyone", "everything", "everywhere", "evidence", "evolution", "evolve", "exact", "exactly", "examination", "examine", "example", "exceed", "excellent", "except", "exception", "exchange", "exciting", "executive", "exercise", "exhibit", "exhibition", "exist", "existence", "existing", "expand", "expansion", "expect", "expectation", "expense", "expensive", "experience", "experiment", "expert", "explain", "explanation", "explode", "explore", "explosion", "expose", "exposure", "express", "expression", "extend", "extension", "extensive", "extent", "external", "extra", "extraordinary", "extreme", "extremely", "eye", "fabric", "face", "facility", "fact", "factor", "factory", "faculty", "fade", "fail", "failure", "fair", "fairly", "faith", "fall", "false", "familiar", "family", "famous", "fan", "fantasy", "far", "farm", "farmer", "fashion", "fast", "fat", "fate", "father", "fault", "favor", "favorite", "fear", "feature", "federal", "fee", "feed", "feel", "feeling", "fellow", "female", "fence", "few", "fewer", "fiber", "fiction", "field", "fifteen", "fifth", "fifty", "fight", "fighter", "fighting", "figure", "file", "fill", "film", "final", "finally", "finance", "financial", "find", "finding", "fine", "finger", "finish", "fire", "firm", "first", "fish", "fishing", "fit", "fitness", "five", "fix", "flag", "flame", "flat", "flavor", "flee", "flesh", "flight", "float", "floor", "flow", "flower", "fly", "focus", "folk", "follow", "following", "food", "foot", "football", "for", "force", "foreign", "forest", "forever", "forget", "form", "formal", "formation", "former", "formula", "forth", "fortune", "forward", "found", "foundation", "founder", "four", "fourth", "frame", "framework", "free", "freedom", "freeze", "French", "frequency", "frequent", "frequently", "fresh", "friend", "friendly", "friendship", "from", "front", "fruit", "frustration", "fuel", "full", "fully", "fun", "function", "fund", "fundamental", "funding", "funeral", "funny", "furniture", "furthermore", "future", "gain", "galaxy", "gallery", "game", "gang", "gap", "garage", "garden", "garlic", "gas", "gate", "gather", "gay", "gaze", "gear", "gender", "gene", "general", "generally", "generate", "generation", "genetic", "gentleman", "gently", "German", "gesture", "get", "ghost", "giant", "gift", "gifted", "girl", "girlfriend", "give", "given", "glad", "glance", "glass", "global", "glove", "go", "goal", "God", "gold", "golden", "golf", "good", "government", "governor", "grab", "grade", "gradually", "graduate", "grain", "grand", "grandfather", "grandmother", "grant", "grass", "grave", "gray", "great", "greatest", "green", "grocery", "ground", "group", "grow", "growing", "growth", "guarantee", "guard", "guess", "guest", "guide", "guideline", "guilty", "gun", "guy", "habit", "habitat", "hair", "half", "hall", "hand", "handful", "handle", "hang", "happen", "happy", "hard", "hardly", "hat", "hate", "have", "he", "head", "headline", "headquarters", "health", "healthy", "hear", "hearing", "heart", "heat", "heaven", "heavily", "heavy", "heel", "height", "helicopter", "hell", "hello", "help", "helpful", "her", "here", "heritage", "hero", "herself", "hey", "hi", "hide", "high", "highlight", "highly", "highway", "hill", "him", "himself", "hip", "hire", "his", "historian", "historic", "historical", "history", "hit", "hold", "hole", "holiday", "holy", "home", "homeless", "honest", "honey", "honor", "hope", "horizon", "horror", "horse", "hospital", "host", "hot", "hotel", "hour", "house", "household", "housing", "how", "however", "huge", "human", "humor", "hundred", "hungry", "hunter", "hunting", "hurt", "husband", "hypothesis", "I", "ice", "idea", "ideal", "identification", "identify", "identity", "ie", "if", "ignore", "ill", "illegal", "illness", "illustrate", "image", "imagination", "imagine", "immediate", "immediately", "immigrant", "immigration", "impact", "implement", "implication", "imply", "importance", "important", "impose", "impossible", "impress", "impression", "impressive", "improve", "improvement", "in", "incentive", "incident", "include", "including", "income", "incorporate", "increase", "increased", "increasing", "increasingly", "incredible", "indeed", "independence", "independent", "index", "Indian", "indicate", "indication", "individual", "industrial", "industry", "infant", "infection", "inflation", "influence", "inform", "information", "ingredient", "initial", "initially", "initiative", "injury", "inner", "innocent", "inquiry", "inside", "insight", "insist", "inspire", "install", "instance", "instead", "institution", "institutional", "instruction", "instructor", "instrument", "insurance", "intellectual", "intelligence", "intend", "intense", "intensity", "intention", "interaction", "interest", "interested", "interesting", "internal", "international", "Internet", "interpret", "interpretation", "intervention", "interview", "into", "introduce", "introduction", "invasion", "invest", "investigate", "investigation", "investigator", "investment", "investor", "invite", "involve", "involved", "involvement", "Iraqi", "Irish", "iron", "Islamic", "island", "Israeli", "issue", "it", "Italian", "item", "its", "itself", "jacket", "jail", "Japanese", "jet", "Jew", "Jewish", "job", "join", "joint", "joke", "journal", "journalist", "journey", "joy", "judge", "judgment", "juice", "jump", "junior", "jury", "just", "justice", "justify", "keep", "key", "kick", "kid", "kill", "killer", "killing", "kind", "king", "kiss", "kitchen", "knee", "knife", "knock", "know", "knowledge", "lab", "label", "labor", "laboratory", "lack", "lady", "lake", "land", "landscape", "language", "lap", "large", "largely", "last", "late", "later", "Latin", "latter", "laugh", "launch", "law", "lawn", "lawsuit", "lawyer", "lay", "layer", "lead", "leader", "leadership", "leading", "leaf", "league", "lean", "learn", "learning", "least", "leather", "leave", "left", "leg", "legacy", "legal", "legend", "legislation", "legitimate", "lemon", "length", "less", "lesson", "let", "letter", "level", "liberal", "library", "license", "lie", "life", "lifestyle", "lifetime", "lift", "light", "like", "likely", "limit", "limitation", "limited", "line", "link", "lip", "list", "listen", "literally", "literary", "literature", "little", "live", "living", "load", "loan", "local", "locate", "location", "lock", "long", "long-term", "look", "loose", "lose", "loss", "lost", "lot", "lots", "loud", "love", "lovely", "lover", "low", "lower", "luck", "lucky", "lunch", "lung", "machine", "mad", "magazine", "mail", "main", "mainly", "maintain", "maintenance", "major", "majority", "make", "maker", "makeup", "male", "mall", "man", "manage", "management", "manager", "manner", "manufacturer", "manufacturing", "many", "map", "margin", "mark", "market", "marketing", "marriage", "married", "marry", "mask", "mass", "massive", "master", "match", "material", "math", "matter", "may", "maybe", "mayor", "me", "meal", "mean", "meaning", "meanwhile", "measure", "measurement", "meat", "mechanism", "media", "medical", "medication", "medicine", "medium", "meet", "meeting", "member", "membership", "memory", "mental", "mention", "menu", "mere", "merely", "mess", "message", "metal", "meter", "method", "Mexican", "middle", "might", "military", "milk", "million", "mind", "mine", "minister", "minor", "minority", "minute", "miracle", "mirror", "miss", "missile", "mission", "mistake", "mix", "mixture", "mm-hmm", "mode", "model", "moderate", "modern", "modest", "mom", "moment", "money", "monitor", "month", "mood", "moon", "moral", "more", "moreover", "morning", "mortgage", "most", "mostly", "mother", "motion", "motivation", "motor", "mount", "mountain", "mouse", "mouth", "move", "movement", "movie", "Mr", "Mrs", "Ms", "much", "multiple", "murder", "muscle", "museum", "music", "musical", "musician", "Muslim", "must", "mutual", "my", "myself", "mystery", "myth", "naked", "name", "narrative", "narrow", "nation", "national", "native", "natural", "naturally", "nature", "near", "nearby", "nearly", "necessarily", "necessary", "neck", "need", "negative", "negotiate", "negotiation", "neighbor", "neighborhood", "neither", "nerve", "nervous", "net", "network", "never", "nevertheless", "new", "newly", "news", "newspaper", "next", "nice", "night", "nine", "no", "nobody", "nod", "noise", "nomination", "none", "nonetheless", "nor", "normal", "normally", "north", "northern", "nose", "not", "note", "nothing", "notice", "notion", "novel", "now", "nowhere", "n't", "nuclear", "number", "numerous", "nurse", "nut", "object", "objective", "obligation", "observation", "observe", "observer", "obtain", "obvious", "obviously", "occasion", "occasionally", "occupation", "occupy", "occur", "ocean", "odd", "odds", "of", "off", "offense", "offensive", "offer", "office", "officer", "official", "often", "oh", "oil", "ok", "okay", "old", "Olympic", "on", "once", "one", "ongoing", "onion", "online", "only", "onto", "open", "opening", "operate", "operating", "operation", "operator", "opinion", "opponent", "opportunity", "oppose", "opposite", "opposition", "option", "or", "orange", "order", "ordinary", "organic", "organization", "organize", "orientation", "origin", "original", "originally", "other", "others", "otherwise", "ought", "our", "ourselves", "out", "outcome", "outside", "oven", "over", "overall", "overcome", "overlook", "owe", "own", "owner", "pace", "pack", "package", "page", "pain", "painful", "paint", "painter", "painting", "pair", "pale", "Palestinian", "palm", "pan", "panel", "pant", "paper", "parent", "park", "parking", "part", "participant", "participate", "participation", "particular", "particularly", "partly", "partner", "partnership", "party", "pass", "passage", "passenger", "passion", "past", "patch", "path", "patient", "pattern", "pause", "pay", "payment", "PC", "peace", "peak", "peer", "penalty", "people", "pepper", "per", "perceive", "percentage", "perception", "perfect", "perfectly", "perform", "performance", "perhaps", "period", "permanent", "permission", "permit", "person", "personal", "personality", "personally", "personnel", "perspective", "persuade", "pet", "phase", "phenomenon", "philosophy", "phone", "photo", "photograph", "photographer", "phrase", "physical", "physically", "physician", "piano", "pick", "picture", "pie", "piece", "pile", "pilot", "pine", "pink", "pipe", "pitch", "place", "plan", "plane", "planet", "planning", "plant", "plastic", "plate", "platform", "play", "player", "please", "pleasure", "plenty", "plot", "plus", "PM", "pocket", "poem", "poet", "poetry", "point", "pole", "police", "policy", "political", "politically", "politician", "politics", "poll", "pollution", "pool", "poor", "pop", "popular", "population", "porch", "port", "portion", "portrait", "portray", "pose", "position", "positive", "possess", "possibility", "possible", "possibly", "post", "pot", "potato", "potential", "potentially", "pound", "pour", "poverty", "powder", "power", "powerful", "practical", "practice", "pray", "prayer", "precisely", "predict", "prefer", "preference", "pregnancy", "pregnant", "preparation", "prepare", "prescription", "presence", "present", "presentation", "preserve", "president", "presidential", "press", "pressure", "pretend", "pretty", "prevent", "previous", "previously", "price", "pride", "priest", "primarily", "primary", "prime", "principal", "principle", "print", "prior", "priority", "prison", "prisoner", "privacy", "private", "probably", "problem", "procedure", "proceed", "process", "produce", "producer", "product", "production", "profession", "professional", "professor", "profile", "profit", "program", "progress", "project", "prominent", "promise", "promote", "prompt", "proof", "proper", "properly", "property", "proportion", "proposal", "propose", "proposed", "prosecutor", "prospect", "protect", "protection", "protein", "protest", "proud", "prove", "provide", "provider", "province", "provision", "psychological", "psychologist", "psychology", "public", "publication", "publicly", "publish", "publisher", "pull", "punishment", "purchase", "pure", "purpose", "pursue", "push", "put", "qualify", "quality", "quarter", "quarterback", "question", "quick", "quickly", "quiet", "quietly", "quit", "quite", "quote", "race", "racial", "radical", "radio", "rail", "rain", "raise", "range", "rank", "rapid", "rapidly", "rare", "rarely", "rate", "rather", "rating", "ratio", "raw", "reach", "react", "reaction", "read", "reader", "reading", "ready", "real", "reality", "realize", "really", "reason", "reasonable", "recall", "receive", "recent", "recently", "recipe", "recognition", "recognize", "recommend", "recommendation", "record", "recording", "recover", "recovery", "recruit", "red", "reduce", "reduction", "refer", "reference", "reflect", "reflection", "reform", "refugee", "refuse", "regard", "regarding", "regardless", "regime", "region", "regional", "register", "regular", "regularly", "regulate", "regulation", "reinforce", "reject", "relate", "relation", "relationship", "relative", "relatively", "relax", "release", "relevant", "relief", "religion", "religious", "rely", "remain", "remaining", "remarkable", "remember", "remind", "remote", "remove", "repeat", "repeatedly", "replace", "reply", "report", "reporter", "represent", "representation", "representative", "Republican", "reputation", "request", "require", "requirement", "research", "researcher", "resemble", "reservation", "resident", "resist", "resistance", "resolution", "resolve", "resort", "resource", "respect", "respond", "respondent", "response", "responsibility", "responsible", "rest", "restaurant", "restore", "restriction", "result", "retain", "retire", "retirement", "return", "reveal", "revenue", "review", "revolution", "rhythm", "rice", "rich", "rid", "ride", "rifle", "right", "ring", "rise", "risk", "river", "road", "rock", "role", "roll", "romantic", "roof", "room", "root", "rope", "rose", "rough", "roughly", "round", "route", "routine", "row", "rub", "rule", "run", "running", "rural", "rush", "Russian", "sacred", "sad", "safe", "safety", "sake", "salad", "salary", "sale", "sales", "salt", "same", "sample", "sanction", "sand", "satellite", "satisfaction", "satisfy", "sauce", "save", "saving", "say", "scale", "scandal", "scared", "scenario", "scene", "schedule", "scheme", "scholar", "scholarship", "school", "science", "scientific", "scientist", "scope", "score", "scream", "screen", "script", "sea", "search", "season", "seat", "second", "secret", "secretary", "section", "sector", "secure", "security", "see", "seed", "seek", "seem", "segment", "seize", "select", "selection", "self", "sell", "Senate", "senator", "send", "senior", "sense", "sensitive", "sentence", "separate", "sequence", "series", "serious", "seriously", "serve", "service", "session", "set", "setting", "settle", "settlement", "seven", "several", "severe", "sex", "sexual", "shade", "shadow", "shake", "shall", "shape", "share", "sharp", "she", "sheet", "shelf", "shell", "shelter", "shift", "shine", "ship", "shirt", "shit", "shock", "shoe", "shoot", "shooting", "shop", "shopping", "shore", "short", "shortly", "shot", "should", "shoulder", "shout", "show", "shower", "shrug", "shut", "sick", "side", "sigh", "sight", "sign", "signal", "significance", "significant", "significantly", "silence", "silent", "silver", "similar", "similarly", "simple", "simply", "sin", "since", "sing", "singer", "single", "sink", "sir", "sister", "sit", "site", "situation", "six", "size", "ski", "skill", "skin", "sky", "slave", "sleep", "slice", "slide", "slight", "slightly", "slip", "slow", "slowly", "small", "smart", "smell", "smile", "smoke", "smooth", "snap", "snow", "so", "so-called", "soccer", "social", "society", "soft", "software", "soil", "solar", "soldier", "solid", "solution", "solve", "some", "somebody", "somehow", "someone", "something", "sometimes", "somewhat", "somewhere", "son", "song", "soon", "sophisticated", "sorry", "sort", "soul", "sound", "soup", "source", "south", "southern", "Soviet", "space", "Spanish", "speak", "speaker", "special", "specialist", "species", "specific", "specifically", "speech", "speed", "spend", "spending", "spin", "spirit", "spiritual", "split", "spokesman", "sport", "spot", "spread", "spring", "square", "squeeze", "stability", "stable", "staff", "stage", "stair", "stake", "stand", "standard", "standing", "star", "stare", "start", "state", "statement", "station", "statistics", "status", "stay", "steady", "steal", "steel", "step", "stick", "still", "stir", "stock", "stomach", "stone", "stop", "storage", "store", "storm", "story", "straight", "strange", "stranger", "strategic", "strategy", "stream", "street", "strength", "strengthen", "stress", "stretch", "strike", "string", "strip", "stroke", "strong", "strongly", "structure", "struggle", "student", "studio", "study", "stuff", "stupid", "style", "subject", "submit", "subsequent", "substance", "substantial", "succeed", "success", "successful", "successfully", "such", "sudden", "suddenly", "sue", "suffer", "sufficient", "sugar", "suggest", "suggestion", "suicide", "suit", "summer", "summit", "sun", "super", "supply", "support", "supporter", "suppose", "supposed", "Supreme", "sure", "surely", "surface", "surgery", "surprise", "surprised", "surprising", "surprisingly", "surround", "survey", "survival", "survive", "survivor", "suspect", "sustain", "swear", "sweep", "sweet", "swim", "swing", "switch", "symbol", "symptom", "system", "table", "tablespoon", "tactic", "tail", "take", "tale", "talent", "talk", "tall", "tank", "tap", "tape", "target", "task", "taste", "tax", "taxpayer", "tea", "teach", "teacher", "teaching", "team", "tear", "teaspoon", "technical", "technique", "technology", "teen", "teenager", "telephone", "telescope", "television", "tell", "temperature", "temporary", "ten", "tend", "tendency", "tennis", "tension", "tent", "term", "terms", "terrible", "territory", "terror", "terrorism", "terrorist", "test", "testify", "testimony", "testing", "text", "than", "thank", "thanks", "that", "the", "theater", "their", "them", "theme", "themselves", "then", "theory", "therapy", "there", "therefore", "these", "they", "thick", "thin", "thing", "think", "thinking", "third", "thirty", "this", "those", "though", "thought", "thousand", "threat", "threaten", "three", "throat", "through", "throughout", "throw", "thus", "ticket", "tie", "tight", "time", "tiny", "tip", "tire", "tired", "tissue", "title", "to", "tobacco", "today", "toe", "together", "tomato", "tomorrow", "tone", "tongue", "tonight", "too", "tool", "tooth", "top", "topic", "toss", "total", "totally", "touch", "tough", "tour", "tourist", "tournament", "toward", "towards", "tower", "town", "toy", "trace", "track", "trade", "tradition", "traditional", "traffic", "tragedy", "trail", "train", "training", "transfer", "transform", "transformation", "transition", "translate", "transportation", "travel", "treat", "treatment", "treaty", "tree", "tremendous", "trend", "trial", "tribe", "trick", "trip", "troop", "trouble", "truck", "true", "truly", "trust", "truth", "try", "tube", "tunnel", "turn", "TV", "twelve", "twenty", "twice", "twin", "two", "type", "typical", "typically", "ugly", "ultimate", "ultimately", "unable", "uncle", "under", "undergo", "understand", "understanding", "unfortunately", "uniform", "union", "unique", "unit", "United", "universal", "universe", "university", "unknown", "unless", "unlike", "unlikely", "until", "unusual", "up", "upon", "upper", "urban", "urge", "us", "use", "used", "useful", "user", "usual", "usually", "utility", "vacation", "valley", "valuable", "value", "variable", "variation", "variety", "various", "vary", "vast", "vegetable", "vehicle", "venture", "version", "versus", "very", "vessel", "veteran", "via", "victim", "victory", "video", "view", "viewer", "village", "violate", "violation", "violence", "violent", "virtually", "virtue", "virus", "visible", "vision", "visit", "visitor", "visual", "vital", "voice", "volume", "volunteer", "vote", "voter", "vs", "vulnerable", "wage", "wait", "wake", "walk", "wall", "wander", "want", "war", "warm", "warn", "warning", "wash", "waste", "watch", "water", "wave", "way", "we", "weak", "wealth", "wealthy", "weapon", "wear", "weather", "wedding", "week", "weekend", "weekly", "weigh", "weight", "welcome", "welfare", "well", "west", "western", "wet", "what", "whatever", "wheel", "when", "whenever", "where", "whereas", "whether", "which", "while", "whisper", "white", "who", "whole", "whom", "whose", "why", "wide", "widely", "widespread", "wife", "wild", "will", "willing", "win", "wind", "window", "wine", "wing", "winner", "winter", "wipe", "wire", "wisdom", "wise", "wish", "with", "withdraw", "within", "without", "witness", "woman", "wonder", "wonderful", "wood", "wooden", "word", "work", "worker", "working", "works", "workshop", "world", "worried", "worry", "worth", "would", "wound", "wrap", "write", "writer", "writing", "wrong", "yard", "yeah", "year", "yell", "yellow", "yes", "yesterday", "yet", "yield", "you", "young", "your", "yours", "yourself", "youth", "zone"]
		let shuffledwords = listofwords.sort(() => 0.5 - Math.random());

		// Get sub-array of first n elements after shuffled
		let swpan = shuffledwords.slice(0, 3);
		let w = [];
		let w1 = swpan[0];
		let w2 = swpan[1];
		let w3 = swpan[2];
		w = [w1, w2, w3];
		let attempt = 0;
		let atleft = 3;
		let tryleft = 10;
		let trycheck = 0;
		let jumblelist = [];
		jumblelist = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z',
			'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z',
			'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z',
			'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z',
			'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z',
			'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']
		let shuff = jumblelist.sort(() => 0.5 - Math.random());

		// Get sub-array of first n elements after shuffled
		let pan = shuff.slice(0, 20);
		pan.push(w1);
		pan.push(w2);
		pan.push(w3);
		let shuff1 = pan.sort(() => 0.5 - Math.random());

		// Get sub-array of first n elements after shuffled





		const startcaos = new MessageEmbed()
			.setColor('#FFFF00')
			.setTitle(`Chaos started by ${interaction.user.username}`)
			.setDescription(`Join the thread to play!`);
		await interaction.reply({ content: `<@!${interaction.user.id}> Join the thread`, embeds: [startcaos] });
		let m = await interaction.fetchReply();
		const thread = await m.startThread({
			name: `Chaos by ${interaction.user.username}`,
			autoArchiveDuration: 60,
			reason: 'Join the thread to play!',

		});
		time1 = new Date();
		const chaosemb = new MessageEmbed()
			.setColor('#FFFF00')
			.setTitle(`ChaosWords`)
			.setDescription(`You have **1 minute** to find the hidden words in the sentence below.`)
			.addFields(
				{ name: 'Sentence:', value: `${shuff1.join('')}` },
				{ name: 'Words Found/Remaining Words:', value: `${attempt}/3` },
			)
			.setTimestamp()
			.setFooter(`${interaction.guild.name}`);

		let chmsg = await thread.send({ embeds: [chaosemb], fetchReply: true });
		const filter = sm => sm.author.id == interaction.user.id;//remove this line and filter to eligiblle everyone.
		const collectorcos = thread.createMessageCollector({ filter, time: 60000 });
		collectorcos.on('collect', async (sm) => {
			time2 = new Date() - time1;
			trycheck = 1;

			for (cr = 0; cr <= w.length; cr++) {
				if (sm.content.toLowerCase() == w[cr]) {
					attempt = attempt + 1;
					atleft = atleft - 1;
					const chaosemb = new MessageEmbed()
						.setColor('#FFFF00')
						.setTitle(`ChaosWords`)
						.setDescription(`You have **1 minute** to find the hidden words in the sentence below.`)
						.addFields(
							{ name: 'Sentence:', value: `${shuff1.join('')}` },
							{ name: 'Words Found/Remaining Words:', value: `${attempt}/3` },
						)
						.setTimestamp()
						.setFooter(`${interaction.guild.name}`);
					chmsg.edit({ embeds: [chaosemb] });
					if (attempt != 3) {
						const chaosemb1 = new MessageEmbed()
							.setColor('#FFFF00')
							.setDescription(`GG, **${w[cr]}** was correct! You have to find **${atleft}** more word(s).`)

							.setTimestamp()
							.setFooter(`${interaction.guild.name}`);
						thread.send({ embeds: [chaosemb1] });
					} else {
						const tagi = await Tags.findOne({ where: { id: interaction.user.id } });
						if (tagi) {
							if (solo_limit == 0) {
								tagi.increment({ 'sologamescore': 10 });
							} else {
								tempsolocheck = tagi.get('sologamescorewlim');
								if (tempsolocheck <= solo_limit_value) {
									tagi.increment({ 'sologamescore': 10 });
									tagi.increment({ 'sologamescorewlim': 10 });

								}
							}
						}
						const chaosemb1 = new MessageEmbed()
							.setColor('#FFFF00')
							.setTitle(`ChaosWords`)
							.setDescription(`GG, You won! You made it in **${Math.floor(time2 / 1000)}** seconds.`)
							.addFields(
								{ name: 'Sentence:', value: `${shuff1.join('')}` },
								{ name: 'Words:', value: `${w1},${w2},${w3}` },
							)
						
							.setFooter(`You won, this thread will delete within 10 seconds`);
							const chaosemb = new MessageEmbed()
						.setColor('#FFFF00')
						.setTitle(`ChaosWords`)
						.setDescription(`You have **1 minute** to find the hidden words in the sentence below.`)
						.addFields(
							{ name: 'Sentence:', value: `${shuff1.join('')}` },
							{ name: 'Words Found/Remaining Words:', value: `${attempt}/3` },
						)
						//.setTimestamp()${interaction.guild.name}
						.setFooter(`You won, this thread will delete within 10 seconds`);
							collectorcos.stop('sim');
						await m.edit({ content: ':tada:', embeds: [chaosemb1] });
						await chmsg.edit({embeds: [chaosemb] });
						await thread.send({content:'You won, this thread will delete within 10 seconds'});
						await wait(10000);
						await thread.delete();



						// m.edit({content:':tada:', embeds: [chaosemb1] });
						



					}
					w.splice(cr, 1);
					trycheck = 0;
				}
			}
			if (tryleft == 1 && trycheck == 1) {

				collectorcos.stop("lost");
				const chaosemb = new MessageEmbed()
						.setColor('#FFFF00')
						.setTitle(`ChaosWords`)
						.setDescription(`You have **1 minute** to find the hidden words in the sentence below.`)
						.addFields(
							{ name: 'Sentence:', value: `${shuff1.join('')}` },
							{ name: 'Words Found/Remaining Words:', value: `${attempt}/3` },
						)
						
						.setFooter(`You lost, this thread will delete within 10 seconds`);
						await chmsg.edit({embeds: [chaosemb] });
			}
			if (trycheck == 1 && tryleft != 1) {
				tryleft = tryleft - 1;
				const chaosemb1 = new MessageEmbed()
					.setColor('#FFFF00')
					.setTitle(`ChaosWords`)
					.setDescription(`Wrong Guess! You have ${tryleft} tries left.`)
					.setTimestamp()
					.setFooter(`${interaction.guild.name}`);
				thread.send({ embeds: [chaosemb1] });

			}



			console.log(time2);
		});

		collectorcos.on('end',async (collected, reason) => {
			if (reason == "time") {
				const chaosemb = new MessageEmbed()
						.setColor('#FFFF00')
						.setTitle(`ChaosWords`)
						.setDescription(`You have **1 minute** to find the hidden words in the sentence below.`)
						.addFields(
							{ name: 'Sentence:', value: `${shuff1.join('')}` },
							{ name: 'Words Found/Remaining Words:', value: `${attempt}/3` },
						)
						
						.setFooter(`Time up!!, this thread will delete within 10 seconds`);
						await chmsg.edit({embeds: [chaosemb] });
				const chaosemb1 = new MessageEmbed()
					.setColor('#FFFF00')
					.setTitle(`ChaosWords`)
					.setDescription(`Better luck next time!`)
					.addFields(
						{ name: 'Sentence:', value: `${shuff1.join('')}` },
						{ name: 'Words:', value: `${w1},${w2},${w3}` },
					)
					
					.setFooter(`Time Up, this thread will delete within 10 seconds`);
				m.edit({ content: 'Time up!!', embeds: [chaosemb1] });
				await thread.send({content:'Time Up, this thread will delete within 10 seconds'});
						await wait(10000);
				thread.delete();
			}else if (reason == "lost") {
				const chaosemb1 = new MessageEmbed()
					.setColor('#FFFF00')
					.setTitle(`ChaosWords`)
					.setDescription(`Better luck next time!`)
					.addFields(
						{ name: 'Sentence:', value: `${shuff1.join('')}` },
						{ name: 'Words:', value: `${w1},${w2},${w3}` },
					)
					
					.setFooter(`You lost, this thread will delete within 10 seconds`);
				m.edit({ content: 'Lost!!', embeds: [chaosemb1] });
				await thread.send({content:'Lost!!, this thread will delete within 10 seconds'});
						await wait(10000);
				thread.delete();
			} else if (reason == 'sim') {

			}
		});
		/*client.on('messageCreate', async message => {

			if (message.content === w1) {
				chmsg.edit({ content: 'hi' });
			}
		});*/
	}


	//101010101010101010101010101101010101010101010101010101010101010101010101010101010101010101010
	else if (commandName === 'rock-paper-scissors') {
		// interactionCreate event
		// rps slash command
		let roundn = 1;
		let ij = 0;
		let oj = 0;
		let mem, auth;
		let opponent = interaction.options.getUser("opponent");
		let p = new MessageButton()
			.setLabel("Play again")
			.setCustomId("pa")
			.setStyle("PRIMARY")
			;



		let q = new MessageButton()
			.setLabel("Quit")
			.setCustomId("qu")
			.setStyle("DANGER");
		let nr = new MessageActionRow().addComponents([
			p, q
		]);
		let rock = new MessageButton()
			.setLabel("Rock")
			.setCustomId("rock")
			.setStyle("SECONDARY")
			.setEmoji("🪨");



		let paper = new MessageButton()
			.setLabel("Paper")
			.setCustomId("paper")
			.setStyle("SECONDARY")
			.setEmoji("📄");



		let scissors = new MessageButton()
			.setLabel("Scissors")
			.setCustomId("scissors")
			.setStyle("SECONDARY")
			.setEmoji("✂️");

		let row = new MessageActionRow().addComponents([
			rock,
			paper,
			scissors
		]);
		if (!opponent || opponent.id == clientId) {
			let rcp = Math.floor(Math.random() * 3);
			if (rcp == 0) {
				mem = "rock";
			} else if (rcp == 1) {
				mem = "paper";
			} else if (rcp == 2) {
				mem = "scissors";
			}
			const wi = '🔴'
			const wl = '🟢'
			let embed = new MessageEmbed()
				.setTitle(`:right_facing_fist: Rock, Paper, Scissors | Round ${roundn}`)
				.setColor('#36393F')

				.setDescription(`Waiting for ${interaction.user.username}...`)
				.addFields(
					{ name: `${wi} ${interaction.user.username}`, value: '\u200B', inline: true },
					{ name: `${wl} Coco Arcade`, value: 'has played', inline: true },
				)




			interaction.reply({
				content: `\u200B`,
				embeds: [embed],
				components: [row]
			});


		} else {


			if (opponent.bot)
				return interaction.reply({
					content: "You can't play against bots",
					ephemeral: true
				});
			if (opponent.id == interaction.user.id)
				return interaction.reply({
					content: "You cannot play by yourself!",
					ephemeral: true
				});
			const wi = '🔴'
			const wl = '🔴'
			let embed = new MessageEmbed()
				.setTitle(`:right_facing_fist: Rock, Paper, Scissors | Round ${roundn}`)
				.setColor('#36393F')

				.setDescription(`Waiting for both players...`)
				.addFields(
					{ name: `${wi} ${interaction.user.username}`, value: '\u200B', inline: true },
					{ name: `${wl} ${opponent.username}`, value: '\u200B', inline: true },
				)




			interaction.reply({
				content: `<@${opponent.id}> you've been challenged to **Rock, Paper, Scissors** by <@${interaction.user.id}>!`,
				embeds: [embed],
				components: [row]
			});
		}

		m = await interaction.fetchReply();
		//collector.stop();
		let ids = new Set();
		if (!opponent || opponent.id == clientId) {
			ids.add(interaction.user.id);

		} else {
			ids.add(interaction.user.id);
			ids.add(opponent.id);
		}


		let kch = 0;

		const collect = m.createMessageComponentCollector({
			type: "BUTTON",
			time: 180000
		});
		collect.on("collect", async (b) => {
			if (b.customId == "pa" || b.customId == "qu") {
				if (!opponent || opponent.id == clientId) {
					ids.add(interaction.user.id);

					if (!ids.has(b.user.id))
						return b.reply({
							content: "You cant play the game as they didnt call u to play.",
							ephemeral: true
						}); else {
						if (b.customId == "pa") {
							b.deferUpdate();
							let rcp = Math.floor(Math.random() * 3);
							if (rcp == 0) {
								mem = "rock";
							} else if (rcp == 1) {
								mem = "paper";
							} else if (rcp == 2) {
								mem = "scissors";
							}
							const wi = '🔴'
							const wl = '🟢'
							roundn = roundn + 1;
							let embed = new MessageEmbed()
								.setTitle(`:right_facing_fist: Rock, Paper, Scissors | Round ${roundn}`)
								.setColor('#36393F')

								.setDescription(`Waiting for ${interaction.user.username}...`)
								.addFields(
									{ name: `${wi} ${interaction.user.username}`, value: '\u200B', inline: true },
									{ name: `${wl} Coco Arcade`, value: 'has played', inline: true },
								)
							interaction.editReply({
								content: `\u200B`,
								embeds: [embed],
								components: [row]
							});

						} else if (b.customId == "qu") {
							b.deferUpdate();
							collect.stop();
						}

					}
				} else {
					ids.add(interaction.user.id);
					ids.add(opponent.id);
					if (!ids.has(b.user.id))
						return b.reply({
							content: "You cant play the game as they didnt call u to play.",
							ephemeral: true
						}); else {
						if (b.customId == "pa") {
							b.deferUpdate();

							const wi = '🔴'
							const wl = '🔴'
							roundn = roundn + 1;
							let embed = new MessageEmbed()
								.setTitle(`:right_facing_fist: Rock, Paper, Scissors | Round ${roundn}`)
								.setColor('#36393F')

								.setDescription(`Waiting for both players...`)
								.addFields(
									{ name: `${wi} ${interaction.user.username}`, value: '\u200B', inline: true },
									{ name: `${wl} ${opponent.username}`, value: '\u200B', inline: true },
								)
							interaction.editReply({
								content: `<@${b.user.id == interaction.user.id ? `${opponent.id}` : `${interaction.user.id}`
									}> you've been challenged to **Rock, Paper, Scissors** by <@${b.user.id}>!`,
								embeds: [embed],
								components: [row]
							});

						} else if (b.customId == "qu") {
							b.deferUpdate();
							collect.stop();
						}

					}
				}

			} else {
				if (!ids.has(b.user.id)) {
					if (b.user.id == opponent.id || b.user.id == interaction.user.id) {
						return b.reply({
							content: "You have already played your chance.",
							ephemeral: true
						});

					} else {
						return b.reply({
							content: "You cant play the game as they didnt call u to play.",
							ephemeral: true
						});
					}
				} else {
					ids.delete(b.user.id);
					b.deferUpdate();
					if (ids.size != 0) {
						if (b.user.id == opponent.id) {
							mem = b.customId;
							const wl = '🟢';
							const wi = '🔴';
							let embed = new MessageEmbed()
								.setTitle(`:right_facing_fist: Rock, Paper, Scissors | Round ${roundn}`)
								.setColor('#36393F')

								.setDescription(`Waiting for ${interaction.user.username}...`)
								.addFields(
									{ name: `${wi} ${interaction.user.username}`, value: '\u200B', inline: true },
									{ name: `${wl} ${opponent.username}`, value: 'has played', inline: true },
								);
							interaction.editReply({ embeds: [embed] });
						}
						if (b.user.id == interaction.user.id) {
							auth = b.customId;
							const wi = '🟢';
							const wl = '🔴';
							let embed = new MessageEmbed()
								.setTitle(`:right_facing_fist: Rock, Paper, Scissors | Round ${roundn}`)
								.setColor('#36393F')

								.setDescription(`Waiting for ${opponent.username}...`)
								.addFields(
									{ name: `${wi} ${interaction.user.username}`, value: 'has played', inline: true },
									{ name: `${wl} ${opponent.username}`, value: '\u200B', inline: true },
								);
							interaction.editReply({ embeds: [embed] });
						}
					} else {
						let kch = 1;
						if (!opponent || opponent.id == clientId) {
							if (b.user.id == interaction.user.id) {
								auth = b.customId;
							}
							if (mem == "rock" && auth == "scissors") {
								oj = oj + 1;
								let embed = new MessageEmbed()
									.setTitle(`:right_facing_fist: Rock, Paper, Scissors | Round ${roundn}`)
									.setColor('#36393F')
									.setDescription(`Round over`)
									.addFields(
										{ name: `${interaction.user.username} : <:ScissorsLeft:914617032262176818>Scissor`, value: `:x: Defeated\n\n${ij} wins`, inline: true },
										{ name: `Coco Arcade : <:RockRight:914617032316710922>Rock`, value: `:tada: Winner\n\n${oj} wins`, inline: true },
									);

								interaction.editReply({ content: '\u200B', embeds: [embed], components: [nr] });
							} else if (mem == "scissors" && auth == "rock") {
								ij = ij + 1;
								let embed = new MessageEmbed()
									.setTitle(`:right_facing_fist: Rock, Paper, Scissors | Round ${roundn}`)
									.setColor('#36393F')
									.setDescription(`Round over`)
									.addFields(
										{ name: `${interaction.user.username} : <:RockLeft:914617032249589800>Rock`, value: `:tada: Winner\n\n${ij} wins`, inline: true },
										{ name: `Coco Arcade : <:ScissorsRight:914617032283160576>Scissor`, value: `:x: Defeated\n\n${oj} wins`, inline: true },
									); interaction.editReply({ content: '\u200B', embeds: [embed], components: [nr] });
							} else if (mem == "scissors" && auth == "paper") {
								oj = oj + 1;
								let embed = new MessageEmbed()
									.setTitle(`:right_facing_fist: Rock, Paper, Scissors | Round ${roundn}`)
									.setColor('#36393F')
									.setDescription(`Round over`)
									.addFields(
										{ name: `${interaction.user.username} : <:PaperLeft:914617032186679326>Paper`, value: `:x: Defeated\n\n${ij} wins`, inline: true },
										{ name: `Coco Arcade : <:ScissorsRight:914617032283160576>Scissor`, value: `:tada: Winner\n\n${oj} wins`, inline: true },
									); interaction.editReply({ content: '\u200B', embeds: [embed], components: [nr] });
							} else if (mem == "paper" && auth == "scissors") {
								ij = ij + 1;
								let embed = new MessageEmbed()
									.setTitle(`:right_facing_fist: Rock, Paper, Scissors | Round ${roundn}`)
									.setColor('#36393F')
									.setDescription(`Round over`)
									.addFields(
										{ name: `${interaction.user.username} : <:ScissorsLeft:914617032262176818>Scissor`, value: `:tada: Winner\n\n${ij} wins`, inline: true },
										{ name: `Coco Arcade : <:PaperRight:914617031989526659>Paper`, value: `:x: Defeated\n\n${oj} wins`, inline: true },
									); interaction.editReply({ content: '\u200B', embeds: [embed], components: [nr] });
							} else if (mem == "paper" && auth == "rock") {
								oj = oj + 1;
								let embed = new MessageEmbed()
									.setTitle(`:right_facing_fist: Rock, Paper, Scissors | Round ${roundn}`)
									.setColor('#36393F')
									.setDescription(`Round over`)
									.addFields(
										{ name: `${interaction.user.username} : <:RockLeft:914617032249589800>Rock`, value: `:x: Defeated\n\n${ij} wins`, inline: true },
										{ name: `Coco Arcade : <:PaperRight:914617031989526659>Paper`, value: `:tada: Winner\n\n${oj} wins`, inline: true },
									); interaction.editReply({ content: '\u200B', embeds: [embed], components: [nr] });
							} else if (mem == "rock" && auth == "paper") {
								ij = ij + 1;
								let embed = new MessageEmbed()
									.setTitle(`:right_facing_fist: Rock, Paper, Scissors | Round ${roundn}`)
									.setColor('#36393F')
									.setDescription(`Round over`)
									.addFields(
										{ name: `${interaction.user.username} : <:PaperLeft:914617032186679326>Paper`, value: `:tada: Winner\n\n${ij} wins`, inline: true },
										{ name: `Coco Arcade : <:RockRight:914617032316710922>Rock`, value: `:x: Defeated\n\n${oj} wins`, inline: true },
									); interaction.editReply({ content: '\u200B', embeds: [embed], components: [nr] });
							} else {
								if (mem == "rock") {
									mst = "<:RockLeft:914617032249589800>";
									msto = '<:RockRight:914617032316710922>';
								} else if (mem == "paper") {
									mst = "<:PaperLeft:914617032186679326>";
									msto = '<:PaperRight:914617031989526659>';
								} else if (mem == "scissors") {
									mst = "<:ScissorsLeft:914617032262176818>";
									msto = '<:ScissorsRight:914617032283160576>';
								}
								let embed = new MessageEmbed()
									.setTitle(`:right_facing_fist: Rock, Paper, Scissors | Round ${roundn}`)
									.setColor('#36393F')
									.setDescription(`Round over`)
									.addFields(
										{ name: `${interaction.user.username} : ${mst}${auth}`, value: `<a:CuteDance:887371032992841738> Draw\n\n${ij} wins`, inline: true },
										{ name: `Coco Arcade : ${msto}${mem}`, value: `<a:CuteDance2:887371033118650418> Draw\n\n${oj} wins`, inline: true },
									); interaction.editReply({ content: '\u200B', embeds: [embed], components: [nr] });
							}


						} else {
							if (b.user.id == opponent.id) {
								mem = b.customId;
							}
							if (b.user.id == interaction.user.id) {
								auth = b.customId;

							}
							if (mem == "rock" && auth == "scissors") {
								oj = oj + 1;
								let embed = new MessageEmbed()
									.setTitle(`:right_facing_fist: Rock, Paper, Scissors | Round ${roundn}`)
									.setColor('#36393F')
									.setDescription(`Round over`)
									.addFields(
										{ name: `${interaction.user.username} : <:ScissorsLeft:914617032262176818>Scissor`, value: `:x: Defeated\n\n${ij} wins`, inline: true },
										{ name: `${opponent.username} : <:RockRight:914617032316710922>Rock`, value: `:tada: Winner\n\n${oj} wins`, inline: true },
									);

								interaction.editReply({ content: '\u200B', embeds: [embed], components: [nr] });
							} else if (mem == "scissors" && auth == "rock") {
								ij = ij + 1;
								let embed = new MessageEmbed()
									.setTitle(`:right_facing_fist: Rock, Paper, Scissors | Round ${roundn}`)
									.setColor('#36393F')
									.setDescription(`Round over`)
									.addFields(
										{ name: `${interaction.user.username} : <:RockLeft:914617032249589800>Rock`, value: `:tada: Winner\n\n${ij} wins`, inline: true },
										{ name: `${opponent.username} : <:ScissorsRight:914617032283160576>Scissor`, value: `:x: Defeated\n\n${oj} wins`, inline: true },
									); interaction.editReply({ content: '\u200B', embeds: [embed], components: [nr] });
							} else if (mem == "scissors" && auth == "paper") {
								oj = oj + 1;
								let embed = new MessageEmbed()
									.setTitle(`:right_facing_fist: Rock, Paper, Scissors | Round ${roundn}`)
									.setColor('#36393F')
									.setDescription(`Round over`)
									.addFields(
										{ name: `${interaction.user.username} : <:PaperLeft:914617032186679326>Paper`, value: `:x: Defeated\n\n${ij} wins`, inline: true },
										{ name: `${opponent.username} : <:ScissorsRight:914617032283160576>Scissor`, value: `:tada: Winner\n\n${oj} wins`, inline: true },
									); interaction.editReply({ content: '\u200B', embeds: [embed], components: [nr] });
							} else if (mem == "paper" && auth == "scissors") {
								ij = ij + 1;
								let embed = new MessageEmbed()
									.setTitle(`:right_facing_fist: Rock, Paper, Scissors | Round ${roundn}`)
									.setColor('#36393F')
									.setDescription(`Round over`)
									.addFields(
										{ name: `${interaction.user.username} : <:ScissorsLeft:914617032262176818>Scissor`, value: `:tada: Winner\n\n${ij} wins`, inline: true },
										{ name: `${opponent.username} : <:PaperRight:914617031989526659>Paper`, value: `:x: Defeated\n\n${oj} wins`, inline: true },
									); interaction.editReply({ content: '\u200B', embeds: [embed], components: [nr] });
							} else if (mem == "paper" && auth == "rock") {
								oj = oj + 1;
								let embed = new MessageEmbed()
									.setTitle(`:right_facing_fist: Rock, Paper, Scissors | Round ${roundn}`)
									.setColor('#36393F')
									.setDescription(`Round over`)
									.addFields(
										{ name: `${interaction.user.username} : <:RockLeft:914617032249589800>Rock`, value: `:x: Defeated\n\n${ij} wins`, inline: true },
										{ name: `${opponent.username} : <:PaperRight:914617031989526659>Paper`, value: `:tada: Winner\n\n${oj} wins`, inline: true },
									); interaction.editReply({ content: '\u200B', embeds: [embed], components: [nr] });
							} else if (mem == "rock" && auth == "paper") {
								ij = ij + 1;
								let embed = new MessageEmbed()
									.setTitle(`:right_facing_fist: Rock, Paper, Scissors | Round ${roundn}`)
									.setColor('#36393F')
									.setDescription(`Round over`)
									.addFields(
										{ name: `${interaction.user.username} : <:PaperLeft:914617032186679326>Paper`, value: `:tada: Winner\n\n${ij} wins`, inline: true },
										{ name: `${opponent.username} : <:RockRight:914617032316710922>Rock`, value: `:x: Defeated\n\n${oj} wins`, inline: true },
									); interaction.editReply({ content: '\u200B', embeds: [embed], components: [nr] });
							} else {
								if (mem == "rock") {
									mst = "<:RockLeft:914617032249589800>";
									msto = '<:RockRight:914617032316710922>';
								} else if (mem == "paper") {
									mst = "<:PaperLeft:914617032186679326>";
									msto = '<:PaperRight:914617031989526659>';
								} else if (mem == "scissors") {
									mst = "<:ScissorsLeft:914617032262176818>";
									msto = '<:ScissorsRight:914617032283160576>';
								}
								let embed = new MessageEmbed()
									.setTitle(`:right_facing_fist: Rock, Paper, Scissors | Round ${roundn}`)
									.setColor('#36393F')
									.setDescription(`Round over`)
									.addFields(
										{ name: `${interaction.user.username} : ${mst}${auth}`, value: `<a:CuteDance:887371032992841738> Draw\n\n${ij} wins`, inline: true },
										{ name: `${opponent.username} : ${msto}${mem}`, value: `<a:CuteDance2:887371033118650418> Draw\n\n${oj} wins`, inline: true },
									); interaction.editReply({ content: '\u200B', embeds: [embed], components: [nr] });
							}
						}
						//collect.stop();
					}
				}
			}
		});
		collect.on("end", async (c, reason) => {
			if (reason == "time" && kch == 0) {
				let embed = new MessageEmbed()
					.setTitle(`:warning: Error`)
					.setColor('#FFFF00')
					.setDescription(
						"Sorry, you took too long to respond and the interaction expired."
					);
				interaction.editReply({
					content: '\u200B',
					embeds: [embed],
					components: []
				});
			} else {
				if (!opponent || opponent.id == clientId) {
					if (oj > ij) {
						let embed = new MessageEmbed()
							.setTitle(`:right_facing_fist: Rock, Paper, Scissors`)
							.setColor('#36393F')
							.setDescription(`Gameover\n\n**Coco Arcade**\n:tada: ${oj} wins\n\n**${interaction.user.username}**\n${ij} wins`);

						interaction.editReply({ content: '\u200B', embeds: [embed], components: [] });
						const tagi1 = await Tags.findOne({ where: { id: interaction.user.id } });
						if (tagi1) {
							if (party_limit == 0) {
								tagi1.increment({ 'partygamescore': 10 * ij });
							} else {
								temppartycheck = tagi1.get('partygamescorewlim');
								if (temppartycheck <= party_limit_value) {
									tagi1.increment({ 'partygamescore': 10 * ij });
									tagi1.increment({ 'partygamescorewlim': 10 * ij });

								}
							}
						}
						//////////////////////////////////

					} else if (ij > oj) {
						let embed = new MessageEmbed()
							.setTitle(`:right_facing_fist: Rock, Paper, Scissors`)
							.setColor('#36393F')
							.setDescription(`Gameover\n\n**${interaction.user.username}**\n:tada: ${ij} wins\n\n**Coco Arcade**\n${oj} wins`);
						interaction.editReply({ content: '\u200B', embeds: [embed], components: [] });
						const tagi1 = await Tags.findOne({ where: { id: interaction.user.id } });
						if (tagi1) {
							if (party_limit == 0) {
								tagi1.increment({ 'partygamescore': 10 * ij });
							} else {
								temppartycheck = tagi1.get('partygamescorewlim');
								if (temppartycheck <= party_limit_value) {
									tagi1.increment({ 'partygamescore': 10 * ij });
									tagi1.increment({ 'partygamescorewlim': 10 * ij });

								}
							}
						}
						/////////////////////////////////////////////
					} else if (ij == oj) {
						let embed = new MessageEmbed()
							.setTitle(`:right_facing_fist: Rock, Paper, Scissors`)
							.setColor('#36393F')
							.setDescription(`Gameover\n\n**${interaction.user.username}**\n<a:CuteDance:887371032992841738> ${ij} wins\n\n**Coco Arcade**\n<a:CuteDance2:887371033118650418> ${oj} wins`);
						interaction.editReply({ content: '\u200B', embeds: [embed], components: [] });
						const tagi1 = await Tags.findOne({ where: { id: interaction.user.id } });
						if (tagi1) {
							if (party_limit == 0) {
								tagi1.increment({ 'partygamescore': 10 * ij });
							} else {
								temppartycheck = tagi1.get('partygamescorewlim');
								if (temppartycheck <= party_limit_value) {
									tagi1.increment({ 'partygamescore': 10 * ij });
									tagi1.increment({ 'partygamescorewlim': 10 * ij });

								}
							}
						}
						///////////////////////////////
					}
				} else {
					if (oj > ij) {
						let embed = new MessageEmbed()
							.setTitle(`:right_facing_fist: Rock, Paper, Scissors`)
							.setColor('#36393F')
							.setDescription(`Gameover\n\n**${opponent.username}**\n:tada: ${oj} wins\n\n**${interaction.user.username}**\n${ij} wins`);

						interaction.editReply({ content: '\u200B', embeds: [embed], components: [] });
						const tagi1 = await Tags.findOne({ where: { id: interaction.user.id } });
						if (tagi1) {
							if (party_limit == 0) {
								tagi1.increment({ 'partygamescore': 10 * ij });
							} else {
								temppartycheck = tagi1.get('partygamescorewlim');
								if (temppartycheck <= party_limit_value) {
									tagi1.increment({ 'partygamescore': 10 * ij });
									tagi1.increment({ 'partygamescorewlim': 10 * ij });

								}
							}
						}
						//////////////////////////////////////////////////////
						const tagi2 = await Tags.findOne({ where: { id: opponent.id } });
						if (tagi2) {
							if (party_limit == 0) {
								tagi2.increment({ 'partygamescore': 10 * oj });
							} else {
								temppartycheck = tagi2.get('partygamescorewlim');
								if (temppartycheck <= party_limit_value) {
									tagi2.increment({ 'partygamescore': 10 * oj });
									tagi2.increment({ 'partygamescorewlim': 10 * oj });

								}
							}
						}
						//////////////////////////////////////////////////////////
					} else if (ij > oj) {
						let embed = new MessageEmbed()
							.setTitle(`:right_facing_fist: Rock, Paper, Scissors`)
							.setColor('#36393F')
							.setDescription(`Gameover\n\n**${interaction.user.username}**\n:tada: ${ij} wins\n\n**${opponent.username}**\n${oj} wins`);
						interaction.editReply({ content: '\u200B', embeds: [embed], components: [] });
						const tagi1 = await Tags.findOne({ where: { id: interaction.user.id } });
						if (tagi1) {
							if (party_limit == 0) {
								tagi1.increment({ 'partygamescore': 10 * ij });
							} else {
								temppartycheck = tagi1.get('partygamescorewlim');
								if (temppartycheck <= party_limit_value) {
									tagi1.increment({ 'partygamescore': 10 * ij });
									tagi1.increment({ 'partygamescorewlim': 10 * ij });

								}
							}
						}
						////////////////////
						const tagi2 = await Tags.findOne({ where: { id: opponent.id } });
						if (tagi2) {
							if (party_limit == 0) {
								tagi2.increment({ 'partygamescore': 10 * oj });
							} else {
								temppartycheck = tagi2.get('partygamescorewlim');
								if (temppartycheck <= party_limit_value) {
									tagi2.increment({ 'partygamescore': 10 * oj });
									tagi2.increment({ 'partygamescorewlim': 10 * oj });

								}
							}
						}
						////////////////////////////////
					} else if (ij == oj) {
						let embed = new MessageEmbed()
							.setTitle(`:right_facing_fist: Rock, Paper, Scissors`)
							.setColor('#36393F')
							.setDescription(`Gameover\n\n**${interaction.user.username}**\n:warning: ${ij} wins\n\n**${opponent.username}**\n:warning: ${oj} wins`);
						interaction.editReply({ content: '\u200B', embeds: [embed], components: [] });
						const tagi1 = await Tags.findOne({ where: { id: interaction.user.id } });
						if (tagi1) {
							if (party_limit == 0) {
								tagi1.increment({ 'partygamescore': 10 * ij });
							} else {
								temppartycheck = tagi1.get('partygamescorewlim');
								if (temppartycheck <= party_limit_value) {
									tagi1.increment({ 'partygamescore': 10 * ij });
									tagi1.increment({ 'partygamescorewlim': 10 * ij });

								}
							}
						}
						//////////////////////////////
						const tagi2 = await Tags.findOne({ where: { id: opponent.id } });
						if (tagi2) {
							if (party_limit == 0) {
								tagi2.increment({ 'partygamescore': 10 * oj });
							} else {
								temppartycheck = tagi2.get('partygamescorewlim');
								if (temppartycheck <= party_limit_value) {
									tagi2.increment({ 'partygamescore': 10 * oj });
									tagi2.increment({ 'partygamescorewlim': 10 * oj });

								}
							}
						}
						///////////////////////////////
					}

				}
			}
		});

		/*	simplydjs.rps(interaction, {
				slash: true,
				credit: false,
				embedColor: '#36393F',
				winEmbedColor: '#36393F',
				timeoutEmbedColor: '#FFFF00',
				drawEmbedColor: '#36393F',
				// other options
			})*/
	}


	//1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1
	else if (commandName === 'tictactoe') {
		let drawst = 0;

		let opponent = interaction.options.getUser("opponent");
		//////////game with bot//////////////////
		if (!opponent || opponent.id == clientId) {
			/*return interaction.reply({
				content: "No opponent mentioned!",
				ephemeral: true
			  });*/
			let fighters = [interaction.user.id, "Coco Arcade"].sort(() =>
				Math.random() > 0.5 ? 1 : -1
			);
			let won = {
				"<:O_:863314110560993340>": false,
				"<:X_:863314044781723668>": false
			};
			let xax = Math.floor(Math.random() * 3);
			let yax = Math.floor(Math.random() * 3);
			let drawst = 0;
			console.log(`xax=${xax}, yax=${yax}`)

			let x_emoji = '<:x_:903270400748843079>';
			let o_emoji = '<:O_:903275756149411870>';

			let dashmoji = "<:__:903004823446765608.>";

			let Args = {
				user: 0,
				a1: {
					style: "SECONDARY",
					emoji: dashmoji,
					disabled: false
				},
				a2: {
					style: "SECONDARY",
					emoji: dashmoji,
					disabled: false
				},
				a3: {
					style: "SECONDARY",
					emoji: dashmoji,
					disabled: false
				},
				b1: {
					style: "SECONDARY",
					emoji: dashmoji,
					disabled: false
				},
				b2: {
					style: "SECONDARY",
					emoji: dashmoji,
					disabled: false
				},
				b3: {
					style: "SECONDARY",
					emoji: dashmoji,
					disabled: false
				},
				c1: {
					style: "SECONDARY",
					emoji: dashmoji,
					disabled: false
				},
				c2: {
					style: "SECONDARY",
					emoji: dashmoji,
					disabled: false
				},
				c3: {
					style: "SECONDARY",
					emoji: dashmoji,
					disabled: false
				}
			};

			const xoemb = new MessageEmbed()
				.setTitle('<:TicTacToe:914610939729436704> Tic Tac Toe')
				.setDescription(
					`Round in progress...\n>`
				)
				.setColor('#36393F')

				;

			let msg = await interaction.reply({
				content: '\u200B', embeds: []
			});
			m = await interaction.fetchReply();
			tictactoe(msg);
			async function tictactoe(m) {
				Args.userid = fighters[Args.user];


				let won = {
					"<:O_:863314110560993340>": false,
					"<:X_:863314044781723668>": false
				};
				if (
					Args.a1.emoji == o_emoji &&
					Args.b1.emoji == o_emoji &&
					Args.c1.emoji == o_emoji
				)
					won["<:O_:863314110560993340>"] = true;
				if (
					Args.a2.emoji == o_emoji &&
					Args.b2.emoji == o_emoji &&
					Args.c2.emoji == o_emoji
				)
					won["<:O_:863314110560993340>"] = true;
				if (
					Args.a3.emoji == o_emoji &&
					Args.b3.emoji == o_emoji &&
					Args.c3.emoji == o_emoji
				)
					won["<:O_:863314110560993340>"] = true;
				if (
					Args.a1.emoji == o_emoji &&
					Args.b2.emoji == o_emoji &&
					Args.c3.emoji == o_emoji
				)
					won["<:O_:863314110560993340>"] = true;
				if (
					Args.a3.emoji == o_emoji &&
					Args.b2.emoji == o_emoji &&
					Args.c1.emoji == o_emoji
				)
					won["<:O_:863314110560993340>"] = true;
				if (
					Args.a1.emoji == o_emoji &&
					Args.a2.emoji == o_emoji &&
					Args.a3.emoji == o_emoji
				)
					won["<:O_:863314110560993340>"] = true;
				if (
					Args.b1.emoji == o_emoji &&
					Args.b2.emoji == o_emoji &&
					Args.b3.emoji == o_emoji
				)
					won["<:O_:863314110560993340>"] = true;
				if (
					Args.c1.emoji == o_emoji &&
					Args.c2.emoji == o_emoji &&
					Args.c3.emoji == o_emoji
				)
					won["<:O_:863314110560993340>"] = true;

				if (won["<:O_:863314110560993340>"] != false) {

					let a1 = new MessageButton()
						.setLabel('\u200B')
						.setStyle(Args.a1.style)
						.setEmoji(Args.a1.emoji)
						.setCustomId("a1")
						.setDisabled(true);
					let a2 = new MessageButton()
						.setLabel('\u200B')
						.setStyle(Args.a2.style)
						.setEmoji(Args.a2.emoji)
						.setCustomId("a2")
						.setDisabled(true);
					let a3 = new MessageButton()
						.setLabel('\u200B')
						.setStyle(Args.a3.style)
						.setEmoji(Args.a3.emoji)
						.setCustomId("a3")
						.setDisabled(true);
					let b1 = new MessageButton()
						.setLabel('\u200B')
						.setStyle(Args.b1.style)
						.setEmoji(Args.b1.emoji)
						.setCustomId("b1")
						.setDisabled(true);
					let b2 = new MessageButton()
						.setLabel('\u200B')
						.setStyle(Args.b2.style)
						.setEmoji(Args.b2.emoji)
						.setCustomId("b2")
						.setDisabled(true);
					let b3 = new MessageButton()
						.setLabel('\u200B')
						.setStyle(Args.b3.style)
						.setEmoji(Args.b3.emoji)
						.setCustomId("b3")
						.setDisabled(true);
					let c1 = new MessageButton()
						.setLabel('\u200B')
						.setStyle(Args.c1.style)
						.setEmoji(Args.c1.emoji)
						.setCustomId("c1")
						.setDisabled(true);
					let c2 = new MessageButton()
						.setLabel('\u200B')
						.setStyle(Args.c2.style)
						.setEmoji(Args.c2.emoji)
						.setCustomId("c2")
						.setDisabled(true);
					let c3 = new MessageButton()
						.setLabel('\u200B')
						.setStyle(Args.c3.style)
						.setEmoji(Args.c3.emoji)
						.setCustomId("c3")
						.setDisabled(true);
					let a = new MessageActionRow().addComponents([a1, a2, a3]);
					let b = new MessageActionRow().addComponents([b1, b2, b3]);
					let c = new MessageActionRow().addComponents([c1, c2, c3]);
					let buttons = { components: [a, b, c] };
					const xoemb3 = new MessageEmbed()
						.setTitle('<:TicTacToe:914610939729436704> Tic Tac Toe')
						.setDescription(
							`Round over`

						)
						.addFields(

							{
								name: `<:O_:903275756149411870> | ${fighters[1] == interaction.user.id ? `${interaction.user.username}` : `Coco Arcade`
									}`, value: '<a:BunnyParty:901944552317919232> Winner', inline: true
							},
							{
								name: `<:x_:903270400748843079> | ${fighters[1] == interaction.user.id ? `Coco Arcade` : `${interaction.user.username}`
									}`, value: '<a:BearCry:886730332076924978> Defeated', inline: true
							},
						)
						.setColor('#36393F')
						;
					const xoemb4 = new MessageEmbed()
						.setTitle('<:TicTacToe:914610939729436704> Tic Tac Toe')
						.setDescription(
							`Round over`

						)
						.addFields(

							{
								name: `<:O_:903275756149411870> | ${fighters[0] == interaction.user.id ? `${interaction.user.username}` : `Coco Arcade`
									}`, value: '<a:BunnyParty:901944552317919232> Winner', inline: true
							},
							{
								name: `<:x_:903270400748843079> | ${fighters[0] == interaction.user.id ? `Coco Arcade` : `${interaction.user.username}`
									}`, value: '<a:BearCry:886730332076924978> Defeated', inline: true
							},
						)
						.setColor('#36393F')
						;

					if (Args.user == 0) {
						const tagi1 = await Tags.findOne({ where: { id: fighters[1] } });
						if (tagi1) {
							if (party_limit == 0) {
								tagi1.increment({ 'partygamescore': 10 });
							} else {
								temppartycheck = tagi1.get('partygamescorewlim');
								if (temppartycheck <= party_limit_value) {
									tagi1.increment({ 'partygamescore': 10 });
									tagi1.increment({ 'partygamescorewlim': 10 });

								}
							}
						}
						return m.edit({
							content: `${fighters[1] == interaction.user.id ? `${interaction.user.username}` : `Coco Arcade`
								} <:O_:903275756149411870> won.. `, embeds: [xoemb3], components: [a, b, c]
						});
					}
					else if (Args.user == 1) {
						const tagi1 = await Tags.findOne({ where: { id: fighters[0] } });
						if (tagi1) {
							if (party_limit == 0) {
								tagi1.increment({ 'partygamescore': 10 });
							} else {
								temppartycheck = tagi1.get('partygamescorewlim');
								if (temppartycheck <= party_limit_value) {
									tagi1.increment({ 'partygamescore': 10 });
									tagi1.increment({ 'partygamescorewlim': 10 });

								}
							}
						}
						return m.edit({
							content: `${fighters[0] == interaction.user.id ? `${interaction.user.username}` : `Coco Arcade`
								} <:O_:903275756149411870> won.. `, embeds: [xoemb4], components: [a, b, c]
						});
					}
				}
				if (
					Args.a1.emoji == x_emoji &&
					Args.b1.emoji == x_emoji &&
					Args.c1.emoji == x_emoji
				)
					won["<:X_:863314044781723668>"] = true;
				if (
					Args.a2.emoji == x_emoji &&
					Args.b2.emoji == x_emoji &&
					Args.c2.emoji == x_emoji
				)
					won["<:X_:863314044781723668>"] = true;
				if (
					Args.a3.emoji == x_emoji &&
					Args.b3.emoji == x_emoji &&
					Args.c3.emoji == x_emoji
				)
					won["<:X_:863314044781723668>"] = true;
				if (
					Args.a1.emoji == x_emoji &&
					Args.b2.emoji == x_emoji &&
					Args.c3.emoji == x_emoji
				)
					won["<:X_:863314044781723668>"] = true;
				if (
					Args.a3.emoji == x_emoji &&
					Args.b2.emoji == x_emoji &&
					Args.c1.emoji == x_emoji
				)
					won["<:X_:863314044781723668>"] = true;
				if (
					Args.a1.emoji == x_emoji &&
					Args.a2.emoji == x_emoji &&
					Args.a3.emoji == x_emoji
				)
					won["<:X_:863314044781723668>"] = true;
				if (
					Args.b1.emoji == x_emoji &&
					Args.b2.emoji == x_emoji &&
					Args.b3.emoji == x_emoji
				)
					won["<:X_:863314044781723668>"] = true;
				if (
					Args.c1.emoji == x_emoji &&
					Args.c2.emoji == x_emoji &&
					Args.c3.emoji == x_emoji
				)
					won["<:X_:863314044781723668>"] = true;
				if (won["<:X_:863314044781723668>"] != false) {

					let a1 = new MessageButton()
						.setLabel('\u200B')
						.setStyle(Args.a1.style)
						.setEmoji(Args.a1.emoji)
						.setCustomId("a1")
						.setDisabled(true);
					let a2 = new MessageButton()
						.setLabel('\u200B')
						.setStyle(Args.a2.style)
						.setEmoji(Args.a2.emoji)
						.setCustomId("a2")
						.setDisabled(true);
					let a3 = new MessageButton()
						.setLabel('\u200B')
						.setStyle(Args.a3.style)
						.setEmoji(Args.a3.emoji)
						.setCustomId("a3")
						.setDisabled(true);
					let b1 = new MessageButton()
						.setLabel('\u200B')
						.setStyle(Args.b1.style)
						.setEmoji(Args.b1.emoji)
						.setCustomId("b1")
						.setDisabled(true);
					let b2 = new MessageButton()
						.setLabel('\u200B')
						.setStyle(Args.b2.style)
						.setEmoji(Args.b2.emoji)
						.setCustomId("b2")
						.setDisabled(true);
					let b3 = new MessageButton()
						.setLabel('\u200B')
						.setStyle(Args.b3.style)
						.setEmoji(Args.b3.emoji)
						.setCustomId("b3")
						.setDisabled(true);
					let c1 = new MessageButton()
						.setLabel('\u200B')
						.setStyle(Args.c1.style)
						.setEmoji(Args.c1.emoji)
						.setCustomId("c1")
						.setDisabled(true);
					let c2 = new MessageButton()
						.setCustomId("c2")
						.setLabel('\u200B')
						.setStyle(Args.c2.style)
						.setEmoji(Args.c2.emoji)
						.setDisabled(true);
					let c3 = new MessageButton()
						.setLabel('\u200B')
						.setStyle(Args.c3.style)
						.setEmoji(Args.c3.emoji)
						.setCustomId("c3")
						.setDisabled(true);
					let a = new MessageActionRow().addComponents([a1, a2, a3]);
					let b = new MessageActionRow().addComponents([b1, b2, b3]);
					let c = new MessageActionRow().addComponents([c1, c2, c3]);
					let buttons = { components: [a, b, c] };

					const xoemb1 = new MessageEmbed()
						.setTitle('<:TicTacToe:914610939729436704> Tic Tac Toe')
						.setDescription(
							`Round over`

						)
						.addFields(

							{
								name: `<:x_:903270400748843079> | ${fighters[1] == interaction.user.id ? `${interaction.user.username}` : `Coco Arcade`
									}`, value: '<a:BunnyParty:901944552317919232> Winner', inline: true
							},
							{
								name: `<:O_:903275756149411870> | ${fighters[1] == interaction.user.id ? `Coco Arcade` : `${interaction.user.username}`
									}`, value: '<a:BearCry:886730332076924978> Defeated', inline: true
							},
						)
						.setColor('#36393F')
						;
					const xoemb2 = new MessageEmbed()
						.setTitle('<:TicTacToe:914610939729436704> Tic Tac Toe')
						.setDescription(
							`Round over`

						)
						.addFields(

							{
								name: `<:x_:903270400748843079> | ${fighters[1] == interaction.user.id ? `${interaction.user.username}` : `Coco Arcade`
									}`, value: '<a:BunnyParty:901944552317919232> Winner', inline: true
							},
							{
								name: `<:O_:903275756149411870> | ${fighters[1] == interaction.user.id ? `Coco Arcade` : `${interaction.user.username}`
									}`, value: '<a:BearCry:886730332076924978> Defeated', inline: true
							},
						)
						.setColor('#36393F')
						;

					if (Args.user == 0) {
						const tagi1 = await Tags.findOne({ where: { id: fighters[1] } });
						if (tagi1) {
							if (party_limit == 0) {
								tagi1.increment({ 'partygamescore': 10 });
							} else {
								temppartycheck = tagi1.get('partygamescorewlim');
								if (temppartycheck <= party_limit_value) {
									tagi1.increment({ 'partygamescore': 10 });
									tagi1.increment({ 'partygamescorewlim': 10 });

								}
							}
						}
						return m.edit({
							content: `${fighters[0] == interaction.user.id ? `${interaction.user.username}` : `Coco Arcade`
								} <:x_:903270400748843079> won.. `, embeds: [xoemb1], components: [a, b, c]
						});
					}
					else if (Args.user == 1) {
						const tagi1 = await Tags.findOne({ where: { id: fighters[0] } });
						if (tagi1) {
							if (party_limit == 0) {
								tagi1.increment({ 'partygamescore': 10 });
							} else {
								temppartycheck = tagi1.get('partygamescorewlim');
								if (temppartycheck <= party_limit_value) {
									tagi1.increment({ 'partygamescore': 10 });
									tagi1.increment({ 'partygamescorewlim': 10 });

								}
							}
						}
						return m.edit({
							content: `${fighters[0] == interaction.user.id ? `${interaction.user.username}` : `Coco Arcade`
								} <:x_:903270400748843079> won.. `, embeds: [xoemb1], components: [a, b, c]
						});
					}

				}

				let a1 = new MessageButton()
					.setLabel('\u200B')
					.setStyle(Args.a1.style)
					.setEmoji(Args.a1.emoji)
					.setCustomId("a1")
					.setDisabled(Args.a1.disabled);
				let a2 = new MessageButton()
					.setLabel('\u200B')
					.setStyle(Args.a2.style)
					.setEmoji(Args.a2.emoji)
					.setCustomId("a2")
					.setDisabled(Args.a2.disabled);
				let a3 = new MessageButton()
					.setLabel('\u200B')
					.setStyle(Args.a3.style)
					.setEmoji(Args.a3.emoji)
					.setCustomId("a3")
					.setDisabled(Args.a3.disabled);
				let b1 = new MessageButton()
					.setLabel('\u200B')
					.setStyle(Args.b1.style)
					.setEmoji(Args.b1.emoji)
					.setCustomId("b1")
					.setDisabled(Args.b1.disabled);
				let b2 = new MessageButton()
					.setLabel('\u200B')
					.setStyle(Args.b2.style)
					.setEmoji(Args.b2.emoji)
					.setCustomId("b2")
					.setDisabled(Args.b2.disabled);
				let b3 = new MessageButton()
					.setLabel('\u200B')
					.setStyle(Args.b3.style)
					.setEmoji(Args.b3.emoji)
					.setCustomId("b3")
					.setDisabled(Args.b3.disabled);
				let c1 = new MessageButton()
					.setLabel('\u200B')
					.setStyle(Args.c1.style)
					.setEmoji(Args.c1.emoji)
					.setCustomId("c1")
					.setDisabled(Args.c1.disabled);
				let c2 = new MessageButton()
					.setLabel('\u200B')
					.setStyle(Args.c2.style)
					.setEmoji(Args.c2.emoji)
					.setCustomId("c2")
					.setDisabled(Args.c2.disabled);
				let c3 = new MessageButton()
					.setLabel('\u200B')
					.setStyle(`${Args.c3.style}`)
					.setEmoji(`${Args.c3.emoji}`)
					.setCustomId("c3")
					.setDisabled(Args.c3.disabled);
				let a = new MessageActionRow().addComponents([a1, a2, a3]);
				let b = new MessageActionRow().addComponents([b1, b2, b3]);
				let c = new MessageActionRow().addComponents([c1, c2, c3]);
				let buttons = { components: [a, b, c] };
				let em = `${Args.user == 0 ? "<:O_:903275756149411870>" : "<:x_:903270400748843079>"
					}`




				let op = `${Args.user == 1 ? '<:O_:903275756149411870>' : "<:x_:903270400748843079>"
					}`
				/*if (Args.userid == "Coco Arcade") {
				
					if (Args.user == 0) {
						Args.user = 1;
						Args[a1] = {
							style: "SUCCESS",
							emoji: o_emoji,
							disabled: true
						};
					} else {
						Args.user = 0;
						Args[a1] = {
							style: "DANGER",
							emoji: x_emoji,
							disabled: true
						};
	
						
					}
					
				}*/



				const xoemb = new MessageEmbed()
					.setTitle('<:TicTacToe:914610939729436704> Tic Tac Toe')
					.setDescription(
						`Round in progress...`
					)
					.addFields(

						{
							name: `${em} | ${Args.userid == interaction.user.id ? `${interaction.user.username}` : `Coco Arcade`
								}`, value: '**Current Player** <a:BearPhone:886730331984629800>', inline: true
						},
						{
							name: `${op} | ${Args.userid == interaction.user.id ? `Coco Arcade` : `${interaction.user.username}`
								}`, value: 'Next Up <a:BearSit:914611493130104872>', inline: true
						},
					)
					.setColor('#36393F')
					;
				interaction.editReply({
					content: `${Args.userid == interaction.user.id ? `Waiting for Input | <@!${Args.userid}> | Your Emoji: ${Args.user == 0 ? '<:O_:903275756149411870>' : "<:x_:903270400748843079>"
						}` : `Coco Arcade is thinking...|${Args.user == 0 ? '<:O_:903275756149411870>' : "<:x_:903270400748843079>"
						}`}`,
					components: [a, b, c], embeds: [xoemb]
				});
				if (Args.userid == "Coco Arcade") {
					///////////////////////////////////////////////////////////////////to win/////////////////////////////////////////
					if (Args['a1'].style == `${Args.user == 0 ? 'SUCCESS' : "DANGER"}` && Args['a3'].style == `${Args.user == 0 ? 'SUCCESS' : "DANGER"}` && Args['a2'].disabled != true) {
						Args['a2'] = {
							style: `${Args.user == 0 ? 'SUCCESS' : "DANGER"}`,
							emoji: `${Args.user == 0 ? o_emoji : x_emoji}`,
							disabled: true
						};
					} else if (Args['a1'].style == `${Args.user == 0 ? 'SUCCESS' : "DANGER"}` && Args['a2'].style == `${Args.user == 0 ? 'SUCCESS' : "DANGER"}` && Args['a3'].disabled != true) {
						Args['a3'] = {
							style: `${Args.user == 0 ? 'SUCCESS' : "DANGER"}`,
							emoji: `${Args.user == 0 ? o_emoji : x_emoji}`,
							disabled: true
						};
					} else if (Args['a3'].style == `${Args.user == 0 ? 'SUCCESS' : "DANGER"}` && Args['a2'].style == `${Args.user == 0 ? 'SUCCESS' : "DANGER"}` && Args['a1'].disabled != true) {
						Args['a1'] = {
							style: `${Args.user == 0 ? 'SUCCESS' : "DANGER"}`,
							emoji: `${Args.user == 0 ? o_emoji : x_emoji}`,
							disabled: true
						};
					} else if (Args['b1'].style == `${Args.user == 0 ? 'SUCCESS' : "DANGER"}` && Args['b3'].style == `${Args.user == 0 ? 'SUCCESS' : "DANGER"}` && Args['b2'].disabled != true) {
						Args['b2'] = {
							style: `${Args.user == 0 ? 'SUCCESS' : "DANGER"}`,
							emoji: `${Args.user == 0 ? o_emoji : x_emoji}`,
							disabled: true
						};
					} else if (Args['b1'].style == `${Args.user == 0 ? 'SUCCESS' : "DANGER"}` && Args['b2'].style == `${Args.user == 0 ? 'SUCCESS' : "DANGER"}` && Args['b3'].disabled != true) {
						Args['b3'] = {
							style: `${Args.user == 0 ? 'SUCCESS' : "DANGER"}`,
							emoji: `${Args.user == 0 ? o_emoji : x_emoji}`,
							disabled: true
						};
					} else if (Args['b3'].style == `${Args.user == 0 ? 'SUCCESS' : "DANGER"}` && Args['b2'].style == `${Args.user == 0 ? 'SUCCESS' : "DANGER"}` && Args['b1'].disabled != true) {
						Args['b1'] = {
							style: `${Args.user == 0 ? 'SUCCESS' : "DANGER"}`,
							emoji: `${Args.user == 0 ? o_emoji : x_emoji}`,
							disabled: true
						};
					} else if (Args['c1'].style == `${Args.user == 0 ? 'SUCCESS' : "DANGER"}` && Args['c3'].style == `${Args.user == 0 ? 'SUCCESS' : "DANGER"}` && Args['c2'].disabled != true) {
						Args['c2'] = {
							style: `${Args.user == 0 ? 'SUCCESS' : "DANGER"}`,
							emoji: `${Args.user == 0 ? o_emoji : x_emoji}`,
							disabled: true
						};
					} else if (Args['c1'].style == `${Args.user == 0 ? 'SUCCESS' : "DANGER"}` && Args['c2'].style == `${Args.user == 0 ? 'SUCCESS' : "DANGER"}` && Args['c3'].disabled != true) {
						Args['c3'] = {
							style: `${Args.user == 0 ? 'SUCCESS' : "DANGER"}`,
							emoji: `${Args.user == 0 ? o_emoji : x_emoji}`,
							disabled: true
						};
					} else if (Args['c3'].style == `${Args.user == 0 ? 'SUCCESS' : "DANGER"}` && Args['c2'].style == `${Args.user == 0 ? 'SUCCESS' : "DANGER"}` && Args['c1'].disabled != true) {
						Args['c1'] = {
							style: `${Args.user == 0 ? 'SUCCESS' : "DANGER"}`,
							emoji: `${Args.user == 0 ? o_emoji : x_emoji}`,
							disabled: true
						};
					} else if (Args['a1'].style == `${Args.user == 0 ? 'SUCCESS' : "DANGER"}` && Args['c1'].style == `${Args.user == 0 ? 'SUCCESS' : "DANGER"}` && Args['b1'].disabled != true) {
						Args['b1'] = {
							style: `${Args.user == 0 ? 'SUCCESS' : "DANGER"}`,
							emoji: `${Args.user == 0 ? o_emoji : x_emoji}`,
							disabled: true
						};
					} else if (Args['a1'].style == `${Args.user == 0 ? 'SUCCESS' : "DANGER"}` && Args['b1'].style == `${Args.user == 0 ? 'SUCCESS' : "DANGER"}` && Args['c1'].disabled != true) {
						Args['c1'] = {
							style: `${Args.user == 0 ? 'SUCCESS' : "DANGER"}`,
							emoji: `${Args.user == 0 ? o_emoji : x_emoji}`,
							disabled: true
						};
					} else if (Args['b1'].style == `${Args.user == 0 ? 'SUCCESS' : "DANGER"}` && Args['c1'].style == `${Args.user == 0 ? 'SUCCESS' : "DANGER"}` && Args['a1'].disabled != true) {
						Args['a1'] = {
							style: `${Args.user == 0 ? 'SUCCESS' : "DANGER"}`,
							emoji: `${Args.user == 0 ? o_emoji : x_emoji}`,
							disabled: true
						};
					} else if (Args['a2'].style == `${Args.user == 0 ? 'SUCCESS' : "DANGER"}` && Args['c2'].style == `${Args.user == 0 ? 'SUCCESS' : "DANGER"}` && Args['b2'].disabled != true) {
						Args['b2'] = {
							style: `${Args.user == 0 ? 'SUCCESS' : "DANGER"}`,
							emoji: `${Args.user == 0 ? o_emoji : x_emoji}`,
							disabled: true
						};
					} else if (Args['a2'].style == `${Args.user == 0 ? 'SUCCESS' : "DANGER"}` && Args['b2'].style == `${Args.user == 0 ? 'SUCCESS' : "DANGER"}` && Args['c2'].disabled != true) {
						Args['c2'] = {
							style: `${Args.user == 0 ? 'SUCCESS' : "DANGER"}`,
							emoji: `${Args.user == 0 ? o_emoji : x_emoji}`,
							disabled: true
						};
					} else if (Args['b2'].style == `${Args.user == 0 ? 'SUCCESS' : "DANGER"}` && Args['c2'].style == `${Args.user == 0 ? 'SUCCESS' : "DANGER"}` && Args['a2'].disabled != true) {
						Args['a2'] = {
							style: `${Args.user == 0 ? 'SUCCESS' : "DANGER"}`,
							emoji: `${Args.user == 0 ? o_emoji : x_emoji}`,
							disabled: true
						};
					} else if (Args['a3'].style == `${Args.user == 0 ? 'SUCCESS' : "DANGER"}` && Args['c3'].style == `${Args.user == 0 ? 'SUCCESS' : "DANGER"}` && Args['b3'].disabled != true) {
						Args['b3'] = {
							style: `${Args.user == 0 ? 'SUCCESS' : "DANGER"}`,
							emoji: `${Args.user == 0 ? o_emoji : x_emoji}`,
							disabled: true
						};
					} else if (Args['a3'].style == `${Args.user == 0 ? 'SUCCESS' : "DANGER"}` && Args['b3'].style == `${Args.user == 0 ? 'SUCCESS' : "DANGER"}` && Args['c3'].disabled != true) {
						Args['c3'] = {
							style: `${Args.user == 0 ? 'SUCCESS' : "DANGER"}`,
							emoji: `${Args.user == 0 ? o_emoji : x_emoji}`,
							disabled: true
						};
					} else if (Args['b3'].style == `${Args.user == 0 ? 'SUCCESS' : "DANGER"}` && Args['c3'].style == `${Args.user == 0 ? 'SUCCESS' : "DANGER"}` && Args['a3'].disabled != true) {
						Args['a3'] = {
							style: `${Args.user == 0 ? 'SUCCESS' : "DANGER"}`,
							emoji: `${Args.user == 0 ? o_emoji : x_emoji}`,
							disabled: true
						};
					} else if (Args['a1'].style == `${Args.user == 0 ? 'SUCCESS' : "DANGER"}` && Args['c3'].style == `${Args.user == 0 ? 'SUCCESS' : "DANGER"}` && Args['b2'].disabled != true) {
						Args['b2'] = {
							style: `${Args.user == 0 ? 'SUCCESS' : "DANGER"}`,
							emoji: `${Args.user == 0 ? o_emoji : x_emoji}`,
							disabled: true
						};
					} else if (Args['a1'].style == `${Args.user == 0 ? 'SUCCESS' : "DANGER"}` && Args['b2'].style == `${Args.user == 0 ? 'SUCCESS' : "DANGER"}` && Args['c3'].disabled != true) {
						Args['c3'] = {
							style: `${Args.user == 0 ? 'SUCCESS' : "DANGER"}`,
							emoji: `${Args.user == 0 ? o_emoji : x_emoji}`,
							disabled: true
						};
					} else if (Args['b2'].style == `${Args.user == 0 ? 'SUCCESS' : "DANGER"}` && Args['c3'].style == `${Args.user == 0 ? 'SUCCESS' : "DANGER"}` && Args['a1'].disabled != true) {
						Args['a1'] = {
							style: `${Args.user == 0 ? 'SUCCESS' : "DANGER"}`,
							emoji: `${Args.user == 0 ? o_emoji : x_emoji}`,
							disabled: true
						};
					} else if (Args['c1'].style == `${Args.user == 0 ? 'SUCCESS' : "DANGER"}` && Args['a3'].style == `${Args.user == 0 ? 'SUCCESS' : "DANGER"}` && Args['b2'].disabled != true) {
						Args['b2'] = {
							style: `${Args.user == 0 ? 'SUCCESS' : "DANGER"}`,
							emoji: `${Args.user == 0 ? o_emoji : x_emoji}`,
							disabled: true
						};
					} else if (Args['c1'].style == `${Args.user == 0 ? 'SUCCESS' : "DANGER"}` && Args['b2'].style == `${Args.user == 0 ? 'SUCCESS' : "DANGER"}` && Args['a3'].disabled != true) {
						Args['a3'] = {
							style: `${Args.user == 0 ? 'SUCCESS' : "DANGER"}`,
							emoji: `${Args.user == 0 ? o_emoji : x_emoji}`,
							disabled: true
						};
					} else if (Args['b2'].style == `${Args.user == 0 ? 'SUCCESS' : "DANGER"}` && Args['a3'].style == `${Args.user == 0 ? 'SUCCESS' : "DANGER"}` && Args['c1'].disabled != true) {
						Args['c1'] = {
							style: `${Args.user == 0 ? 'SUCCESS' : "DANGER"}`,
							emoji: `${Args.user == 0 ? o_emoji : x_emoji}`,
							disabled: true
						};
					}
					////////////////////////////////////////////////////////////////////////to defend///////////////////////////////////
					else if (Args['a1'].style == `${Args.user == 0 ? 'DANGER' : "SUCCESS"}` && Args['a3'].style == `${Args.user == 0 ? 'DANGER' : "SUCCESS"}` && Args['a2'].disabled != true) {
						Args['a2'] = {
							style: `${Args.user == 0 ? 'SUCCESS' : "DANGER"}`,
							emoji: `${Args.user == 0 ? o_emoji : x_emoji}`,
							disabled: true
						};
					} else if (Args['a1'].style == `${Args.user == 0 ? 'DANGER' : "SUCCESS"}` && Args['a2'].style == `${Args.user == 0 ? 'DANGER' : "SUCCESS"}` && Args['a3'].disabled != true) {
						Args['a3'] = {
							style: `${Args.user == 0 ? 'SUCCESS' : "DANGER"}`,
							emoji: `${Args.user == 0 ? o_emoji : x_emoji}`,
							disabled: true
						};
					} else if (Args['a3'].style == `${Args.user == 0 ? 'DANGER' : "SUCCESS"}` && Args['a2'].style == `${Args.user == 0 ? 'DANGER' : "SUCCESS"}` && Args['a1'].disabled != true) {
						Args['a1'] = {
							style: `${Args.user == 0 ? 'SUCCESS' : "DANGER"}`,
							emoji: `${Args.user == 0 ? o_emoji : x_emoji}`,
							disabled: true
						};
					} else if (Args['b1'].style == `${Args.user == 0 ? 'DANGER' : "SUCCESS"}` && Args['b3'].style == `${Args.user == 0 ? 'DANGER' : "SUCCESS"}` && Args['b2'].disabled != true) {
						Args['b2'] = {
							style: `${Args.user == 0 ? 'SUCCESS' : "DANGER"}`,
							emoji: `${Args.user == 0 ? o_emoji : x_emoji}`,
							disabled: true
						};
					} else if (Args['b1'].style == `${Args.user == 0 ? 'DANGER' : "SUCCESS"}` && Args['b2'].style == `${Args.user == 0 ? 'DANGER' : "SUCCESS"}` && Args['b3'].disabled != true) {
						Args['b3'] = {
							style: `${Args.user == 0 ? 'SUCCESS' : "DANGER"}`,
							emoji: `${Args.user == 0 ? o_emoji : x_emoji}`,
							disabled: true
						};
					} else if (Args['b3'].style == `${Args.user == 0 ? 'DANGER' : "SUCCESS"}` && Args['b2'].style == `${Args.user == 0 ? 'DANGER' : "SUCCESS"}` && Args['b1'].disabled != true) {
						Args['b1'] = {
							style: `${Args.user == 0 ? 'SUCCESS' : "DANGER"}`,
							emoji: `${Args.user == 0 ? o_emoji : x_emoji}`,
							disabled: true
						};
					} else if (Args['c1'].style == `${Args.user == 0 ? 'DANGER' : "SUCCESS"}` && Args['c3'].style == `${Args.user == 0 ? 'DANGER' : "SUCCESS"}` && Args['c2'].disabled != true) {
						Args['c2'] = {
							style: `${Args.user == 0 ? 'SUCCESS' : "DANGER"}`,
							emoji: `${Args.user == 0 ? o_emoji : x_emoji}`,
							disabled: true
						};
					} else if (Args['c1'].style == `${Args.user == 0 ? 'DANGER' : "SUCCESS"}` && Args['c2'].style == `${Args.user == 0 ? 'DANGER' : "SUCCESS"}` && Args['c3'].disabled != true) {
						Args['c3'] = {
							style: `${Args.user == 0 ? 'SUCCESS' : "DANGER"}`,
							emoji: `${Args.user == 0 ? o_emoji : x_emoji}`,
							disabled: true
						};
					} else if (Args['c3'].style == `${Args.user == 0 ? 'DANGER' : "SUCCESS"}` && Args['c2'].style == `${Args.user == 0 ? 'DANGER' : "SUCCESS"}` && Args['c1'].disabled != true) {
						Args['c1'] = {
							style: `${Args.user == 0 ? 'SUCCESS' : "DANGER"}`,
							emoji: `${Args.user == 0 ? o_emoji : x_emoji}`,
							disabled: true
						};
					} else if (Args['a1'].style == `${Args.user == 0 ? 'DANGER' : "SUCCESS"}` && Args['c1'].style == `${Args.user == 0 ? 'DANGER' : "SUCCESS"}` && Args['b1'].disabled != true) {
						Args['b1'] = {
							style: `${Args.user == 0 ? 'SUCCESS' : "DANGER"}`,
							emoji: `${Args.user == 0 ? o_emoji : x_emoji}`,
							disabled: true
						};
					} else if (Args['a1'].style == `${Args.user == 0 ? 'DANGER' : "SUCCESS"}` && Args['b1'].style == `${Args.user == 0 ? 'DANGER' : "SUCCESS"}` && Args['c1'].disabled != true) {
						Args['c1'] = {
							style: `${Args.user == 0 ? 'SUCCESS' : "DANGER"}`,
							emoji: `${Args.user == 0 ? o_emoji : x_emoji}`,
							disabled: true
						};
					} else if (Args['b1'].style == `${Args.user == 0 ? 'DANGER' : "SUCCESS"}` && Args['c1'].style == `${Args.user == 0 ? 'DANGER' : "SUCCESS"}` && Args['a1'].disabled != true) {
						Args['a1'] = {
							style: `${Args.user == 0 ? 'SUCCESS' : "DANGER"}`,
							emoji: `${Args.user == 0 ? o_emoji : x_emoji}`,
							disabled: true
						};
					} else if (Args['a2'].style == `${Args.user == 0 ? 'DANGER' : "SUCCESS"}` && Args['c2'].style == `${Args.user == 0 ? 'DANGER' : "SUCCESS"}` && Args['b2'].disabled != true) {
						Args['b2'] = {
							style: `${Args.user == 0 ? 'SUCCESS' : "DANGER"}`,
							emoji: `${Args.user == 0 ? o_emoji : x_emoji}`,
							disabled: true
						};
					} else if (Args['a2'].style == `${Args.user == 0 ? 'DANGER' : "SUCCESS"}` && Args['b2'].style == `${Args.user == 0 ? 'DANGER' : "SUCCESS"}` && Args['c2'].disabled != true) {
						Args['c2'] = {
							style: `${Args.user == 0 ? 'SUCCESS' : "DANGER"}`,
							emoji: `${Args.user == 0 ? o_emoji : x_emoji}`,
							disabled: true
						};
					} else if (Args['b2'].style == `${Args.user == 0 ? 'DANGER' : "SUCCESS"}` && Args['c2'].style == `${Args.user == 0 ? 'DANGER' : "SUCCESS"}` && Args['a2'].disabled != true) {
						Args['a2'] = {
							style: `${Args.user == 0 ? 'SUCCESS' : "DANGER"}`,
							emoji: `${Args.user == 0 ? o_emoji : x_emoji}`,
							disabled: true
						};
					} else if (Args['a3'].style == `${Args.user == 0 ? 'DANGER' : "SUCCESS"}` && Args['c3'].style == `${Args.user == 0 ? 'DANGER' : "SUCCESS"}` && Args['b3'].disabled != true) {
						Args['b3'] = {
							style: `${Args.user == 0 ? 'SUCCESS' : "DANGER"}`,
							emoji: `${Args.user == 0 ? o_emoji : x_emoji}`,
							disabled: true
						};
					} else if (Args['a3'].style == `${Args.user == 0 ? 'DANGER' : "SUCCESS"}` && Args['b3'].style == `${Args.user == 0 ? 'DANGER' : "SUCCESS"}` && Args['c3'].disabled != true) {
						Args['c3'] = {
							style: `${Args.user == 0 ? 'SUCCESS' : "DANGER"}`,
							emoji: `${Args.user == 0 ? o_emoji : x_emoji}`,
							disabled: true
						};
					} else if (Args['b3'].style == `${Args.user == 0 ? 'DANGER' : "SUCCESS"}` && Args['c3'].style == `${Args.user == 0 ? 'DANGER' : "SUCCESS"}` && Args['a3'].disabled != true) {
						Args['a3'] = {
							style: `${Args.user == 0 ? 'SUCCESS' : "DANGER"}`,
							emoji: `${Args.user == 0 ? o_emoji : x_emoji}`,
							disabled: true
						};
					} else if (Args['a1'].style == `${Args.user == 0 ? 'DANGER' : "SUCCESS"}` && Args['c3'].style == `${Args.user == 0 ? 'DANGER' : "SUCCESS"}` && Args['b2'].disabled != true) {
						Args['b2'] = {
							style: `${Args.user == 0 ? 'SUCCESS' : "DANGER"}`,
							emoji: `${Args.user == 0 ? o_emoji : x_emoji}`,
							disabled: true
						};
					} else if (Args['a1'].style == `${Args.user == 0 ? 'DANGER' : "SUCCESS"}` && Args['b2'].style == `${Args.user == 0 ? 'DANGER' : "SUCCESS"}` && Args['c3'].disabled != true) {
						Args['c3'] = {
							style: `${Args.user == 0 ? 'SUCCESS' : "DANGER"}`,
							emoji: `${Args.user == 0 ? o_emoji : x_emoji}`,
							disabled: true
						};
					} else if (Args['b2'].style == `${Args.user == 0 ? 'DANGER' : "SUCCESS"}` && Args['c3'].style == `${Args.user == 0 ? 'DANGER' : "SUCCESS"}` && Args['a1'].disabled != true) {
						Args['a1'] = {
							style: `${Args.user == 0 ? 'SUCCESS' : "DANGER"}`,
							emoji: `${Args.user == 0 ? o_emoji : x_emoji}`,
							disabled: true
						};
					} else if (Args['c1'].style == `${Args.user == 0 ? 'DANGER' : "SUCCESS"}` && Args['a3'].style == `${Args.user == 0 ? 'DANGER' : "SUCCESS"}` && Args['b2'].disabled != true) {
						Args['b2'] = {
							style: `${Args.user == 0 ? 'SUCCESS' : "DANGER"}`,
							emoji: `${Args.user == 0 ? o_emoji : x_emoji}`,
							disabled: true
						};
					} else if (Args['c1'].style == `${Args.user == 0 ? 'DANGER' : "SUCCESS"}` && Args['b2'].style == `${Args.user == 0 ? 'DANGER' : "SUCCESS"}` && Args['a3'].disabled != true) {
						Args['a3'] = {
							style: `${Args.user == 0 ? 'SUCCESS' : "DANGER"}`,
							emoji: `${Args.user == 0 ? o_emoji : x_emoji}`,
							disabled: true
						};
					} else if (Args['b2'].style == `${Args.user == 0 ? 'DANGER' : "SUCCESS"}` && Args['a3'].style == `${Args.user == 0 ? 'DANGER' : "SUCCESS"}` && Args['c1'].disabled != true) {
						Args['c1'] = {
							style: `${Args.user == 0 ? 'SUCCESS' : "DANGER"}`,
							emoji: `${Args.user == 0 ? o_emoji : x_emoji}`,
							disabled: true
						};
					}
					else if (xax == 2 && yax == 0 && Args['a2'].disabled != true) {
						Args['a2'] = {
							style: `${Args.user == 0 ? 'SUCCESS' : "DANGER"}`,
							emoji: `${Args.user == 0 ? o_emoji : x_emoji}`,
							disabled: true
						};
					} else if (xax == 2 && yax == 1 && Args['b2'].disabled != true) {
						Args['b2'] = {
							style: `${Args.user == 0 ? 'SUCCESS' : "DANGER"}`,
							emoji: `${Args.user == 0 ? o_emoji : x_emoji}`,
							disabled: true
						};
					} else if (xax == 2 && yax == 2 && Args['c2'].disabled != true) {
						Args['c2'] = {
							style: `${Args.user == 0 ? 'SUCCESS' : "DANGER"}`,
							emoji: `${Args.user == 0 ? o_emoji : x_emoji}`,
							disabled: true
						};
					}
					else if (xax == 1 && yax == 0 && Args['b1'].disabled != true) {
						Args['b1'] = {
							style: `${Args.user == 0 ? 'SUCCESS' : "DANGER"}`,
							emoji: `${Args.user == 0 ? o_emoji : x_emoji}`,
							disabled: true
						};
					} else if (xax == 1 && yax == 1 && Args['a1'].disabled != true) {
						Args['a1'] = {
							style: `${Args.user == 0 ? 'SUCCESS' : "DANGER"}`,
							emoji: `${Args.user == 0 ? o_emoji : x_emoji}`,
							disabled: true
						};
					} else if (xax == 1 && yax == 2 && Args['c1'].disabled != true) {
						Args['c1'] = {
							style: `${Args.user == 0 ? 'SUCCESS' : "DANGER"}`,
							emoji: `${Args.user == 0 ? o_emoji : x_emoji}`,
							disabled: true
						};
					}
					else if (xax == 0 && yax == 0 && Args['c3'].disabled != true) {
						Args['c3'] = {
							style: `${Args.user == 0 ? 'SUCCESS' : "DANGER"}`,
							emoji: `${Args.user == 0 ? o_emoji : x_emoji}`,
							disabled: true
						};
					} else if (xax == 0 && yax == 1 && Args['a3'].disabled != true) {
						Args['a3'] = {
							style: `${Args.user == 0 ? 'SUCCESS' : "DANGER"}`,
							emoji: `${Args.user == 0 ? o_emoji : x_emoji}`,
							disabled: true
						};
					} else if (xax == 0 && yax == 2 && Args['b3'].disabled != true) {
						Args['b3'] = {
							style: `${Args.user == 0 ? 'SUCCESS' : "DANGER"}`,
							emoji: `${Args.user == 0 ? o_emoji : x_emoji}`,
							disabled: true
						};
					}

					else if (Args['b2'].disabled != true) {

						Args['b2'] = {
							style: `${Args.user == 0 ? 'SUCCESS' : "DANGER"}`,
							emoji: `${Args.user == 0 ? o_emoji : x_emoji}`,
							disabled: true
						};
					} else if (Args['a1'].disabled != true) {
						Args['a1'] = {
							style: `${Args.user == 0 ? 'SUCCESS' : "DANGER"}`,
							emoji: `${Args.user == 0 ? o_emoji : x_emoji}`,
							disabled: true
						};
					} else if (Args['a3'].disabled != true) {
						Args['a3'] = {
							style: `${Args.user == 0 ? 'SUCCESS' : "DANGER"}`,
							emoji: `${Args.user == 0 ? o_emoji : x_emoji}`,
							disabled: true
						};
					} else if (Args['c1'].disabled != true) {
						Args['c1'] = {
							style: `${Args.user == 0 ? 'SUCCESS' : "DANGER"}`,
							emoji: `${Args.user == 0 ? o_emoji : x_emoji}`,
							disabled: true
						};
					} else if (Args['c3'].disabled != true) {
						Args['c3'] = {
							style: `${Args.user == 0 ? 'SUCCESS' : "DANGER"}`,
							emoji: `${Args.user == 0 ? o_emoji : x_emoji}`,
							disabled: true
						};
					} else if (Args['b3'].disabled != true) {
						Args['b3'] = {
							style: `${Args.user == 0 ? 'SUCCESS' : "DANGER"}`,
							emoji: `${Args.user == 0 ? o_emoji : x_emoji}`,
							disabled: true
						};
					} else if (Args['a2'].disabled != true) {
						Args['a2'] = {
							style: `${Args.user == 0 ? 'SUCCESS' : "DANGER"}`,
							emoji: `${Args.user == 0 ? o_emoji : x_emoji}`,
							disabled: true
						};
					} else if (Args['c2'].disabled != true) {
						Args['c2'] = {
							style: `${Args.user == 0 ? 'SUCCESS' : "DANGER"}`,
							emoji: `${Args.user == 0 ? o_emoji : x_emoji}`,
							disabled: true
						};
					} else if (Args['b1'].disabled != true) {
						Args['b1'] = {
							style: `${Args.user == 0 ? 'SUCCESS' : "DANGER"}`,
							emoji: `${Args.user == 0 ? o_emoji : x_emoji}`,
							disabled: true
						};
					}
					const map = (obj, fun) =>
						Object.entries(obj).reduce(
							(prev, [key, value]) => ({
								...prev,
								[key]: fun(key, value)
							}),
							{}
						);
					const objectFilter = (obj, predicate) =>
						Object.keys(obj)
							.filter((key) => predicate(obj[key]))
							.reduce((res, key) => ((res[key] = obj[key]), res), {});
					let Brgs = objectFilter(
						map(Args, (_, fruit) => fruit.emoji == dashmoji),
						(num) => num == true
					);
					let won = {
						"<:O_:863314110560993340>": false,
						"<:X_:863314044781723668>": false
					};
					if (Object.keys(Brgs).length == 0) {

						if (
							Args.a1.emoji == o_emoji &&
							Args.b1.emoji == o_emoji &&
							Args.c1.emoji == o_emoji
						)
							won["<:O_:863314110560993340>"] = true;
						if (
							Args.a2.emoji == o_emoji &&
							Args.b2.emoji == o_emoji &&
							Args.c2.emoji == o_emoji
						)
							won["<:O_:863314110560993340>"] = true;
						if (
							Args.a3.emoji == o_emoji &&
							Args.b3.emoji == o_emoji &&
							Args.c3.emoji == o_emoji
						)
							won["<:O_:863314110560993340>"] = true;
						if (
							Args.a1.emoji == o_emoji &&
							Args.b2.emoji == o_emoji &&
							Args.c3.emoji == o_emoji
						)
							won["<:O_:863314110560993340>"] = true;
						if (
							Args.a3.emoji == o_emoji &&
							Args.b2.emoji == o_emoji &&
							Args.c1.emoji == o_emoji
						)
							won["<:O_:863314110560993340>"] = true;
						if (
							Args.a1.emoji == o_emoji &&
							Args.a2.emoji == o_emoji &&
							Args.a3.emoji == o_emoji
						)
							won["<:O_:863314110560993340>"] = true;
						if (
							Args.b1.emoji == o_emoji &&
							Args.b2.emoji == o_emoji &&
							Args.b3.emoji == o_emoji
						)
							won["<:O_:863314110560993340>"] = true;
						if (
							Args.c1.emoji == o_emoji &&
							Args.c2.emoji == o_emoji &&
							Args.c3.emoji == o_emoji
						)
							won["<:O_:863314110560993340>"] = true;
						let a1 = new MessageButton()
							.setLabel('\u200B')
							.setStyle(Args.a1.style)
							.setEmoji(Args.a1.emoji)
							.setCustomId("a1")
							.setDisabled(Args.a1.disabled);
						let a2 = new MessageButton()
							.setLabel('\u200B')
							.setStyle(Args.a2.style)
							.setEmoji(Args.a2.emoji)
							.setCustomId("a2")
							.setDisabled(Args.a2.disabled);
						let a3 = new MessageButton()
							.setLabel('\u200B')
							.setStyle(Args.a3.style)
							.setEmoji(Args.a3.emoji)
							.setCustomId("a3")
							.setDisabled(Args.a3.disabled);
						let b1 = new MessageButton()
							.setLabel('\u200B')
							.setStyle(Args.b1.style)
							.setEmoji(Args.b1.emoji)
							.setCustomId("b1")
							.setDisabled(Args.b1.disabled);

						let b2 = new MessageButton()
							.setLabel('\u200B')
							.setStyle(Args.b2.style)
							.setEmoji(Args.b2.emoji)
							.setCustomId("b2")
							.setDisabled(Args.b2.disabled);
						let b3 = new MessageButton()
							.setLabel('\u200B')
							.setStyle(Args.b3.style)
							.setEmoji(Args.b3.emoji)
							.setCustomId("b3")
							.setDisabled(Args.b3.disabled);
						let c1 = new MessageButton()
							.setLabel('\u200B')
							.setStyle(Args.c1.style)
							.setEmoji(Args.c1.emoji)
							.setCustomId("c1")
							.setDisabled(Args.c1.disabled);
						let c2 = new MessageButton()
							.setLabel('\u200B')
							.setStyle(Args.c2.style)
							.setEmoji(Args.c2.emoji)
							.setCustomId("c2")
							.setDisabled(Args.c2.disabled);
						let c3 = new MessageButton()
							.setLabel('\u200B')
							.setStyle(Args.c3.style)
							.setEmoji(Args.c3.emoji)
							.setCustomId("c3")
							.setDisabled(Args.c3.disabled);
						let a = new MessageActionRow().addComponents([a1, a2, a3]);
						let b = new MessageActionRow().addComponents([b1, b2, b3]);
						let c = new MessageActionRow().addComponents([c1, c2, c3]);
						let buttons = { components: [a, b, c] };
						const xoemb5 = new MessageEmbed()
							.setTitle('<:TicTacToe:914610939729436704> Tic Tac Toe')
							.setDescription(
								`Round over`

							)
							.addFields(

								{
									name: `${Args.user == 0 ? "<:O_:903275756149411870>" : "<:x_:903270400748843079>"
										} | ${Args.userid == interaction.user.id ? `${interaction.user.username}` : `Coco Arcade`
										}`
									, value: '<a:CuteDance:887371032992841738> Draw!', inline: true
								},
								{
									name: `${Args.user == 1 ? "<:O_:903275756149411870>" : "<:x_:903270400748843079>"
										} | ${Args.userid == interaction.user.id ? `Coco Arcade` : `${interaction.user.username}`
										}`, value: '<a:CuteDance2:887371033118650418> Draw!', inline: true
								},
							)
							.setColor('#36393F')
							;
						if (won["<:O_:863314110560993340>"] == true) return tictactoe(m);
						else if (won["<:X_:863314044781723668>"] == true) return;
						else {
							drawst = 1;
							collector.stop();
							return m.edit({ content: `It's a tie!`, components: [a, b, c], embeds: [xoemb5] });

						}
					}

					await wait(8000);

					if (Args.user == 0) {
						Args.user = 1;
					} else {
						Args.user = 0;
					}
					tictactoe(m);
				}






				//msg = await interaction.fetchReply();
				//msg.awaitMessageComponent({ filter, componentType: 'BUTTON',max: 1,  time: 10000 })
				//	.catch(err => interaction.followUp({ content: `<@!${Args.userid}> It's your turn!` })
				//	);

			}

			const collector = m.createMessageComponentCollector({
				componentType: "BUTTON",

				time: 180000
			});

			collector.on("collect", (b) => {
				if (b.user.id !== Args.userid) {
					b.reply({
						content: "You cant play now",
						ephemeral: true
					});


				} else {
					if (Args.user == 0) {
						Args.user = 1;
						Args[b.customId] = {
							style: "SUCCESS",
							emoji: o_emoji,
							disabled: true
						};






					} else {
						Args.user = 0;
						Args[b.customId] = {
							style: "DANGER",
							emoji: x_emoji,
							disabled: true
						}
					}
					b.deferUpdate();
					const map = (obj, fun) =>
						Object.entries(obj).reduce(
							(prev, [key, value]) => ({
								...prev,
								[key]: fun(key, value)
							}),
							{}
						);
					const objectFilter = (obj, predicate) =>
						Object.keys(obj)
							.filter((key) => predicate(obj[key]))
							.reduce((res, key) => ((res[key] = obj[key]), res), {});
					let Brgs = objectFilter(
						map(Args, (_, fruit) => fruit.emoji == dashmoji),
						(num) => num == true
					);
					let won = {
						"<:O_:863314110560993340>": false,
						"<:X_:863314044781723668>": false
					};
					if (Object.keys(Brgs).length == 0) {

						if (
							Args.a1.emoji == o_emoji &&
							Args.b1.emoji == o_emoji &&
							Args.c1.emoji == o_emoji
						)
							won["<:O_:863314110560993340>"] = true;
						if (
							Args.a2.emoji == o_emoji &&
							Args.b2.emoji == o_emoji &&
							Args.c2.emoji == o_emoji
						)
							won["<:O_:863314110560993340>"] = true;
						if (
							Args.a3.emoji == o_emoji &&
							Args.b3.emoji == o_emoji &&
							Args.c3.emoji == o_emoji
						)
							won["<:O_:863314110560993340>"] = true;
						if (
							Args.a1.emoji == o_emoji &&
							Args.b2.emoji == o_emoji &&
							Args.c3.emoji == o_emoji
						)
							won["<:O_:863314110560993340>"] = true;
						if (
							Args.a3.emoji == o_emoji &&
							Args.b2.emoji == o_emoji &&
							Args.c1.emoji == o_emoji
						)
							won["<:O_:863314110560993340>"] = true;
						if (
							Args.a1.emoji == o_emoji &&
							Args.a2.emoji == o_emoji &&
							Args.a3.emoji == o_emoji
						)
							won["<:O_:863314110560993340>"] = true;
						if (
							Args.b1.emoji == o_emoji &&
							Args.b2.emoji == o_emoji &&
							Args.b3.emoji == o_emoji
						)
							won["<:O_:863314110560993340>"] = true;
						if (
							Args.c1.emoji == o_emoji &&
							Args.c2.emoji == o_emoji &&
							Args.c3.emoji == o_emoji
						)
							won["<:O_:863314110560993340>"] = true;
						let a1 = new MessageButton()
							.setLabel('\u200B')
							.setStyle(Args.a1.style)
							.setEmoji(Args.a1.emoji)
							.setCustomId("a1")
							.setDisabled(Args.a1.disabled);
						let a2 = new MessageButton()
							.setLabel('\u200B')
							.setStyle(Args.a2.style)
							.setEmoji(Args.a2.emoji)
							.setCustomId("a2")
							.setDisabled(Args.a2.disabled);
						let a3 = new MessageButton()
							.setLabel('\u200B')
							.setStyle(Args.a3.style)
							.setEmoji(Args.a3.emoji)
							.setCustomId("a3")
							.setDisabled(Args.a3.disabled);
						let b1 = new MessageButton()
							.setLabel('\u200B')
							.setStyle(Args.b1.style)
							.setEmoji(Args.b1.emoji)
							.setCustomId("b1")
							.setDisabled(Args.b1.disabled);

						let b2 = new MessageButton()
							.setLabel('\u200B')
							.setStyle(Args.b2.style)
							.setEmoji(Args.b2.emoji)
							.setCustomId("b2")
							.setDisabled(Args.b2.disabled);
						let b3 = new MessageButton()
							.setLabel('\u200B')
							.setStyle(Args.b3.style)
							.setEmoji(Args.b3.emoji)
							.setCustomId("b3")
							.setDisabled(Args.b3.disabled);
						let c1 = new MessageButton()
							.setLabel('\u200B')
							.setStyle(Args.c1.style)
							.setEmoji(Args.c1.emoji)
							.setCustomId("c1")
							.setDisabled(Args.c1.disabled);
						let c2 = new MessageButton()
							.setLabel('\u200B')
							.setStyle(Args.c2.style)
							.setEmoji(Args.c2.emoji)
							.setCustomId("c2")
							.setDisabled(Args.c2.disabled);
						let c3 = new MessageButton()
							.setLabel('\u200B')
							.setStyle(Args.c3.style)
							.setEmoji(Args.c3.emoji)
							.setCustomId("c3")
							.setDisabled(Args.c3.disabled);
						let a = new MessageActionRow().addComponents([a1, a2, a3]);
						let b = new MessageActionRow().addComponents([b1, b2, b3]);
						let c = new MessageActionRow().addComponents([c1, c2, c3]);
						let buttons = { components: [a, b, c] };
						const xoemb5 = new MessageEmbed()
							.setTitle('<:TicTacToe:914610939729436704> Tic Tac Toe')
							.setDescription(
								`Round over`

							)
							.addFields(

								{
									name: `${Args.user == 0 ? "<:O_:903275756149411870>" : "<:x_:903270400748843079>"
										} | ${Args.userid == interaction.user.id ? `${interaction.user.username}` : `Coco Arcade`
										}`
									, value: '<a:CuteDance:887371032992841738> Draw!', inline: true
								},
								{
									name: `${Args.user == 1 ? "<:O_:903275756149411870>" : "<:x_:903270400748843079>"
										} | ${Args.userid == interaction.user.id ? `Coco Arcade` : `${interaction.user.username}`
										}`, value: '<a:CuteDance2:887371033118650418> Draw!', inline: true
								},
							)
							.setColor('#36393F')
							;
						if (won["<:O_:863314110560993340>"] == true) return tictactoe(m);
						else if (won["<:X_:863314044781723668>"] == true) return;
						else {
							drawst = 1;
							collector.stop();
							return m.edit({ content: `It's a tie!`, components: [a, b, c], embeds: [xoemb5] })

						}
					}
					tictactoe(m);
				}
			});
			let embed1 = new MessageEmbed()
				.setTitle(`:warning: Error`)
				.setColor('#FFFF00')
				.setDescription(
					"Sorry, you took too long to respond and the interaction expired."
				);

			collector.on("end", (collected, reason) => {
				if (reason == 'time' && collected.size < `${Args.user == 0 ? 5 : 4}` && (won["<:O_:863314110560993340>"] == false && won["<:X_:863314044781723668>"] == false) && drawst == 0) {

					m.edit({
						content: `<@!${Args.userid}> didn\'t react in time!`,
						components: [], embeds: [embed1]
					});
				} else {

				}
				//if (collected.size == 0)

				//m.edit({
				//	content: `<@!${Args.userid}> didn\'t react in time!`,
				//	components: [], embeds: [embed1]
				//});
			});





		}
		//////////////game without bot//////////////////////
		if (opponent && opponent.id != clientId) {
			//console.log(opponent);
			if (opponent.bot)
				return interaction.reply({
					content: "You cannot play against bot!",
					ephemeral: true
				});
			if (opponent.id == interaction.user.id)
				return interaction.reply({
					content: "You cannot play by yourself!",
					ephemeral: true
				});




			let accept = new MessageButton()
				.setLabel("Join")
				.setStyle("SUCCESS")
				.setCustomId("acceptttt");



			let accep = new MessageActionRow().addComponents([
				accept
			]);
			interaction.reply({
				content: `<@${opponent.id}> you've been invited to a round of Tic Tac Toe with ${interaction.user.username}.\nJoin in the next 3 minutes to start the game.`,

				components: [accep]
			});
			let m = await interaction.fetchReply();
			const collector = m.createMessageComponentCollector({
				type: "BUTTON",
				time: 180000
			});
			collector.on("collect", async (button) => {
				if (button.user.id !== opponent.id)
					return button.reply({
						content: "You cant play the game as they didnt call u to play.",
						ephemeral: true
					});

				if (button.customId == "acceptttt") {
					collector.stop();
					interaction.deleteReply();

					let fighters = [interaction.user.id, opponent.id].sort(() =>
						Math.random() > 0.5 ? 1 : -1
					);

					let x_emoji = '<:x_:903270400748843079>';
					let o_emoji = '<:O_:903275756149411870>';

					let dashmoji = "<:__:903004823446765608.>";

					let Args = {
						user: 0,
						a1: {
							style: "SECONDARY",
							emoji: dashmoji,
							disabled: false
						},
						a2: {
							style: "SECONDARY",
							emoji: dashmoji,
							disabled: false
						},
						a3: {
							style: "SECONDARY",
							emoji: dashmoji,
							disabled: false
						},
						b1: {
							style: "SECONDARY",
							emoji: dashmoji,
							disabled: false
						},
						b2: {
							style: "SECONDARY",
							emoji: dashmoji,
							disabled: false
						},
						b3: {
							style: "SECONDARY",
							emoji: dashmoji,
							disabled: false
						},
						c1: {
							style: "SECONDARY",
							emoji: dashmoji,
							disabled: false
						},
						c2: {
							style: "SECONDARY",
							emoji: dashmoji,
							disabled: false
						},
						c3: {
							style: "SECONDARY",
							emoji: dashmoji,
							disabled: false
						}
					};
					//const { MessageActionRow, MessageButton } = require("discord.js"); settings


					let em = "<:O_:903275756149411870>"
					let man = `<@!${Args.userid}>`
					const xoemb = new MessageEmbed()
						.setTitle('<:TicTacToe:914610939729436704> Tic Tac Toe')
						.setDescription(
							`Round in progress...\n>`
						)
						.setColor('#36393F')

						;

					let msg = await interaction.followUp({
						content: `Waiting for Input | <@!${Args.userid}>, Your Emoji: <:O_:903275756149411870>`, embeds: []
					});
					tictactoe(msg);


					async function tictactoe(m) {
						Args.userid = fighters[Args.user];
						let won = {
							"<:O_:863314110560993340>": false,
							"<:X_:863314044781723668>": false
						};
						if (
							Args.a1.emoji == o_emoji &&
							Args.b1.emoji == o_emoji &&
							Args.c1.emoji == o_emoji
						)
							won["<:O_:863314110560993340>"] = true;
						if (
							Args.a2.emoji == o_emoji &&
							Args.b2.emoji == o_emoji &&
							Args.c2.emoji == o_emoji
						)
							won["<:O_:863314110560993340>"] = true;
						if (
							Args.a3.emoji == o_emoji &&
							Args.b3.emoji == o_emoji &&
							Args.c3.emoji == o_emoji
						)
							won["<:O_:863314110560993340>"] = true;
						if (
							Args.a1.emoji == o_emoji &&
							Args.b2.emoji == o_emoji &&
							Args.c3.emoji == o_emoji
						)
							won["<:O_:863314110560993340>"] = true;
						if (
							Args.a3.emoji == o_emoji &&
							Args.b2.emoji == o_emoji &&
							Args.c1.emoji == o_emoji
						)
							won["<:O_:863314110560993340>"] = true;
						if (
							Args.a1.emoji == o_emoji &&
							Args.a2.emoji == o_emoji &&
							Args.a3.emoji == o_emoji
						)
							won["<:O_:863314110560993340>"] = true;
						if (
							Args.b1.emoji == o_emoji &&
							Args.b2.emoji == o_emoji &&
							Args.b3.emoji == o_emoji
						)
							won["<:O_:863314110560993340>"] = true;
						if (
							Args.c1.emoji == o_emoji &&
							Args.c2.emoji == o_emoji &&
							Args.c3.emoji == o_emoji
						)
							won["<:O_:863314110560993340>"] = true;

						if (won["<:O_:863314110560993340>"] != false) {
							let foot = '🎉 Winner                                             Defeated'
							let a1 = new MessageButton()
								.setLabel('\u200B')
								.setStyle(Args.a1.style)
								.setEmoji(Args.a1.emoji)
								.setCustomId("a1")
								.setDisabled(true);
							let a2 = new MessageButton()
								.setLabel('\u200B')
								.setStyle(Args.a2.style)
								.setEmoji(Args.a2.emoji)
								.setCustomId("a2")
								.setDisabled(true);
							let a3 = new MessageButton()
								.setLabel('\u200B')
								.setStyle(Args.a3.style)
								.setEmoji(Args.a3.emoji)
								.setCustomId("a3")
								.setDisabled(true);
							let b1 = new MessageButton()
								.setLabel('\u200B')
								.setStyle(Args.b1.style)
								.setEmoji(Args.b1.emoji)
								.setCustomId("b1")
								.setDisabled(true);
							let b2 = new MessageButton()
								.setLabel('\u200B')
								.setStyle(Args.b2.style)
								.setEmoji(Args.b2.emoji)
								.setCustomId("b2")
								.setDisabled(true);
							let b3 = new MessageButton()
								.setLabel('\u200B')
								.setStyle(Args.b3.style)
								.setEmoji(Args.b3.emoji)
								.setCustomId("b3")
								.setDisabled(true);
							let c1 = new MessageButton()
								.setLabel('\u200B')
								.setStyle(Args.c1.style)
								.setEmoji(Args.c1.emoji)
								.setCustomId("c1")
								.setDisabled(true);
							let c2 = new MessageButton()
								.setLabel('\u200B')
								.setStyle(Args.c2.style)
								.setEmoji(Args.c2.emoji)
								.setCustomId("c2")
								.setDisabled(true);
							let c3 = new MessageButton()
								.setLabel('\u200B')
								.setStyle(Args.c3.style)
								.setEmoji(Args.c3.emoji)
								.setCustomId("c3")
								.setDisabled(true);
							let a = new MessageActionRow().addComponents([a1, a2, a3]);
							let b = new MessageActionRow().addComponents([b1, b2, b3]);
							let c = new MessageActionRow().addComponents([c1, c2, c3]);
							let buttons = { components: [a, b, c] };
							const xoemb3 = new MessageEmbed()
								.setTitle('<:TicTacToe:914610939729436704> Tic Tac Toe')
								.setDescription(
									`Round over`

								)
								.addFields(

									{
										name: `<:O_:903275756149411870> | ${fighters[1] == interaction.user.id ? `${interaction.user.username}` : `${opponent.username}`
											}`, value: '<a:BunnyParty:901944552317919232> Winner', inline: true
									},
									{
										name: `<:x_:903270400748843079> | ${fighters[0] == interaction.user.id ? `${interaction.user.username}` : `${opponent.username}`
											}`, value: '<a:BearCry:886730332076924978> Defeated', inline: true
									},
								)
								.setColor('#36393F')
								;
							//#231F20
							const xoemb4 = new MessageEmbed()
								.setTitle('<:TicTacToe:914610939729436704> Tic Tac Toe')
								.setDescription(
									`Round over`

								)
								.addFields(

									{
										name: `<:O_:903275756149411870> | ${fighters[0] == interaction.user.id ? `${interaction.user.username}` : `${opponent.username}`
											}`, value: '<a:BunnyParty:901944552317919232> Winner', inline: true
									},
									{
										name: `<:x_:903270400748843079> | ${fighters[1] == interaction.user.id ? `${interaction.user.username}` : `${opponent.username}`
											}`, value: '<a:BearCry:886730332076924978> Defeated', inline: true
									},
								)
								.setColor('#36393F')
								;
							if (Args.user == 0) {
								const tagi1 = await Tags.findOne({ where: { id: fighters[1] } });
								if (tagi1) {
									if (party_limit == 0) {
										tagi1.increment({ 'partygamescore': 10 });
									} else {
										temppartycheck = tagi1.get('partygamescorewlim');
										if (temppartycheck <= party_limit_value) {
											tagi1.increment({ 'partygamescore': 10 });
											tagi1.increment({ 'partygamescorewlim': 10 });

										}
									}
								}
								return m.edit({
									content: `<@!${fighters[1]}> <:O_:903275756149411870> won.. `, embeds: [xoemb3], components: [a, b, c]
								});
							}
							else if (Args.user == 1) {
								const tagi1 = await Tags.findOne({ where: { id: fighters[0] } });
								if (tagi1) {
									if (party_limit == 0) {
										tagi1.increment({ 'partygamescore': 10 });
									} else {
										temppartycheck = tagi1.get('partygamescorewlim');
										if (temppartycheck <= party_limit_value) {
											tagi1.increment({ 'partygamescore': 10 });
											tagi1.increment({ 'partygamescorewlim': 10 });

										}
									}
								}
								return m.edit({
									content: `<@!${fighters[0]}> <:O_:903275756149411870> won.. `, embeds: [xoemb4], components: [a, b, c]
								});
							}
						}
						if (
							Args.a1.emoji == x_emoji &&
							Args.b1.emoji == x_emoji &&
							Args.c1.emoji == x_emoji
						)
							won["<:X_:863314044781723668>"] = true;
						if (
							Args.a2.emoji == x_emoji &&
							Args.b2.emoji == x_emoji &&
							Args.c2.emoji == x_emoji
						)
							won["<:X_:863314044781723668>"] = true;
						if (
							Args.a3.emoji == x_emoji &&
							Args.b3.emoji == x_emoji &&
							Args.c3.emoji == x_emoji
						)
							won["<:X_:863314044781723668>"] = true;
						if (
							Args.a1.emoji == x_emoji &&
							Args.b2.emoji == x_emoji &&
							Args.c3.emoji == x_emoji
						)
							won["<:X_:863314044781723668>"] = true;
						if (
							Args.a3.emoji == x_emoji &&
							Args.b2.emoji == x_emoji &&
							Args.c1.emoji == x_emoji
						)
							won["<:X_:863314044781723668>"] = true;
						if (
							Args.a1.emoji == x_emoji &&
							Args.a2.emoji == x_emoji &&
							Args.a3.emoji == x_emoji
						)
							won["<:X_:863314044781723668>"] = true;
						if (
							Args.b1.emoji == x_emoji &&
							Args.b2.emoji == x_emoji &&
							Args.b3.emoji == x_emoji
						)
							won["<:X_:863314044781723668>"] = true;
						if (
							Args.c1.emoji == x_emoji &&
							Args.c2.emoji == x_emoji &&
							Args.c3.emoji == x_emoji
						)
							won["<:X_:863314044781723668>"] = true;
						if (won["<:X_:863314044781723668>"] != false) {
							let foot = '🎉 Winner                                             Defeated'
							let a1 = new MessageButton()
								.setLabel('\u200B')
								.setStyle(Args.a1.style)
								.setEmoji(Args.a1.emoji)
								.setCustomId("a1")
								.setDisabled(true);
							let a2 = new MessageButton()
								.setLabel('\u200B')
								.setStyle(Args.a2.style)
								.setEmoji(Args.a2.emoji)
								.setCustomId("a2")
								.setDisabled(true);
							let a3 = new MessageButton()
								.setLabel('\u200B')
								.setStyle(Args.a3.style)
								.setEmoji(Args.a3.emoji)
								.setCustomId("a3")
								.setDisabled(true);
							let b1 = new MessageButton()
								.setLabel('\u200B')
								.setStyle(Args.b1.style)
								.setEmoji(Args.b1.emoji)
								.setCustomId("b1")
								.setDisabled(true);
							let b2 = new MessageButton()
								.setLabel('\u200B')
								.setStyle(Args.b2.style)
								.setEmoji(Args.b2.emoji)
								.setCustomId("b2")
								.setDisabled(true);
							let b3 = new MessageButton()
								.setLabel('\u200B')
								.setStyle(Args.b3.style)
								.setEmoji(Args.b3.emoji)
								.setCustomId("b3")
								.setDisabled(true);
							let c1 = new MessageButton()
								.setLabel('\u200B')
								.setStyle(Args.c1.style)
								.setEmoji(Args.c1.emoji)
								.setCustomId("c1")
								.setDisabled(true);
							let c2 = new MessageButton()
								.setLabel('\u200B')
								.setStyle(Args.c2.style)
								.setEmoji(Args.c2.emoji)
								.setCustomId("c2")
								.setDisabled(true);
							let c3 = new MessageButton()
								.setLabel('\u200B')
								.setStyle(Args.c3.style)
								.setEmoji(Args.c3.emoji)
								.setCustomId("c3")
								.setDisabled(true);
							let a = new MessageActionRow().addComponents([a1, a2, a3]);
							let b = new MessageActionRow().addComponents([b1, b2, b3]);
							let c = new MessageActionRow().addComponents([c1, c2, c3]);
							let buttons = { components: [a, b, c] };

							const xoemb1 = new MessageEmbed()
								.setTitle('<:TicTacToe:914610939729436704> Tic Tac Toe')
								.setDescription(
									`Round over`

								)
								.addFields(

									{
										name: `<:x_:903270400748843079> | ${fighters[1] == interaction.user.id ? `${interaction.user.username}` : `${opponent.username}`
											}`, value: '<a:BunnyParty:901944552317919232> Winner', inline: true
									},
									{
										name: `<:O_:903275756149411870> | ${fighters[0] == interaction.user.id ? `${interaction.user.username}` : `${opponent.username}`
											}`, value: '<a:BearCry:886730332076924978> Defeated', inline: true
									},
								)
								.setColor('#36393F')
								;
							const xoemb2 = new MessageEmbed()
								.setTitle('<:TicTacToe:914610939729436704> Tic Tac Toe')
								.setDescription(
									`Round over`

								)
								.addFields(

									{
										name: `<:x_:903270400748843079> | ${fighters[0] == interaction.user.id ? `${interaction.user.username}` : `${opponent.username}`
											}`, value: '<a:BunnyParty:901944552317919232> Winner', inline: true
									},
									{
										name: `<:O_:903275756149411870> | ${fighters[1] == interaction.user.id ? `${interaction.user.username}` : `${opponent.username}`
											}`, value: '<a:BearCry:886730332076924978> Defeated', inline: true
									},
								)
								.setColor('#36393F')
								;
							if (Args.user == 0) {
								const tagi1 = await Tags.findOne({ where: { id: fighters[1] } });
								if (tagi1) {
									if (party_limit == 0) {
										tagi1.increment({ 'partygamescore': 10 });
									} else {
										temppartycheck = tagi1.get('partygamescorewlim');
										if (temppartycheck <= party_limit_value) {
											tagi1.increment({ 'partygamescore': 10 });
											tagi1.increment({ 'partygamescorewlim': 10 });

										}
									}
								}
								return m.edit({
									content: `<@!${fighters[1]}> <:x_:903270400748843079> won.. `, embeds: [xoemb1], components: [a, b, c]
								});
							}
							else if (Args.user == 1) {
								const tagi1 = await Tags.findOne({ where: { id: fighters[0] } });
								if (tagi1) {
									if (party_limit == 0) {
										tagi1.increment({ 'partygamescore': 10 });
									} else {
										temppartycheck = tagi1.get('partygamescorewlim');
										if (temppartycheck <= party_limit_value) {
											tagi1.increment({ 'partygamescore': 10 });
											tagi1.increment({ 'partygamescorewlim': 10 });

										}
									}
								}
								return m.edit({
									content: `<@!${fighters[0]}> <:x_:903270400748843079> won.. `, embeds: [xoemb2], components: [a, b, c]
								});
							}
						}
						let a1 = new MessageButton()
							.setLabel('\u200B')
							.setStyle(Args.a1.style)
							.setEmoji(Args.a1.emoji)
							.setCustomId("a1")
							.setDisabled(Args.a1.disabled);
						let a2 = new MessageButton()
							.setLabel('\u200B')
							.setStyle(Args.a2.style)
							.setEmoji(Args.a2.emoji)
							.setCustomId("a2")
							.setDisabled(Args.a2.disabled);
						let a3 = new MessageButton()
							.setLabel('\u200B')
							.setStyle(Args.a3.style)
							.setEmoji(Args.a3.emoji)
							.setCustomId("a3")
							.setDisabled(Args.a3.disabled);
						let b1 = new MessageButton()
							.setLabel('\u200B')
							.setStyle(Args.b1.style)
							.setEmoji(Args.b1.emoji)
							.setCustomId("b1")
							.setDisabled(Args.b1.disabled);
						let b2 = new MessageButton()
							.setLabel('\u200B')
							.setStyle(Args.b2.style)
							.setEmoji(Args.b2.emoji)
							.setCustomId("b2")
							.setDisabled(Args.b2.disabled);
						let b3 = new MessageButton()
							.setLabel('\u200B')
							.setStyle(Args.b3.style)
							.setEmoji(Args.b3.emoji)
							.setCustomId("b3")
							.setDisabled(Args.b3.disabled);
						let c1 = new MessageButton()
							.setLabel('\u200B')
							.setStyle(Args.c1.style)
							.setEmoji(Args.c1.emoji)
							.setCustomId("c1")
							.setDisabled(Args.c1.disabled);
						let c2 = new MessageButton()
							.setLabel('\u200B')
							.setStyle(Args.c2.style)
							.setEmoji(Args.c2.emoji)
							.setCustomId("c2")
							.setDisabled(Args.c2.disabled);
						let c3 = new MessageButton()
							.setLabel('\u200B')
							.setStyle(Args.c3.style)
							.setEmoji(Args.c3.emoji)
							.setCustomId("c3")
							.setDisabled(Args.c3.disabled);
						let a = new MessageActionRow().addComponents([a1, a2, a3]);
						let b = new MessageActionRow().addComponents([b1, b2, b3]);
						let c = new MessageActionRow().addComponents([c1, c2, c3]);
						let buttons = { components: [a, b, c] };
						let em = `${Args.user == 0 ? "<:O_:903275756149411870>" : "<:x_:903270400748843079>"
							}`

						let man = `${Args.user == 0 ? `${opponent.username}` : `${interaction.user.username}`
							}`


						let op = `${Args.user == 1 ? '<:O_:903275756149411870>' : "<:x_:903270400748843079>"
							}`
						let you = `${Args.user == 1 ? `${opponent.username}` : `${interaction.user.username}`
							}`
						let foot = 'Current Player                   Next Up'
						const xoemb = new MessageEmbed()
							.setTitle('<:TicTacToe:914610939729436704> Tic Tac Toe')
							.setDescription(
								`Round in progress...`
							)
							.addFields(

								{
									name: `${em} | ${Args.userid == interaction.user.id ? `${interaction.user.username}` : `${opponent.username}`
										}`, value: '**Current Player** <a:BearPhone:886730331984629800>', inline: true
								},
								{
									name: `${op} | ${Args.userid == interaction.user.id ? `${opponent.username}` : `${interaction.user.username}`
										}`, value: 'Next Up <a:BearSit:914611493130104872>', inline: true
								},
							)
							.setColor('#36393F')
							;
						m.edit({
							content: `Waiting for Input | <@!${Args.userid}> | Your Emoji: ${Args.user == 0 ? '<:O_:903275756149411870>' : "<:x_:903270400748843079>"
								}`,
							components: [a, b, c], embeds: [xoemb]
						});
						/*const filter = i => {

							return i.user.id === Args.userid;
						};
						msg.awaitMessageComponent({ filter, componentType: 'BUTTON', max: 1, time: 30000 })
							.catch(err => interaction.followUp({ content: `<@!${Args.userid}> It's your turn!` })
							);*/



						const collector = m.createMessageComponentCollector({
							componentType: "BUTTON",
							max: 1,
							time: 180000
						});

						collector.on("collect", (b) => {
							if (b.user.id !== Args.userid) {
								b.reply({
									content: "You cant play now",
									ephemeral: true
								});

								tictactoe(m);
							} else {
								if (Args.user == 0) {
									Args.user = 1;
									Args[b.customId] = {
										style: "SUCCESS",
										emoji: o_emoji,
										disabled: true
									};
								} else {
									Args.user = 0;
									Args[b.customId] = {
										style: "DANGER",
										emoji: x_emoji,
										disabled: true
									};
								}
								b.deferUpdate();
								const map = (obj, fun) =>
									Object.entries(obj).reduce(
										(prev, [key, value]) => ({
											...prev,
											[key]: fun(key, value)
										}),
										{}
									);
								const objectFilter = (obj, predicate) =>
									Object.keys(obj)
										.filter((key) => predicate(obj[key]))
										.reduce((res, key) => ((res[key] = obj[key]), res), {});
								let Brgs = objectFilter(
									map(Args, (_, fruit) => fruit.emoji == dashmoji),
									(num) => num == true
								);

								if (Object.keys(Brgs).length == 0) {

									if (
										Args.a1.emoji == o_emoji &&
										Args.b1.emoji == o_emoji &&
										Args.c1.emoji == o_emoji
									)
										won["<:O_:863314110560993340>"] = true;
									if (
										Args.a2.emoji == o_emoji &&
										Args.b2.emoji == o_emoji &&
										Args.c2.emoji == o_emoji
									)
										won["<:O_:863314110560993340>"] = true;
									if (
										Args.a3.emoji == o_emoji &&
										Args.b3.emoji == o_emoji &&
										Args.c3.emoji == o_emoji
									)
										won["<:O_:863314110560993340>"] = true;
									if (
										Args.a1.emoji == o_emoji &&
										Args.b2.emoji == o_emoji &&
										Args.c3.emoji == o_emoji
									)
										won["<:O_:863314110560993340>"] = true;
									if (
										Args.a3.emoji == o_emoji &&
										Args.b2.emoji == o_emoji &&
										Args.c1.emoji == o_emoji
									)
										won["<:O_:863314110560993340>"] = true;
									if (
										Args.a1.emoji == o_emoji &&
										Args.a2.emoji == o_emoji &&
										Args.a3.emoji == o_emoji
									)
										won["<:O_:863314110560993340>"] = true;
									if (
										Args.b1.emoji == o_emoji &&
										Args.b2.emoji == o_emoji &&
										Args.b3.emoji == o_emoji
									)
										won["<:O_:863314110560993340>"] = true;
									if (
										Args.c1.emoji == o_emoji &&
										Args.c2.emoji == o_emoji &&
										Args.c3.emoji == o_emoji
									)
										won["<:O_:863314110560993340>"] = true;
									let a1 = new MessageButton()
										.setLabel('\u200B')
										.setStyle(Args.a1.style)
										.setEmoji(Args.a1.emoji)
										.setCustomId("a1")
										.setDisabled(Args.a1.disabled);
									let a2 = new MessageButton()
										.setLabel('\u200B')
										.setStyle(Args.a2.style)
										.setEmoji(Args.a2.emoji)
										.setCustomId("a2")
										.setDisabled(Args.a2.disabled);
									let a3 = new MessageButton()
										.setLabel('\u200B')
										.setStyle(Args.a3.style)
										.setEmoji(Args.a3.emoji)
										.setCustomId("a3")
										.setDisabled(Args.a3.disabled);
									let b1 = new MessageButton()
										.setLabel('\u200B')
										.setStyle(Args.b1.style)
										.setEmoji(Args.b1.emoji)
										.setCustomId("b1")
										.setDisabled(Args.b1.disabled);

									let b2 = new MessageButton()
										.setLabel('\u200B')
										.setStyle(Args.b2.style)
										.setEmoji(Args.b2.emoji)
										.setCustomId("b2")
										.setDisabled(Args.b2.disabled);
									let b3 = new MessageButton()
										.setLabel('\u200B')
										.setStyle(Args.b3.style)
										.setEmoji(Args.b3.emoji)
										.setCustomId("b3")
										.setDisabled(Args.b3.disabled);
									let c1 = new MessageButton()
										.setLabel('\u200B')
										.setStyle(Args.c1.style)
										.setEmoji(Args.c1.emoji)
										.setCustomId("c1")
										.setDisabled(Args.c1.disabled);
									let c2 = new MessageButton()
										.setLabel('\u200B')
										.setStyle(Args.c2.style)
										.setEmoji(Args.c2.emoji)
										.setCustomId("c2")
										.setDisabled(Args.c2.disabled);
									let c3 = new MessageButton()
										.setLabel('\u200B')
										.setStyle(Args.c3.style)
										.setEmoji(Args.c3.emoji)
										.setCustomId("c3")
										.setDisabled(Args.c3.disabled);
									let a = new MessageActionRow().addComponents([a1, a2, a3]);
									let b = new MessageActionRow().addComponents([b1, b2, b3]);
									let c = new MessageActionRow().addComponents([c1, c2, c3]);
									let buttons = { components: [a, b, c] };
									const xoemb5 = new MessageEmbed()
										.setTitle('<:TicTacToe:914610939729436704> Tic Tac Toe')
										.setDescription(
											`Round over`

										)
										.addFields(

											{
												name: `${Args.user == 0 ? '<:O_:903275756149411870>' : "<:x_:903270400748843079>"
													}|${Args.userid == interaction.user.id ? `${interaction.user.username}` : `${opponent.username}`
													}`, value: '<a:CuteDance:887371032992841738> Draw!', inline: true
											},
											{
												name: `${Args.user == 0 ? "<:x_:903270400748843079>" : '<:O_:903275756149411870>'
													}|${Args.userid == interaction.user.id ? `${opponent.username}` : `${interaction.user.username}`
													}`, value: '<a:CuteDance2:887371033118650418> Draw!', inline: true
											},
										)
										.setColor('#36393F')
										;
									if (won["<:O_:863314110560993340>"] == true) return tictactoe(m);
									else if (won["<:X_:863314044781723668>"] == true) return;
									else {
										return m.edit({ content: `It's a tie!`, components: [a, b, c], embeds: [xoemb5] })
									}
								}
								tictactoe(m);
							}
						});
						let embed1 = new MessageEmbed()
							.setTitle(`:warning: Error`)
							.setColor('#FFFF00')
							.setDescription(
								"Sorry, you took too long to respond and the interaction expired."
							);

						collector.on("end", (collected) => {
							if (collected.size == 0)

								m.edit({
									content: `<@!${Args.userid}> didn\'t react in time!`,
									components: [], embeds: [embed1]
								});
						});
					}
				}
			});
			let embed2 = new MessageEmbed()
				.setTitle(`:warning: Error`)
				.setColor('#FFFF00')
				.setDescription(
					"Sorry, your opponent did not accept your invitation to play Tic Tac Toe."
				);
			collector.on("end", (collected, reason) => {
				if (reason == "time") {

					m.edit({
						content: "<@" + opponent.id + ">. Didnt accept in time",
						embeds: [embed2],
						components: []
					});
				} else {

				}

			});

			/*simplydjs.tictactoe(client, interaction, {
				slash: true,
				embedColor: '#36393F',
				timeoutEmbedColor: '#FFFF00',
	
	
	
	
				// other options
			})*/
		}
	}


























































	//1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b11b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b
	else if (commandName === 'uno') {
		if (interaction.options.getString("stack") == "Off") {
			stem = ':red_circle:';
		}
		else {
			stem = ':green_circle:';
		}
		if (interaction.options.getString("drawskip") == "Off") {
			drem = ':red_circle:';
		}
		else {
			drem = ':green_circle:';
		}
		if (interaction.options.getString("pass") == "Off") {
			paem = ':red_circle:';
		}
		else {
			paem = ':green_circle:';
		}
		interaction.deferReply()
		let roundno = 0;

		cards = [
			{
				"name": 'Red Zero',
				color: 'red',
				value: 0,
				count: 1,
				inPlay: 0,
				sn: 0,
				image: 'https://media.discordapp.net/attachments/895540640656547890/895540756385783838/Red.png',
				emoji: '<:Red:895311124411580426>'
			},
			{
				"name": 'Red One',
				color: 'red',
				value: 1,
				count: 2,
				inPlay: 0,
				sn: 1,
				image: 'https://media.discordapp.net/attachments/895540640656547890/895540713729691688/Red_1.png',
				emoji: '<:Red1:895311124004757595>'
			},
			{
				"name": 'Red Two',
				color: 'red',
				value: 2,
				count: 2,
				inPlay: 0,
				sn: 2,
				image: 'https://media.discordapp.net/attachments/895540640656547890/895540716212719616/Red_2.png',
				emoji: '<:Red2:895311124587741184>'
			},
			{
				"name": 'Red Three',
				color: 'red',
				value: 3,
				count: 2,
				inPlay: 0,
				sn: 3,
				image: 'https://media.discordapp.net/attachments/895540640656547890/895540718641250344/Red_3.png',
				emoji: '<:Red3:895311124445147236>'
			},
			{
				"name": 'Red Four',
				color: 'red',
				value: 4,
				count: 2,
				inPlay: 0,
				sn: 4,
				image: 'https://media.discordapp.net/attachments/895540640656547890/895540720864223232/Red_4.png',
				emoji: '<:Red4:895311124029906954>'
			},
			{
				"name": 'Red Five',
				color: 'red',
				value: 5,
				count: 2,
				inPlay: 0,
				sn: 5,
				image: 'https://media.discordapp.net/attachments/895540640656547890/895540723296915507/Red_5.png',
				emoji: '<:Red5:895311124633899029>'
			},
			{
				"name": 'Red Six',
				color: 'red',
				value: 6,
				count: 2,
				inPlay: 0,
				sn: 6,
				image: 'https://media.discordapp.net/attachments/895540640656547890/895540725628956692/Red_6.png',
				emoji: '<:Red6:895311124612923502>'
			},
			{
				"name": 'Red Seven',
				color: 'red',
				value: 7,
				count: 2,
				inPlay: 0,
				sn: 7,
				image: 'https://media.discordapp.net/attachments/895540640656547890/895540728577523775/Red_7.png',
				emoji: '<:Red7:895311123987984406>'
			},
			{
				"name": 'Red Eight',
				color: 'red',
				value: 8,
				count: 2,
				inPlay: 0,
				sn: 8,
				image: 'https://media.discordapp.net/attachments/895540640656547890/895540731064746044/Red_8.png',
				emoji: '<:Red8:895311124403216415>'
			},
			{
				"name": 'Red Nine',
				color: 'red',
				value: 9,
				count: 2,
				inPlay: 0,
				sn: 9,
				image: 'https://media.discordapp.net/attachments/895540640656547890/895540733702983680/Red_9.png',
				emoji: '<:Red9:895311124566790214>'
			},
			{
				"name": 'Red Skip',
				color: 'red',
				value: 'Skip',
				count: 2,
				inPlay: 0,
				sn: 10,
				image: 'https://media.discordapp.net/attachments/895540640656547890/895540779488002099/Red_Skip.png',
				emoji: '<:RedSkip:895311124596129883>'
			},
			{
				"name": 'Red Reverse',
				color: 'red',
				value: 'Reverse',
				count: 2,
				inPlay: 0,
				sn: 11,
				image: 'https://media.discordapp.net/attachments/895540640656547890/896294942295601202/Red_Reverse.png',
				emoji: '<:RedReverse:895311123941818379>'
			},
			{
				"name": 'Red Draw Two',
				color: 'red',
				value: 'Draw Two',
				count: 2,
				inPlay: 0,
				sn: 12,
				image: 'https://media.discordapp.net/attachments/895540640656547890/895540735783366676/Red_Draw_2.png',
				emoji: '<:RedDraw2:895311124583579709>'
			},

			{
				"name": 'Yellow Zero',
				color: 'yellow',
				value: 0,
				count: 1,
				inPlay: 0,
				sn: 13,
				image: 'https://media.discordapp.net/attachments/895540833657446450/895540913869316106/Yellow.png',
				emoji: '<:Yellow:895311183161200751>'
			},
			{
				"name": 'Yellow One',
				color: 'yellow',
				value: 1,
				count: 2,
				inPlay: 0,
				sn: 14,
				image: 'https://media.discordapp.net/attachments/895540833657446450/895540857049088040/Yellow_1.png',
				emoji: '<:Yellow1:895311182792097882>'
			},
			{
				"name": 'Yellow Two',
				color: 'yellow',
				value: 2,
				count: 2,
				inPlay: 0,
				sn: 15,
				image: 'https://media.discordapp.net/attachments/895540833657446450/895540862434553896/Yellow_2.png',
				emoji: '<:Yellow2:895311182712406086>'
			},
			{
				"name": 'Yellow Three',
				color: 'yellow',
				value: 3,
				count: 2,
				inPlay: 0,
				sn: 16,
				image: 'https://media.discordapp.net/attachments/895540833657446450/895540867664846888/Yellow_3.png',
				emoji: '<:Yellow3:895311182750175272>'
			},
			{
				"name": 'Yellow Four',
				color: 'yellow',
				value: 4,
				count: 2,
				inPlay: 0,
				sn: 17,
				image: 'https://media.discordapp.net/attachments/895540833657446450/895540872060477490/Yellow_4.png',
				emoji: '<:Yellow4:895311182792130590>'
			},
			{
				"name": 'Yellow Five',
				color: 'yellow',
				value: 5,
				count: 2,
				inPlay: 0,
				sn: 18,
				image: 'https://media.discordapp.net/attachments/895540833657446450/895540876598706206/Yellow_5.png',
				emoji: '<:Yellow5:895311182796292176>'
			},
			{
				"name": 'Yellow Six',
				color: 'yellow',
				value: 6,
				count: 2,
				inPlay: 0,
				sn: 19,
				image: 'https://media.discordapp.net/attachments/895540833657446450/895540881208270888/Yellow_6.png',
				emoji: '<:Yellow6:895311182997647421>'
			},
			{
				"name": 'Yellow Seven',
				color: 'yellow',
				value: 7,
				count: 2,
				inPlay: 0,
				sn: 20,
				image: 'https://media.discordapp.net/attachments/895540833657446450/895540885310308402/Yellow_7.png',
				emoji: '<:Yellow7:895311183006019584>'
			},
			{
				"name": 'Yellow Eight',
				color: 'yellow',
				value: 8,
				count: 2,
				inPlay: 0,
				sn: 21,
				image: 'https://media.discordapp.net/attachments/895540833657446450/895540889492009020/Yellow_8.png',
				emoji: '<:Yellow8:895311182838251600>'
			},
			{
				"name": 'Yellow Nine',
				color: 'yellow',
				value: 9,
				count: 2,
				inPlay: 0,
				sn: 22,
				image: 'https://media.discordapp.net/attachments/895540833657446450/895540893162045460/Yellow_9.png',
				emoji: '<:Yellow9:895311182683062283>'
			},
			{
				"name": 'Yellow Skip',
				color: 'yellow',
				value: 'Skip',
				count: 2,
				inPlay: 0,
				sn: 23,
				image: 'https://media.discordapp.net/attachments/895540833657446450/895540909276549171/Yellow_Skip.png',
				emoji: '<:YellowSkip:895311183060561980>'
			},
			{
				"name": 'Yellow Reverse',
				color: 'yellow',
				value: "Reverse",
				count: 2,
				inPlay: 0,
				sn: 24,
				image: 'https://media.discordapp.net/attachments/895540833657446450/895540905145151508/Yellow_Reverse.png',
				emoji: '<:YellowReverse:895311182993432576>'
			},
			{
				"name": 'Yellow Draw Two',
				color: 'yellow',
				value: 'Draw Two',
				count: 2,
				inPlay: 0,
				sn: 25,
				image: 'https://media.discordapp.net/attachments/895540833657446450/895540897775747083/Yellow_Draw_2.png',
				emoji: '<:YellowDraw2:895311182771134526>'
			},
			{
				"name": 'Green Zero',
				color: 'green',
				value: 0,
				count: 1,
				inPlay: 0,
				sn: 26,
				image: 'https://media.discordapp.net/attachments/895540486696235048/895540510687658056/Green.png',
				emoji: '<:Green:895311124629700639>'
			},
			{
				"name": 'Green One',
				color: 'green',
				value: 1,
				count: 2,
				inPlay: 0,
				sn: 27,
				image: 'https://media.discordapp.net/attachments/895540486696235048/895540512474411008/Green_1.png',
				emoji: '<:Green1:895311124285755432>'
			},
			{
				"name": 'Green Two',
				color: 'green',
				value: 2,
				count: 2,
				inPlay: 0,
				sn: 28,
				image: 'https://media.discordapp.net/attachments/895540486696235048/895540514655457350/Green_2.png',
				emoji: '<:Green2:895311124243832882>'
			},
			{
				"name": 'Green Three',
				color: 'green',
				value: 3,
				count: 2,
				inPlay: 0,
				sn: 29,
				image: 'https://media.discordapp.net/attachments/895540486696235048/895540516924571668/Green_3.png',
				emoji: '<:Green3:895311124222865428>'
			},
			{
				"name": 'Green Four',
				color: 'green',
				value: 4,
				count: 2,
				inPlay: 0,
				sn: 30,
				image: 'https://media.discordapp.net/attachments/895540486696235048/895540519034314763/Green_4.png',
				emoji: '<:Green4:895311124319305789>'
			},
			{
				"name": 'Green Five',
				color: 'green',
				value: 5,
				count: 2,
				inPlay: 0,
				sn: 31,
				image: 'https://media.discordapp.net/attachments/895540486696235048/895540521152417852/Green_5.png',
				emoji: '<:Green5:895311124562579466>'
			},
			{
				"name": 'Green Six',
				color: 'green',
				value: 6,
				count: 2,
				inPlay: 0,
				sn: 32,
				image: 'https://media.discordapp.net/attachments/895540486696235048/895540523140530236/Green_6.png',
				emoji: '<:Green6:895311124499669062>'
			},
			{
				"name": 'Green Seven',
				color: 'green',
				value: 7,
				count: 2,
				inPlay: 0,
				sn: 33,
				image: 'https://media.discordapp.net/attachments/895540486696235048/895540525317382164/Green_7.png',
				emoji: '<:Green7:895311123979599952>'
			},
			{
				"name": 'Green Eight',
				color: 'green',
				value: 8,
				count: 2,
				inPlay: 0,
				sn: 34,
				image: 'https://media.discordapp.net/attachments/895540486696235048/895540527255154740/Green_8.png',
				emoji: '<:Green8:895311124671643668>'
			},
			{
				"name": 'Green Nine',
				color: 'green',
				value: 9,
				count: 2,
				inPlay: 0,
				sn: 35,
				image: 'https://media.discordapp.net/attachments/895540486696235048/895540529146777680/Green_9.png',
				emoji: '<:Green9:895311124415799316>'
			},
			{
				"name": 'Green Skip',
				color: 'green',
				value: 'Skip',
				count: 2,
				inPlay: 0,
				sn: 36,
				image: 'https://media.discordapp.net/attachments/895540486696235048/895540589129510952/Green_Skip.png',
				emoji: '<:GreenSkip:895311124898123856>'
			},
			{
				"name": 'Green Reverse',
				color: 'green',
				value: 'Reverse',
				count: 2,
				inPlay: 0,
				sn: 37,
				image: 'https://media.discordapp.net/attachments/895540486696235048/895540595005718528/Green_Reverse.png',
				emoji: '<:GreenReverse:895311124600352829>'
			},
			{
				"name": 'Green Draw Two',
				color: 'green',
				value: 'Draw Two',
				count: 2,
				inPlay: 0,
				sn: 38,
				image: 'https://media.discordapp.net/attachments/895540486696235048/895540591709011968/Green_Draw_2.png',
				emoji: '<:GreenDraw2:895311124529053736>'
			},
			// Blue Cards
			{
				"name": 'Blue Zero',
				color: 'blue',
				value: 0,
				count: 1,
				inPlay: 0,
				sn: 39,
				image: 'https://media.discordapp.net/attachments/895540202095902751/895540268298825728/Blue.png',
				emoji: '<:Blue:895311123925069874>'
			},
			{
				"name": 'Blue One',
				color: 'blue',
				value: 1,
				count: 2,
				inPlay: 0,
				sn: 40,
				image: 'https://media.discordapp.net/attachments/895540202095902751/895540269578059817/Blue_1.png',
				emoji: '<:Blue1:895311123711160330>'
			},
			{
				"name": 'Blue Two',
				color: 'blue',
				value: 2,
				count: 2,
				inPlay: 0,
				sn: 41,
				image: 'https://media.discordapp.net/attachments/895540202095902751/895540270962208788/Blue_2.png',
				emoji: '<:Blue2:895311123467890698>'
			},
			{
				"name": 'Blue Three',
				color: 'blue',
				value: 3,
				count: 2,
				inPlay: 0,
				sn: 42,
				image: 'https://media.discordapp.net/attachments/895540202095902751/895540272371494922/Blue_3.png',
				emoji: '<:Blue3:895311123602104320>'
			},
			{
				"name": 'Blue Four',
				color: 'blue',
				value: 4,
				count: 2,
				inPlay: 0,
				sn: 43,
				image: 'https://media.discordapp.net/attachments/895540202095902751/895540273797546034/Blue_4.png',
				emoji: '<:Blue4:895311123451105361>'
			},
			{
				"name": 'Blue Five',
				color: 'blue',
				value: 5,
				count: 2,
				inPlay: 0,
				sn: 44,
				image: 'https://media.discordapp.net/attachments/895540202095902751/895540275257180180/Blue_5.png',
				emoji: '<:Blue5:895311123778265118>'
			},
			{
				"name": 'Blue Six',
				color: 'blue',
				value: 6,
				count: 2,
				inPlay: 0,
				sn: 45,
				image: 'https://media.discordapp.net/attachments/895540202095902751/895540276762914817/Blue_6.png',
				emoji: '<:Blue6:895311123312689173>'
			},
			{
				"name": 'Blue Seven',
				color: 'blue',
				value: 7,
				count: 2,
				inPlay: 0,
				sn: 46,
				image: 'https://media.discordapp.net/attachments/895540202095902751/895540278251905024/Blue_7.png',
				emoji: '<:Blue7:895311123564359691>'
			},
			{
				"name": 'Blue Eight',
				color: 'blue',
				value: 8,
				count: 2,
				inPlay: 0,
				sn: 47,
				image: 'https://media.discordapp.net/attachments/895540202095902751/895540279732486164/Blue_8.png',
				emoji: '<:Blue8:895311123543392286>'
			},
			{
				"name": 'Blue Nine',
				color: 'blue',
				value: 9,
				count: 2,
				inPlay: 0,
				sn: 48,
				image: 'https://media.discordapp.net/attachments/895540202095902751/895540372380483655/Blue_9.png',
				emoji: '<:Blue9:895311123308490803>'
			},
			{
				"name": 'Blue Skip',
				color: 'blue',
				value: 'Skip',
				count: 2,
				inPlay: 0,
				sn: 49,
				image: 'https://media.discordapp.net/attachments/895540202095902751/895540267036340234/Blue_Skip.png',
				emoji: '<:BlueSkip:895311124587765770>'
			},
			{
				"name": 'Blue Reverse',
				color: 'blue',
				value: 'Reverse',
				count: 2,
				inPlay: 0,
				sn: 50,
				image: 'https://media.discordapp.net/attachments/895540202095902751/895540424339521566/Blue_Reverse.png',
				emoji: '<:BlueReverse:895311123593719889>'
			},
			{
				"name": 'Blue Draw Two',
				color: 'blue',
				value: 'Draw Two',
				count: 2,
				inPlay: 0,
				sn: 51,
				image: 'https://media.discordapp.net/attachments/895540202095902751/895540435932549141/Blue_Draw_2.png',
				emoji: '<:BlueDraw2:895311123207815212>'
			},
			{
				"name": 'Wild',
				color: "null",
				value: 'Wild',
				count: 4,
				inPlay: 0,
				sn: 52,
				image: 'https://cdn.discordapp.com/attachments/895540833657446450/900415620326248469/Color_Picker.png',
				emoji: '<:ColorPicker:900415834932006922>'
			},
			{
				"name": 'Wild Draw Four',
				color: "null",
				value: 'Wild Draw Four',
				count: 4,
				inPlay: 0,
				sn: 53,
				image: 'https://media.discordapp.net/attachments/895540833657446450/895541023487438888/Special_Draw_4.png',
				emoji: '<:SpecialDraw4:895311124537421844>'
			},
			{
				"name": 'Wild Reverse',
				color: "null",
				value: 'Wild Reverse',
				count: 4,
				inPlay: 0,
				sn: 54,
				image: 'https://cdn.discordapp.com/attachments/895540833657446450/895541025689468938/Reverse.png',
				emoji: '<:Reverse:895311124235452477>'
			}
		]
		max = 54;
		min = 1;
		nbot = 0;
		botlist = [];
		botlist = ['Coco', 'Alpha', 'Mike', 'Oscar', 'Golf', 'Uniform', 'Sierra', 'Whiskey', 'Hotel', 'Echo', 'November', 'Tango', 'Harry', 'Edward', 'India', 'Mary', 'Paris', 'Oslo', 'Sarah', 'Tom', 'Oliver', 'Richard', 'Sigma', 'Crewmate']

		ttt = Math.floor(Math.random() * 52);
		topcard = cards[ttt];
		topcards = topcard.color;
		topimage = topcard.image;
		if (topcard.value == 'Wild Draw Four') {
			neutr = 4;
		} else if (topcard.value == 'Draw Two') {
			neutr = 2;
		} else { neutr = 0; }

		let slot = '<:UnoSlot:895311124399013888><:UnoSlot:895311124399013888><:UnoSlot:895311124399013888><:UnoSlot:895311124399013888><:UnoSlot:895311124399013888><:UnoSlot:895311124399013888><:UnoSlot:895311124399013888>';
		let a = [];
		let aid = [];
		c = 'https://cdn.discordapp.com/attachments/890940397478608938/896294823869440040/Red_Reverse.png';
		a[0] = `${interaction.user.username}`;
		aid[0] = `${interaction.user.id}`;
		cpa = [];
		nso = [];
		k = 0;
		lbf = 1;


		let i = 1;
		let Args = {
			user: 0
		}
		Args.userid = aid[Args.user];

		const row = new MessageActionRow()
			.addComponents(
				new MessageButton()
					.setCustomId('Join')
					.setLabel('Join')
					.setStyle('SUCCESS'),
				new MessageButton()
					.setCustomId('Leave')
					.setLabel('Leave')
					.setStyle('DANGER'),
				new MessageButton()
					.setCustomId('Start')
					.setLabel('Start')
					.setStyle('PRIMARY'))
		const row1 = new MessageActionRow()
			.addComponents(
				new MessageButton()
					.setCustomId('ADD')
					.setLabel('Add AI')
					.setStyle('SECONDARY')
					.setEmoji('<a:AmongUS:890874005899317279.>'),
				new MessageButton()
					.setCustomId('Remove')
					.setLabel('Remove AI')
					.setStyle('SECONDARY')
					.setEmoji('<:Poker:886864034362703932.>'),
			);
		const embed = new MessageEmbed()
			.setColor('#90EE90')
			.setTitle(`UNO | Lobby`)
			.setDescription(`Joining: ${a} \n**Host** : **${interaction.user.username}**\nThe host can start the game early or add AI players to the game\nMaximum player count:25`);
		interaction.followUp({ content: `**${interaction.user.username}** wants to play **UNO**.\nJoin within 5 minutes to start playing!`, embeds: [embed], components: [row, row1] });
		let m = await interaction.fetchReply();

		const collector = m.createMessageComponentCollector({
			type: "BUTTON",
			time: 300000
		});
		collector.on("collect", async (button) => {
			//for joining
			if (button.customId == "Join") {

				if (a.indexOf(`${button.user.username}`) == -1) {
					if (i == 25) {
						return button.reply({ content: "Lobby is full", ephemeral: true });
					}
					a[i] = `${button.user.username}`;
					aid[i] = `${button.user.id}`;
					i++;
					const embed = new MessageEmbed()
						.setColor('#90EE90')
						.setTitle(`UNO | Lobby`)
						.setDescription(`Joining: ${a} \n**Host** : **${interaction.user.username}**\nThe host can start the game early or add AI players to the game\nMaximum player count:25`);

					await m.edit({ content: `**${interaction.user.username}** wants to play **UNO**.\nJoin within 5 minutes to start playing!`, embeds: [embed], components: [row, row1] });
					button.deferUpdate();
				}
				else if (a.indexOf(`${button.user.username}`) !== -1) {
					await button.reply({ content: "You already joined the game", ephemeral: true });

				}

			}
			if (button.customId == "ADD") {
				if (button.user.id == interaction.user.id) {
					if (i == 25) {
						return button.reply({ content: "Lobby is full", ephemeral: true });
					}
					a[i] = botlist[nbot];
					aid[i] = 'bot';
					nbot++;
					i++;
					const embed = new MessageEmbed()
						.setColor('#90EE90')
						.setTitle(`UNO | Lobby`)
						.setDescription(`Joining: ${a} \n**Host** : **${interaction.user.username}**\nThe host can start the game early or add AI players to the game\nMaximum player count:25`);

					await m.edit({ content: `**${interaction.user.username}** wants to play **UNO**.\nJoin within 5 minutes to start playing!`, embeds: [embed], components: [row, row1] });
					button.deferUpdate();
				} else {
					button.reply({ content: 'Only host can add AI', ephemeral: true })
				}
			}
			if (button.customId == "Remove") {
				if (button.user.id == interaction.user.id) {
					i = a.indexOf(`${botlist[nbot - 1]}`);
					console.log(i);
					if (i != -1) {


						a.splice(i, 1);
						aid.splice(i, 1);
						nbot--;
						const embed = new MessageEmbed()
							.setColor('#90EE90')
							.setTitle(`UNO | Lobby`)
							.setDescription(`Joining: ${a} \n**Host** : **${interaction.user.username}**\nThe host can start the game early or add AI players to the game\nMaximum player count:25`);

						await m.edit({ content: `**${interaction.user.username}** wants to play **UNO**.\nJoin within 5 minutes to start playing!`, embeds: [embed], components: [row, row1] });
						i = a.length;

						button.deferUpdate();
					}
					else {
						await button.reply({ content: 'All AI removed', ephemeral: true });
						i = a.length;
					}
				} else {
					button.reply({ content: 'Only host can remove AI', ephemeral: true })
				}
			}
			if (button.customId == "Leave") {

				i = aid.indexOf(`${button.user.id}`);
				if (i != -1) {


					a.splice(i, 1);
					aid.splice(i, 1);
					const embed = new MessageEmbed()
						.setColor('#90EE90')
						.setTitle(`UNO | Lobby`)
						.setDescription(`Joining: ${a} \n**Host** : **${interaction.user.username}**\nThe host can start the game early or add AI players to the game\nMaximum player count:25`);

					await m.edit({ content: `**${interaction.user.username}** wants to play **UNO**.\nJoin within 5 minutes to start playing!`, embeds: [embed], components: [row, row1] });
					i = a.length;

					button.deferUpdate();
				}
				else {
					await button.reply({ content: 'You already left', ephemeral: true });
					i = a.length;
				}
			}
			if (button.customId == "Start") {
				if (button.user.username == `${interaction.user.username}`) {
					if (a.length == 1) {
						return button.reply({ content: 'There is only one player in lobby', ephemeral: true });
					}
					else {
						unogame(m);
					}
				}
				else {


				}
				button.deferUpdate();
			}
		})
		async function unogame(m) {
			if (a.length == 1)
				return m.edit({ content: 'There was only one player in lobby', components: [], embeds: [] });

			if (topcard.value == 'Reverse') {
				if (paem != ':green_circle:') {
					lbf = -1;
				}
			} else if (topcard.value == 'Skip') {
				lbf = 1;
				Args.user = Args.user + 1;
				Args.userid = aid[Args.user];
			}
			const starttrd = new MessageEmbed()
				.setColor('#36393F')
				.setTitle(`UNO started by ${interaction.user.username}`)
				.setDescription(`Join the thread to play!`);
			const initial = new MessageEmbed()
				.setColor('#36393F')
				.setTitle(`<:UnoPack:914863646444781668> Game Instructions & Rules!`)
				.setDescription('Click a card to play!\n\n<:Draw2:914870221137936384> __**Drawing Cards**__\n\n<a:Point:914868815798611998> A player may only draw a new card from the deck if they do not have any cards they can play.\n\n<a:Point:914868815798611998> To draw a card, click the \"Draw\" button.\n\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\n\n<:UnoCard:914866662166114324> __**Saying UNO**__\n\n<a:Point:914868815798611998>When a player discards their second to last card, they should use the <a:Announcements:886866646336159745> Say UNO button.\n\n<a:Point:914868815798611998> If the player hasn’t done after one second, other players may hit the button to call the offending player out and make them draw 2 cards.\n\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\n\n__**House Rules**__')
				.setThumbnail('https://cdn.discordapp.com/attachments/895655754403557389/914867138047647754/Uno.png')
				.addFields(
					{ name: 'Stacking', value: `<:Draw4:914863646314733618> +2 cards can be stacked, a single +4 card can also go on top.`, inline: true },
					{ name: 'Pass Cards', value: `<:ReverseCard:914865237205852260> The pass-around card will rotate the player’s hands counterclockwise`, inline: true },
					{ name: 'Skip on Draw', value: `<:UnoBlock:914866662161940480> A player that has to draw a +2 or +4 will be skipped that round`, inline: true }
				);
			nob = [];
			nobe = [];
			cruelty = [];
			noreveal = [];
			for (nobi = 0; nobi <= a.length - 1; nobi++) {
				nob[nobi] = 7;
				cruelty[nobi] = 2;
				noreveal[nobi] = 0;
				nobe[nobi] = "<:UnoSlot:895311124399013888>".repeat(nob[nobi]);
			}
			for (sil = 0; sil <= a.length; sil++) {
				cpa[sil] = a[sil];
			}
			cpa[Args.user] = `__${a[Args.user]}__`;

			if (a.length == 1)
				initial1 = new MessageEmbed()
					.setColor('#36393F')
					.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
					.addFields(
						{ name: `${cpa[0]}`, value: `${nobe[0]}` }
					)

					.setImage(topimage)
					.setFooter('Join the thread to play!');
			else if (a.length == 2)
				initial1 = new MessageEmbed()
					.setColor('#36393F')
					.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
					.addFields(
						{ name: `${cpa[0]}`, value: `${nobe[0]}` },
						{ name: `${cpa[1]}`, value: `${nobe[1]}` }
					)

					.setImage(topimage)
					.setFooter('Join the thread to play!');
			else if (a.length == 3)
				initial1 = new MessageEmbed()
					.setColor('#36393F')
					.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
					.addFields(
						{ name: `${cpa[0]}`, value: `${nobe[0]}` },
						{ name: `${cpa[1]}`, value: `${nobe[1]}` },
						{ name: `${cpa[2]}`, value: `${nobe[2]}` }
					)
					.setImage(topimage)
					.setFooter('Join the thread to play!');
			else if (a.length == 4)
				initial1 = new MessageEmbed()
					.setColor('#36393F')
					.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
					.addFields(
						{ name: `${cpa[0]}`, value: `${nobe[0]}` },
						{ name: `${cpa[1]}`, value: `${nobe[1]}` },
						{ name: `${cpa[2]}`, value: `${nobe[2]}` },
						{ name: `${cpa[3]}`, value: `${nobe[3]}` }
					)
					.setImage(topimage)
					.setFooter('Join the thread to play!');
			else if (a.length == 5)
				initial1 = new MessageEmbed()
					.setColor('#36393F')
					.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
					.addFields(
						{ name: `${cpa[0]}`, value: `${nobe[0]}` },
						{ name: `${cpa[1]}`, value: `${nobe[1]}` },
						{ name: `${cpa[2]}`, value: `${nobe[2]}` },
						{ name: `${cpa[3]}`, value: `${nobe[3]}` },
						{ name: `${cpa[4]}`, value: `${nobe[4]}` }
					)
					.setImage(topimage)
					.setFooter('Join the thread to play!');
			else if (a.length == 6)
				initial1 = new MessageEmbed()
					.setColor('#36393F')
					.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
					.addFields(
						{ name: `${cpa[0]}`, value: `${nobe[0]}` },
						{ name: `${cpa[1]}`, value: `${nobe[1]}` },
						{ name: `${cpa[2]}`, value: `${nobe[2]}` },
						{ name: `${cpa[3]}`, value: `${nobe[3]}` },
						{ name: `${cpa[4]}`, value: `${nobe[4]}` },
						{ name: `${cpa[5]}`, value: `${nobe[5]}` }
					)
					.setImage(topimage)
					.setFooter('Join the thread to play!');
			else if (a.length == 7)
				initial1 = new MessageEmbed()
					.setColor('#36393F')
					.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
					.addFields(
						{ name: `${cpa[0]}`, value: `${nobe[0]}` },
						{ name: `${cpa[1]}`, value: `${nobe[1]}` },
						{ name: `${cpa[2]}`, value: `${nobe[2]}` },
						{ name: `${cpa[3]}`, value: `${nobe[3]}` },
						{ name: `${cpa[4]}`, value: `${nobe[4]}` },
						{ name: `${cpa[5]}`, value: `${nobe[5]}` },
						{ name: `${cpa[6]}`, value: `${nobe[6]}` }
					)
					.setImage(topimage)
					.setFooter('Join the thread to play!');
			else if (a.length == 8)
				initial1 = new MessageEmbed()
					.setColor('#36393F')
					.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
					.addFields(
						{ name: `${cpa[0]}`, value: `${nobe[0]}` },
						{ name: `${cpa[1]}`, value: `${nobe[1]}` },
						{ name: `${cpa[2]}`, value: `${nobe[2]}` },
						{ name: `${cpa[3]}`, value: `${nobe[3]}` },
						{ name: `${cpa[4]}`, value: `${nobe[4]}` },
						{ name: `${cpa[5]}`, value: `${nobe[5]}` },
						{ name: `${cpa[6]}`, value: `${nobe[6]}` },
						{ name: `${cpa[7]}`, value: `${nobe[7]}` }
					)
					.setImage(topimage)
					.setFooter('Join the thread to play!');
			else if (a.length == 9)
				initial1 = new MessageEmbed()
					.setColor('#36393F')
					.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
					.addFields(
						{ name: `${cpa[0]}`, value: `${nobe[0]}` },
						{ name: `${cpa[1]}`, value: `${nobe[1]}` },
						{ name: `${cpa[2]}`, value: `${nobe[2]}` },
						{ name: `${cpa[3]}`, value: `${nobe[3]}` },
						{ name: `${cpa[4]}`, value: `${nobe[4]}` },
						{ name: `${cpa[5]}`, value: `${nobe[5]}` },
						{ name: `${cpa[6]}`, value: `${nobe[6]}` },
						{ name: `${cpa[7]}`, value: `${nobe[7]}` },
						{ name: `${cpa[8]}`, value: `${nobe[8]}` }
					)
					.setImage(topimage)
					.setFooter('Join the thread to play!');
			else if (a.length == 10)
				initial1 = new MessageEmbed()
					.setColor('#36393F')
					.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
					.addFields(
						{ name: `${cpa[0]}`, value: `${nobe[0]}` },
						{ name: `${cpa[1]}`, value: `${nobe[1]}` },
						{ name: `${cpa[2]}`, value: `${nobe[2]}` },
						{ name: `${cpa[3]}`, value: `${nobe[3]}` },
						{ name: `${cpa[4]}`, value: `${nobe[4]}` },
						{ name: `${cpa[5]}`, value: `${nobe[5]}` },
						{ name: `${cpa[6]}`, value: `${nobe[6]}` },
						{ name: `${cpa[7]}`, value: `${nobe[7]}` },
						{ name: `${cpa[8]}`, value: `${nobe[8]}` },
						{ name: `${cpa[9]}`, value: `${nobe[9]}` }
					)
					.setImage(topimage)
					.setFooter('Join the thread to play!');
			else if (a.length == 11)
				initial1 = new MessageEmbed()
					.setColor('#36393F')
					.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
					.addFields(
						{ name: `${cpa[0]}`, value: `${nobe[0]}` },
						{ name: `${cpa[1]}`, value: `${nobe[1]}` },
						{ name: `${cpa[2]}`, value: `${nobe[2]}` },
						{ name: `${cpa[3]}`, value: `${nobe[3]}` },
						{ name: `${cpa[4]}`, value: `${nobe[4]}` },
						{ name: `${cpa[5]}`, value: `${nobe[5]}` },
						{ name: `${cpa[6]}`, value: `${nobe[6]}` },
						{ name: `${cpa[7]}`, value: `${nobe[7]}` },
						{ name: `${cpa[8]}`, value: `${nobe[8]}` },
						{ name: `${cpa[9]}`, value: `${nobe[9]}` },
						{ name: `${cpa[10]}`, value: `${nobe[10]}` }
					)
					.setImage(topimage)
					.setFooter('Join the thread to play!');
			else if (a.length == 12)
				initial1 = new MessageEmbed()
					.setColor('#36393F')
					.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
					.addFields(
						{ name: `${cpa[0]}`, value: `${nobe[0]}` },
						{ name: `${cpa[1]}`, value: `${nobe[1]}` },
						{ name: `${cpa[2]}`, value: `${nobe[2]}` },
						{ name: `${cpa[3]}`, value: `${nobe[3]}` },
						{ name: `${cpa[4]}`, value: `${nobe[4]}` },
						{ name: `${cpa[5]}`, value: `${nobe[5]}` },
						{ name: `${cpa[6]}`, value: `${nobe[6]}` },
						{ name: `${cpa[7]}`, value: `${nobe[7]}` },
						{ name: `${cpa[8]}`, value: `${nobe[8]}` },
						{ name: `${cpa[9]}`, value: `${nobe[9]}` },
						{ name: `${cpa[10]}`, value: `${nobe[10]}` },
						{ name: `${cpa[11]}`, value: `${nobe[11]}` }
					)
					.setImage(topimage)
					.setFooter('Join the thread to play!');
			else if (a.length == 13)
				initial1 = new MessageEmbed()
					.setColor('#36393F')
					.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
					.addFields(
						{ name: `${cpa[0]}`, value: `${nobe[0]}` },
						{ name: `${cpa[1]}`, value: `${nobe[1]}` },
						{ name: `${cpa[2]}`, value: `${nobe[2]}` },
						{ name: `${cpa[3]}`, value: `${nobe[3]}` },
						{ name: `${cpa[4]}`, value: `${nobe[4]}` },
						{ name: `${cpa[5]}`, value: `${nobe[5]}` },
						{ name: `${cpa[6]}`, value: `${nobe[6]}` },
						{ name: `${cpa[7]}`, value: `${nobe[7]}` },
						{ name: `${cpa[8]}`, value: `${nobe[8]}` },
						{ name: `${cpa[9]}`, value: `${nobe[9]}` },
						{ name: `${cpa[10]}`, value: `${nobe[10]}` },
						{ name: `${cpa[11]}`, value: `${nobe[11]}` },
						{ name: `${cpa[12]}`, value: `${nobe[12]}` }
					)
					.setImage(topimage)
					.setFooter('Join the thread to play!');
			else if (a.length == 14)
				initial1 = new MessageEmbed()
					.setColor('#36393F')
					.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
					.addFields(
						{ name: `${cpa[0]}`, value: `${nobe[0]}` },
						{ name: `${cpa[1]}`, value: `${nobe[1]}` },
						{ name: `${cpa[2]}`, value: `${nobe[2]}` },
						{ name: `${cpa[3]}`, value: `${nobe[3]}` },
						{ name: `${cpa[4]}`, value: `${nobe[4]}` },
						{ name: `${cpa[5]}`, value: `${nobe[5]}` },
						{ name: `${cpa[6]}`, value: `${nobe[6]}` },
						{ name: `${cpa[7]}`, value: `${nobe[7]}` },
						{ name: `${cpa[8]}`, value: `${nobe[8]}` },
						{ name: `${cpa[9]}`, value: `${nobe[9]}` },
						{ name: `${cpa[10]}`, value: `${nobe[10]}` },
						{ name: `${cpa[11]}`, value: `${nobe[11]}` },
						{ name: `${cpa[12]}`, value: `${nobe[12]}` },
						{ name: `${cpa[13]}`, value: `${nobe[13]}` }
					)
					.setImage(topimage)
					.setFooter('Join the thread to play!');
			else if (a.length == 15)
				initial1 = new MessageEmbed()
					.setColor('#36393F')
					.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
					.addFields(
						{ name: `${cpa[0]}`, value: `${nobe[0]}` },
						{ name: `${cpa[1]}`, value: `${nobe[1]}` },
						{ name: `${cpa[2]}`, value: `${nobe[2]}` },
						{ name: `${cpa[3]}`, value: `${nobe[3]}` },
						{ name: `${cpa[4]}`, value: `${nobe[4]}` },
						{ name: `${cpa[5]}`, value: `${nobe[5]}` },
						{ name: `${cpa[6]}`, value: `${nobe[6]}` },
						{ name: `${cpa[7]}`, value: `${nobe[7]}` },
						{ name: `${cpa[8]}`, value: `${nobe[8]}` },
						{ name: `${cpa[9]}`, value: `${nobe[9]}` },
						{ name: `${cpa[10]}`, value: `${nobe[10]}` },
						{ name: `${cpa[11]}`, value: `${nobe[11]}` },
						{ name: `${cpa[12]}`, value: `${nobe[12]}` },
						{ name: `${cpa[13]}`, value: `${nobe[13]}` },
						{ name: `${cpa[14]}`, value: `${nobe[14]}` }
					)
					.setImage(topimage)
					.setFooter('Join the thread to play!');
			else if (a.length == 16)
				initial1 = new MessageEmbed()
					.setColor('#36393F')
					.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
					.addFields(
						{ name: `${cpa[0]}`, value: `${nobe[0]}` },
						{ name: `${cpa[1]}`, value: `${nobe[1]}` },
						{ name: `${cpa[2]}`, value: `${nobe[2]}` },
						{ name: `${cpa[3]}`, value: `${nobe[3]}` },
						{ name: `${cpa[4]}`, value: `${nobe[4]}` },
						{ name: `${cpa[5]}`, value: `${nobe[5]}` },
						{ name: `${cpa[6]}`, value: `${nobe[6]}` },
						{ name: `${cpa[7]}`, value: `${nobe[7]}` },
						{ name: `${cpa[8]}`, value: `${nobe[8]}` },
						{ name: `${cpa[9]}`, value: `${nobe[9]}` },
						{ name: `${cpa[10]}`, value: `${nobe[10]}` },
						{ name: `${cpa[11]}`, value: `${nobe[11]}` },
						{ name: `${cpa[12]}`, value: `${nobe[12]}` },
						{ name: `${cpa[13]}`, value: `${nobe[13]}` },
						{ name: `${cpa[14]}`, value: `${nobe[14]}` },
						{ name: `${cpa[15]}`, value: `${nobe[15]}` }
					)
					.setImage(topimage)
					.setFooter('Join the thread to play!');
			else if (a.length == 17)
				initial1 = new MessageEmbed()
					.setColor('#36393F')
					.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
					.addFields(
						{ name: `${cpa[0]}`, value: `${nobe[0]}` },
						{ name: `${cpa[1]}`, value: `${nobe[1]}` },
						{ name: `${cpa[2]}`, value: `${nobe[2]}` },
						{ name: `${cpa[3]}`, value: `${nobe[3]}` },
						{ name: `${cpa[4]}`, value: `${nobe[4]}` },
						{ name: `${cpa[5]}`, value: `${nobe[5]}` },
						{ name: `${cpa[6]}`, value: `${nobe[6]}` },
						{ name: `${cpa[7]}`, value: `${nobe[7]}` },
						{ name: `${cpa[8]}`, value: `${nobe[8]}` },
						{ name: `${cpa[9]}`, value: `${nobe[9]}` },
						{ name: `${cpa[10]}`, value: `${nobe[10]}` },
						{ name: `${cpa[11]}`, value: `${nobe[11]}` },
						{ name: `${cpa[12]}`, value: `${nobe[12]}` },
						{ name: `${cpa[13]}`, value: `${nobe[13]}` },
						{ name: `${cpa[14]}`, value: `${nobe[14]}` },
						{ name: `${cpa[15]}`, value: `${nobe[15]}` },
						{ name: `${cpa[16]}`, value: `${nobe[16]}` }
					)
					.setImage(topimage)
					.setFooter('Join the thread to play!');
			else if (a.length == 18)
				initial1 = new MessageEmbed()
					.setColor('#36393F')
					.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
					.addFields(
						{ name: `${cpa[0]}`, value: `${nobe[0]}` },
						{ name: `${cpa[1]}`, value: `${nobe[1]}` },
						{ name: `${cpa[2]}`, value: `${nobe[2]}` },
						{ name: `${cpa[3]}`, value: `${nobe[3]}` },
						{ name: `${cpa[4]}`, value: `${nobe[4]}` },
						{ name: `${cpa[5]}`, value: `${nobe[5]}` },
						{ name: `${cpa[6]}`, value: `${nobe[6]}` },
						{ name: `${cpa[7]}`, value: `${nobe[7]}` },
						{ name: `${cpa[8]}`, value: `${nobe[8]}` },
						{ name: `${cpa[9]}`, value: `${nobe[9]}` },
						{ name: `${cpa[10]}`, value: `${nobe[10]}` },
						{ name: `${cpa[11]}`, value: `${nobe[11]}` },
						{ name: `${cpa[12]}`, value: `${nobe[12]}` },
						{ name: `${cpa[13]}`, value: `${nobe[13]}` },
						{ name: `${cpa[14]}`, value: `${nobe[14]}` },
						{ name: `${cpa[15]}`, value: `${nobe[15]}` },
						{ name: `${cpa[16]}`, value: `${nobe[16]}` },
						{ name: `${cpa[17]}`, value: `${nobe[17]}` }
					)
					.setImage(topimage)
					.setFooter('Join the thread to play!');
			else if (a.length == 19)
				initial1 = new MessageEmbed()
					.setColor('#36393F')
					.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
					.addFields(
						{ name: `${cpa[0]}`, value: `${nobe[0]}` },
						{ name: `${cpa[1]}`, value: `${nobe[1]}` },
						{ name: `${cpa[2]}`, value: `${nobe[2]}` },
						{ name: `${cpa[3]}`, value: `${nobe[3]}` },
						{ name: `${cpa[4]}`, value: `${nobe[4]}` },
						{ name: `${cpa[5]}`, value: `${nobe[5]}` },
						{ name: `${cpa[6]}`, value: `${nobe[6]}` },
						{ name: `${cpa[7]}`, value: `${nobe[7]}` },
						{ name: `${cpa[8]}`, value: `${nobe[8]}` },
						{ name: `${cpa[9]}`, value: `${nobe[9]}` },
						{ name: `${cpa[10]}`, value: `${nobe[10]}` },
						{ name: `${cpa[11]}`, value: `${nobe[11]}` },
						{ name: `${cpa[12]}`, value: `${nobe[12]}` },
						{ name: `${cpa[13]}`, value: `${nobe[13]}` },
						{ name: `${cpa[14]}`, value: `${nobe[14]}` },
						{ name: `${cpa[15]}`, value: `${nobe[15]}` },
						{ name: `${cpa[16]}`, value: `${nobe[16]}` },
						{ name: `${cpa[17]}`, value: `${nobe[17]}` },
						{ name: `${cpa[18]}`, value: `${nobe[18]}` }
					)
					.setImage(topimage)
					.setFooter('Join the thread to play!');
			else if (a.length == 20)
				initial1 = new MessageEmbed()
					.setColor('#36393F')
					.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
					.addFields(
						{ name: `${cpa[0]}`, value: `${nobe[0]}` },
						{ name: `${cpa[1]}`, value: `${nobe[1]}` },
						{ name: `${cpa[2]}`, value: `${nobe[2]}` },
						{ name: `${cpa[3]}`, value: `${nobe[3]}` },
						{ name: `${cpa[4]}`, value: `${nobe[4]}` },
						{ name: `${cpa[5]}`, value: `${nobe[5]}` },
						{ name: `${cpa[6]}`, value: `${nobe[6]}` },
						{ name: `${cpa[7]}`, value: `${nobe[7]}` },
						{ name: `${cpa[8]}`, value: `${nobe[8]}` },
						{ name: `${cpa[9]}`, value: `${nobe[9]}` },
						{ name: `${cpa[10]}`, value: `${nobe[10]}` },
						{ name: `${cpa[11]}`, value: `${nobe[11]}` },
						{ name: `${cpa[12]}`, value: `${nobe[12]}` },
						{ name: `${cpa[13]}`, value: `${nobe[13]}` },
						{ name: `${cpa[14]}`, value: `${nobe[14]}` },
						{ name: `${cpa[15]}`, value: `${nobe[15]}` },
						{ name: `${cpa[16]}`, value: `${nobe[16]}` },
						{ name: `${cpa[17]}`, value: `${nobe[17]}` },
						{ name: `${cpa[18]}`, value: `${nobe[18]}` },
						{ name: `${cpa[19]}`, value: `${nobe[19]}` }
					)
					.setImage(topimage)
					.setFooter('Join the thread to play!');
			else if (a.length == 21)
				initial1 = new MessageEmbed()
					.setColor('#36393F')
					.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
					.addFields(
						{ name: `${cpa[0]}`, value: `${nobe[0]}` },
						{ name: `${cpa[1]}`, value: `${nobe[1]}` },
						{ name: `${cpa[2]}`, value: `${nobe[2]}` },
						{ name: `${cpa[3]}`, value: `${nobe[3]}` },
						{ name: `${cpa[4]}`, value: `${nobe[4]}` },
						{ name: `${cpa[5]}`, value: `${nobe[5]}` },
						{ name: `${cpa[6]}`, value: `${nobe[6]}` },
						{ name: `${cpa[7]}`, value: `${nobe[7]}` },
						{ name: `${cpa[8]}`, value: `${nobe[8]}` },
						{ name: `${cpa[9]}`, value: `${nobe[9]}` },
						{ name: `${cpa[10]}`, value: `${nobe[10]}` },
						{ name: `${cpa[11]}`, value: `${nobe[11]}` },
						{ name: `${cpa[12]}`, value: `${nobe[12]}` },
						{ name: `${cpa[13]}`, value: `${nobe[13]}` },
						{ name: `${cpa[14]}`, value: `${nobe[14]}` },
						{ name: `${cpa[15]}`, value: `${nobe[15]}` },
						{ name: `${cpa[16]}`, value: `${nobe[16]}` },
						{ name: `${cpa[17]}`, value: `${nobe[17]}` },
						{ name: `${cpa[18]}`, value: `${nobe[18]}` },
						{ name: `${cpa[19]}`, value: `${nobe[19]}` },
						{ name: `${cpa[20]}`, value: `${nobe[20]}` }
					)
					.setImage(topimage)
					.setFooter('Join the thread to play!');
			else if (a.length == 22)
				initial1 = new MessageEmbed()
					.setColor('#36393F')
					.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
					.addFields(
						{ name: `${cpa[0]}`, value: `${nobe[0]}` },
						{ name: `${cpa[1]}`, value: `${nobe[1]}` },
						{ name: `${cpa[2]}`, value: `${nobe[2]}` },
						{ name: `${cpa[3]}`, value: `${nobe[3]}` },
						{ name: `${cpa[4]}`, value: `${nobe[4]}` },
						{ name: `${cpa[5]}`, value: `${nobe[5]}` },
						{ name: `${cpa[6]}`, value: `${nobe[6]}` },
						{ name: `${cpa[7]}`, value: `${nobe[7]}` },
						{ name: `${cpa[8]}`, value: `${nobe[8]}` },
						{ name: `${cpa[9]}`, value: `${nobe[9]}` },
						{ name: `${cpa[10]}`, value: `${nobe[10]}` },
						{ name: `${cpa[11]}`, value: `${nobe[11]}` },
						{ name: `${cpa[12]}`, value: `${nobe[12]}` },
						{ name: `${cpa[13]}`, value: `${nobe[13]}` },
						{ name: `${cpa[14]}`, value: `${nobe[14]}` },
						{ name: `${cpa[15]}`, value: `${nobe[15]}` },
						{ name: `${cpa[16]}`, value: `${nobe[16]}` },
						{ name: `${cpa[17]}`, value: `${nobe[17]}` },
						{ name: `${cpa[18]}`, value: `${nobe[18]}` },
						{ name: `${cpa[19]}`, value: `${nobe[19]}` },
						{ name: `${cpa[20]}`, value: `${nobe[20]}` },
						{ name: `${cpa[21]}`, value: `${nobe[21]}` }
					)
					.setImage(topimage)
					.setFooter('Join the thread to play!');
			else if (a.length == 23)
				initial1 = new MessageEmbed()
					.setColor('#36393F')
					.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
					.addFields(
						{ name: `${cpa[0]}`, value: `${nobe[0]}` },
						{ name: `${cpa[1]}`, value: `${nobe[1]}` },
						{ name: `${cpa[2]}`, value: `${nobe[2]}` },
						{ name: `${cpa[3]}`, value: `${nobe[3]}` },
						{ name: `${cpa[4]}`, value: `${nobe[4]}` },
						{ name: `${cpa[5]}`, value: `${nobe[5]}` },
						{ name: `${cpa[6]}`, value: `${nobe[6]}` },
						{ name: `${cpa[7]}`, value: `${nobe[7]}` },
						{ name: `${cpa[8]}`, value: `${nobe[8]}` },
						{ name: `${cpa[9]}`, value: `${nobe[9]}` },
						{ name: `${cpa[10]}`, value: `${nobe[10]}` },
						{ name: `${cpa[11]}`, value: `${nobe[11]}` },
						{ name: `${cpa[12]}`, value: `${nobe[12]}` },
						{ name: `${cpa[13]}`, value: `${nobe[13]}` },
						{ name: `${cpa[14]}`, value: `${nobe[14]}` },
						{ name: `${cpa[15]}`, value: `${nobe[15]}` },
						{ name: `${cpa[16]}`, value: `${nobe[16]}` },
						{ name: `${cpa[17]}`, value: `${nobe[17]}` },
						{ name: `${cpa[18]}`, value: `${nobe[18]}` },
						{ name: `${cpa[19]}`, value: `${nobe[19]}` },
						{ name: `${cpa[20]}`, value: `${nobe[20]}` },
						{ name: `${cpa[21]}`, value: `${nobe[21]}` },
						{ name: `${cpa[22]}`, value: `${nobe[22]}` }
					)
					.setImage(topimage)
					.setFooter('Join the thread to play!');
			else if (a.length == 24)
				initial1 = new MessageEmbed()
					.setColor('#36393F')
					.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
					.addFields(
						{ name: `${cpa[0]}`, value: `${nobe[0]}` },
						{ name: `${cpa[1]}`, value: `${nobe[1]}` },
						{ name: `${cpa[2]}`, value: `${nobe[2]}` },
						{ name: `${cpa[3]}`, value: `${nobe[3]}` },
						{ name: `${cpa[4]}`, value: `${nobe[4]}` },
						{ name: `${cpa[5]}`, value: `${nobe[5]}` },
						{ name: `${cpa[6]}`, value: `${nobe[6]}` },
						{ name: `${cpa[7]}`, value: `${nobe[7]}` },
						{ name: `${cpa[8]}`, value: `${nobe[8]}` },
						{ name: `${cpa[9]}`, value: `${nobe[9]}` },
						{ name: `${cpa[10]}`, value: `${nobe[10]}` },
						{ name: `${cpa[11]}`, value: `${nobe[11]}` },
						{ name: `${cpa[12]}`, value: `${nobe[12]}` },
						{ name: `${cpa[13]}`, value: `${nobe[13]}` },
						{ name: `${cpa[14]}`, value: `${nobe[14]}` },
						{ name: `${cpa[15]}`, value: `${nobe[15]}` },
						{ name: `${cpa[16]}`, value: `${nobe[16]}` },
						{ name: `${cpa[17]}`, value: `${nobe[17]}` },
						{ name: `${cpa[18]}`, value: `${nobe[18]}` },
						{ name: `${cpa[19]}`, value: `${nobe[19]}` },
						{ name: `${cpa[20]}`, value: `${nobe[20]}` },
						{ name: `${cpa[21]}`, value: `${nobe[21]}` },
						{ name: `${cpa[22]}`, value: `${nobe[22]}` },
						{ name: `${cpa[23]}`, value: `${nobe[23]}` }
					)
					.setImage(topimage)
					.setFooter('Join the thread to play!');
			else if (a.length == 25)
				initial1 = new MessageEmbed()
					.setColor('#36393F')
					.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
					.addFields(
						{ name: `${cpa[0]}`, value: `${nobe[0]}` },
						{ name: `${cpa[1]}`, value: `${nobe[1]}` },
						{ name: `${cpa[2]}`, value: `${nobe[2]}` },
						{ name: `${cpa[3]}`, value: `${nobe[3]}` },
						{ name: `${cpa[4]}`, value: `${nobe[4]}` },
						{ name: `${cpa[5]}`, value: `${nobe[5]}` },
						{ name: `${cpa[6]}`, value: `${nobe[6]}` },
						{ name: `${cpa[7]}`, value: `${nobe[7]}` },
						{ name: `${cpa[8]}`, value: `${nobe[8]}` },
						{ name: `${cpa[9]}`, value: `${nobe[9]}` },
						{ name: `${cpa[10]}`, value: `${nobe[10]}` },
						{ name: `${cpa[11]}`, value: `${nobe[11]}` },
						{ name: `${cpa[12]}`, value: `${nobe[12]}` },
						{ name: `${cpa[13]}`, value: `${nobe[13]}` },
						{ name: `${cpa[14]}`, value: `${nobe[14]}` },
						{ name: `${cpa[15]}`, value: `${nobe[15]}` },
						{ name: `${cpa[16]}`, value: `${nobe[16]}` },
						{ name: `${cpa[17]}`, value: `${nobe[17]}` },
						{ name: `${cpa[18]}`, value: `${nobe[18]}` },
						{ name: `${cpa[19]}`, value: `${nobe[19]}` },
						{ name: `${cpa[20]}`, value: `${nobe[20]}` },
						{ name: `${cpa[21]}`, value: `${nobe[21]}` },
						{ name: `${cpa[22]}`, value: `${nobe[22]}` },
						{ name: `${cpa[23]}`, value: `${nobe[23]}` },
						{ name: `${cpa[24]}`, value: `${nobe[24]}` }

					)
					.setImage(topimage)
					.setFooter('Join the thread to play!');
			crbe = new MessageEmbed()
				.setColor('#36393F')
				.setTitle(`:green_circle: ${a[Args.user]}'s turn`)
				.setTimestamp();

			const t2nd = new MessageActionRow()
				.addComponents(
					new MessageButton()
						.setCustomId('Reveal')
						.setLabel('Reveal Hand')
						.setStyle('SUCCESS')
					,
					new MessageButton()
						.setCustomId('Suno')
						.setLabel('Say UNO')
						.setStyle('PRIMARY')
					,
					new MessageButton()
						.setCustomId('Leave Game')
						.setLabel('Leave Game')
						.setStyle('DANGER')
				);

			m.edit({ content: 'Thread open!', embeds: [starttrd], components: [], fetchReply: true });

			const thread = await m.startThread({
				name: `UNO by ${interaction.user.username}`,
				autoArchiveDuration: 60,
				reason: 'Join the thread to play!',

			});

			thread.send({ embeds: [initial] });
			const klm = await thread.send({ embeds: [initial1, crbe], components: [t2nd], fetchReply: true });
			collector.stop();

			const collector1 = klm.createMessageComponentCollector({
				type: "BUTTON",
				time: 1200000
			});
			supe = [];
			sups = [];
			supr = [];
			supb = [];
			supv = [];
			supc = [];
			supst = [];
			crb1 = [];
			crb2 = [];
			crb3 = [];
			crb4 = [];
			disp = [];
			intrbut = [];
			imp = [];
			impr = [];
			

			//1
			const shuffled0 = cards.sort(() => 0.5 - Math.random());

			// Get sub-array of first n elements after shuffled
			let ran0 = shuffled0.slice(0, 50);
			sup1 = ran0[0];sup2 = ran0[1];sup3 = ran0[2];sup4 = ran0[3];sup5 = ran0[4];sup6 = ran0[5];sup7 = ran0[6];sup8 = ran0[7];sup9 = ran0[8];sup10 = ran0[9];
			sup11 = ran0[10];sup12 = ran0[11];sup13 = ran0[12];sup14 = ran0[13];sup15 = ran0[14];sup16 = ran0[15];sup17 = ran0[16];sup18 = ran0[17];sup19 = ran0[18];sup20 = ran0[19];
			sup21 = ran0[20];sup22 = ran0[21];sup23 = ran0[22];sup24 = ran0[23];sup25 = ran0[24];sup26 = ran0[25];sup27 = ran0[26];sup28 = ran0[27];sup29 = ran0[28];sup30 = ran0[29];
			sup31 = ran0[30];sup32 = ran0[31];sup33 = ran0[32];sup34 = ran0[33];sup35 = ran0[34];sup36 = ran0[35];sup37 = ran0[36];sup38 = ran0[37];sup39 = ran0[38];sup40 = ran0[39];
			sup41 = ran0[40];sup42 = ran0[41];sup43 = ran0[42];sup44 = ran0[43];sup45 = ran0[44];sup46 = ran0[45];sup47 = ran0[46];sup48 = ran0[47];sup49 = ran0[48];sup50 = ran0[49];


			supe[0] = [sup1.emoji,sup2.emoji,sup3.emoji,sup4.emoji,sup5.emoji,sup6.emoji,sup7.emoji, sup8.emoji, sup9.emoji, sup10.emoji,
			sup11.emoji, sup12.emoji, sup13.emoji, sup14.emoji, sup15.emoji, sup16.emoji, sup17.emoji, sup18.emoji, sup19.emoji, sup20.emoji,
			sup21.emoji, sup22.emoji, sup23.emoji, sup24.emoji, sup25.emoji, sup26.emoji, sup27.emoji, sup28.emoji, sup29.emoji, sup30.emoji,
			sup31.emoji, sup32.emoji, sup33.emoji, sup34.emoji, sup35.emoji, sup36.emoji, sup37.emoji, sup38.emoji, sup39.emoji, sup40.emoji,
			sup41.emoji, sup42.emoji, sup43.emoji, sup44.emoji, sup45.emoji, sup46.emoji, sup47.emoji, sup48.emoji, sup49.emoji, sup50.emoji]
			
			sups[0] = [sup1.sn,sup2.sn,sup3.sn,sup4.sn,sup5.sn,sup6.sn,sup7.sn, sup8.sn, sup9.sn, sup10.sn,
				sup11.sn, sup12.sn, sup13.sn, sup14.sn, sup15.sn, sup16.sn, sup17.sn, sup18.sn, sup19.sn, sup20.sn,
				sup21.sn, sup22.sn, sup23.sn, sup24.sn, sup25.sn, sup26.sn, sup27.sn, sup28.sn, sup29.sn, sup30.sn,
				sup31.sn, sup32.sn, sup33.sn, sup34.sn, sup35.sn, sup36.sn, sup37.sn, sup38.sn, sup39.sn, sup40.sn,
				sup41.sn, sup42.sn, sup43.sn, sup44.sn, sup45.sn, sup46.sn, sup47.sn, sup48.sn, sup49.sn, sup50.sn]
				
				supr[0] = [sup1.name,sup2.name,sup3.name,sup4.name,sup5.name,sup6.name,sup7.name, sup8.name, sup9.name, sup10.name,
					sup11.name, sup12.name, sup13.name, sup14.name, sup15.name, sup16.name, sup17.name, sup18.name, sup19.name, sup20.name,
					sup21.name, sup22.name, sup23.name, sup24.name, sup25.name, sup26.name, sup27.name, sup28.name, sup29.name, sup30.name,
					sup31.name, sup32.name, sup33.name, sup34.name, sup35.name, sup36.name, sup37.name, sup38.name, sup39.name, sup40.name,
					sup41.name, sup42.name, sup43.name, sup44.name, sup45.name, sup46.name, sup47.name, sup48.name, sup49.name, sup50.name]
					
			
					supv[0] = [sup1.value,sup2.value,sup3.value,sup4.value,sup5.value,sup6.value,sup7.value, sup8.value, sup9.value, sup10.value,
						sup11.value, sup12.value, sup13.value, sup14.value, sup15.value, sup16.value, sup17.value, sup18.value, sup19.value, sup20.value,
						sup21.value, sup22.value, sup23.value, sup24.value, sup25.value, sup26.value, sup27.value, sup28.value, sup29.value, sup30.value,
						sup31.value, sup32.value, sup33.value, sup34.value, sup35.value, sup36.value, sup37.value, sup38.value, sup39.value, sup40.value,
						sup41.value, sup42.value, sup43.value, sup44.value, sup45.value, sup46.value, sup47.value, sup48.value, sup49.value, sup50.value]
						
						supc[0] = [sup1.color,sup2.color,sup3.color,sup4.color,sup5.color,sup6.color,sup7.color, sup8.color, sup9.color, sup10.color,
							sup11.color, sup12.color, sup13.color, sup14.color, sup15.color, sup16.color, sup17.color, sup18.color, sup19.color, sup20.color,
							sup21.color, sup22.color, sup23.color, sup24.color, sup25.color, sup26.color, sup27.color, sup28.color, sup29.color, sup30.color,
							sup31.color, sup32.color, sup33.color, sup34.color, sup35.color, sup36.color, sup37.color, sup38.color, sup39.color, sup40.color,
							sup41.color, sup42.color, sup43.color, sup44.color, sup45.color, sup46.color, sup47.color, sup48.color, sup49.color, sup50.color]
							
			supb[0] = [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false,
				false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false,
				false, false, false, false, false];
			
			supst[0] = ['SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY',
			'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY',
			'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY']
			//2
			/////to be fitted in line15613




const shuffled1 = cards.sort(() => 0.5 - Math.random());

// Get sub-array of first n elements after shuffled
let ran1 = shuffled1.slice(0, 50);
sup1 = ran1[0];sup2 = ran1[1];sup3 = ran1[2];sup4 = ran1[3];sup5 = ran1[4];sup6 = ran1[5];sup7 = ran1[6];sup8 = ran1[7];sup9 = ran1[8];sup10 = ran1[9];
sup11 = ran1[10];sup12 = ran1[11];sup13 = ran1[12];sup14 = ran1[13];sup15 = ran1[14];sup16 = ran1[15];sup17 = ran1[16];sup18 = ran1[17];sup19 = ran1[18];sup20 = ran1[19];
sup21 = ran1[20];sup22 = ran1[21];sup23 = ran1[22];sup24 = ran1[23];sup25 = ran1[24];sup26 = ran1[25];sup27 = ran1[26];sup28 = ran1[27];sup29 = ran1[28];sup30 = ran1[29];
sup31 = ran1[30];sup32 = ran1[31];sup33 = ran1[32];sup34 = ran1[33];sup35 = ran1[34];sup36 = ran1[35];sup37 = ran1[36];sup38 = ran1[37];sup39 = ran1[38];sup40 = ran1[39];
sup41 = ran1[40];sup42 = ran1[41];sup43 = ran1[42];sup44 = ran1[43];sup45 = ran1[44];sup46 = ran1[45];sup47 = ran1[46];sup48 = ran1[47];sup49 = ran1[48];sup50 = ran1[49];


supe[1] = [sup1.emoji,sup2.emoji,sup3.emoji,sup4.emoji,sup5.emoji,sup6.emoji,sup7.emoji, sup8.emoji, sup9.emoji, sup10.emoji,
sup11.emoji, sup12.emoji, sup13.emoji, sup14.emoji, sup15.emoji, sup16.emoji, sup17.emoji, sup18.emoji, sup19.emoji, sup20.emoji,
sup21.emoji, sup22.emoji, sup23.emoji, sup24.emoji, sup25.emoji, sup26.emoji, sup27.emoji, sup28.emoji, sup29.emoji, sup30.emoji,
sup31.emoji, sup32.emoji, sup33.emoji, sup34.emoji, sup35.emoji, sup36.emoji, sup37.emoji, sup38.emoji, sup39.emoji, sup40.emoji,
sup41.emoji, sup42.emoji, sup43.emoji, sup44.emoji, sup45.emoji, sup46.emoji, sup47.emoji, sup48.emoji, sup49.emoji, sup50.emoji]

sups[1] = [sup1.sn,sup2.sn,sup3.sn,sup4.sn,sup5.sn,sup6.sn,sup7.sn, sup8.sn, sup9.sn, sup10.sn,
	sup11.sn, sup12.sn, sup13.sn, sup14.sn, sup15.sn, sup16.sn, sup17.sn, sup18.sn, sup19.sn, sup20.sn,
	sup21.sn, sup22.sn, sup23.sn, sup24.sn, sup25.sn, sup26.sn, sup27.sn, sup28.sn, sup29.sn, sup30.sn,
	sup31.sn, sup32.sn, sup33.sn, sup34.sn, sup35.sn, sup36.sn, sup37.sn, sup38.sn, sup39.sn, sup40.sn,
	sup41.sn, sup42.sn, sup43.sn, sup44.sn, sup45.sn, sup46.sn, sup47.sn, sup48.sn, sup49.sn, sup50.sn]
	
	supr[1] = [sup1.name,sup2.name,sup3.name,sup4.name,sup5.name,sup6.name,sup7.name, sup8.name, sup9.name, sup10.name,
		sup11.name, sup12.name, sup13.name, sup14.name, sup15.name, sup16.name, sup17.name, sup18.name, sup19.name, sup20.name,
		sup21.name, sup22.name, sup23.name, sup24.name, sup25.name, sup26.name, sup27.name, sup28.name, sup29.name, sup30.name,
		sup31.name, sup32.name, sup33.name, sup34.name, sup35.name, sup36.name, sup37.name, sup38.name, sup39.name, sup40.name,
		sup41.name, sup42.name, sup43.name, sup44.name, sup45.name, sup46.name, sup47.name, sup48.name, sup49.name, sup50.name]
		

		supv[1] = [sup1.value,sup2.value,sup3.value,sup4.value,sup5.value,sup6.value,sup7.value, sup8.value, sup9.value, sup10.value,
			sup11.value, sup12.value, sup13.value, sup14.value, sup15.value, sup16.value, sup17.value, sup18.value, sup19.value, sup20.value,
			sup21.value, sup22.value, sup23.value, sup24.value, sup25.value, sup26.value, sup27.value, sup28.value, sup29.value, sup30.value,
			sup31.value, sup32.value, sup33.value, sup34.value, sup35.value, sup36.value, sup37.value, sup38.value, sup39.value, sup40.value,
			sup41.value, sup42.value, sup43.value, sup44.value, sup45.value, sup46.value, sup47.value, sup48.value, sup49.value, sup50.value]
			
			supc[1] = [sup1.color,sup2.color,sup3.color,sup4.color,sup5.color,sup6.color,sup7.color, sup8.color, sup9.color, sup10.color,
				sup11.color, sup12.color, sup13.color, sup14.color, sup15.color, sup16.color, sup17.color, sup18.color, sup19.color, sup20.color,
				sup21.color, sup22.color, sup23.color, sup24.color, sup25.color, sup26.color, sup27.color, sup28.color, sup29.color, sup30.color,
				sup31.color, sup32.color, sup33.color, sup34.color, sup35.color, sup36.color, sup37.color, sup38.color, sup39.color, sup40.color,
				sup41.color, sup42.color, sup43.color, sup44.color, sup45.color, sup46.color, sup47.color, sup48.color, sup49.color, sup50.color]
				
supb[1] = [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false,
	false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false,
	false, false, false, false, false];

supst[1] = ['SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY',
'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY',
'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY']
//3
/////to be fitted in line15613




const shuffled2 = cards.sort(() => 0.5 - Math.random());

			// Get sub-array of first n elements after shuffled
			let ran2 = shuffled2.slice(0, 50);
			sup1 = ran2[0];sup2 = ran2[1];sup3 = ran2[2];sup4 = ran2[3];sup5 = ran2[4];sup6 = ran2[5];sup7 = ran2[6];sup8 = ran2[7];sup9 = ran2[8];sup10 = ran2[9];
			sup11 = ran2[10];sup12 = ran2[11];sup13 = ran2[12];sup14 = ran2[13];sup15 = ran2[14];sup16 = ran2[15];sup17 = ran2[16];sup18 = ran2[17];sup19 = ran2[18];sup20 = ran2[19];
			sup21 = ran2[20];sup22 = ran2[21];sup23 = ran2[22];sup24 = ran2[23];sup25 = ran2[24];sup26 = ran2[25];sup27 = ran2[26];sup28 = ran2[27];sup29 = ran2[28];sup30 = ran2[29];
			sup31 = ran2[30];sup32 = ran2[31];sup33 = ran2[32];sup34 = ran2[33];sup35 = ran2[34];sup36 = ran2[35];sup37 = ran2[36];sup38 = ran2[37];sup39 = ran2[38];sup40 = ran2[39];
			sup41 = ran2[40];sup42 = ran2[41];sup43 = ran2[42];sup44 = ran2[43];sup45 = ran2[44];sup46 = ran2[45];sup47 = ran2[46];sup48 = ran2[47];sup49 = ran2[48];sup50 = ran2[49];


			supe[2] = [sup1.emoji,sup2.emoji,sup3.emoji,sup4.emoji,sup5.emoji,sup6.emoji,sup7.emoji, sup8.emoji, sup9.emoji, sup10.emoji,
			sup11.emoji, sup12.emoji, sup13.emoji, sup14.emoji, sup15.emoji, sup16.emoji, sup17.emoji, sup18.emoji, sup19.emoji, sup20.emoji,
			sup21.emoji, sup22.emoji, sup23.emoji, sup24.emoji, sup25.emoji, sup26.emoji, sup27.emoji, sup28.emoji, sup29.emoji, sup30.emoji,
			sup31.emoji, sup32.emoji, sup33.emoji, sup34.emoji, sup35.emoji, sup36.emoji, sup37.emoji, sup38.emoji, sup39.emoji, sup40.emoji,
			sup41.emoji, sup42.emoji, sup43.emoji, sup44.emoji, sup45.emoji, sup46.emoji, sup47.emoji, sup48.emoji, sup49.emoji, sup50.emoji]
			
			sups[2] = [sup1.sn,sup2.sn,sup3.sn,sup4.sn,sup5.sn,sup6.sn,sup7.sn, sup8.sn, sup9.sn, sup10.sn,
				sup11.sn, sup12.sn, sup13.sn, sup14.sn, sup15.sn, sup16.sn, sup17.sn, sup18.sn, sup19.sn, sup20.sn,
				sup21.sn, sup22.sn, sup23.sn, sup24.sn, sup25.sn, sup26.sn, sup27.sn, sup28.sn, sup29.sn, sup30.sn,
				sup31.sn, sup32.sn, sup33.sn, sup34.sn, sup35.sn, sup36.sn, sup37.sn, sup38.sn, sup39.sn, sup40.sn,
				sup41.sn, sup42.sn, sup43.sn, sup44.sn, sup45.sn, sup46.sn, sup47.sn, sup48.sn, sup49.sn, sup50.sn]
				
				supr[2] = [sup1.name,sup2.name,sup3.name,sup4.name,sup5.name,sup6.name,sup7.name, sup8.name, sup9.name, sup10.name,
					sup11.name, sup12.name, sup13.name, sup14.name, sup15.name, sup16.name, sup17.name, sup18.name, sup19.name, sup20.name,
					sup21.name, sup22.name, sup23.name, sup24.name, sup25.name, sup26.name, sup27.name, sup28.name, sup29.name, sup30.name,
					sup31.name, sup32.name, sup33.name, sup34.name, sup35.name, sup36.name, sup37.name, sup38.name, sup39.name, sup40.name,
					sup41.name, sup42.name, sup43.name, sup44.name, sup45.name, sup46.name, sup47.name, sup48.name, sup49.name, sup50.name]
					
			
					supv[2] = [sup1.value,sup2.value,sup3.value,sup4.value,sup5.value,sup6.value,sup7.value, sup8.value, sup9.value, sup10.value,
						sup11.value, sup12.value, sup13.value, sup14.value, sup15.value, sup16.value, sup17.value, sup18.value, sup19.value, sup20.value,
						sup21.value, sup22.value, sup23.value, sup24.value, sup25.value, sup26.value, sup27.value, sup28.value, sup29.value, sup30.value,
						sup31.value, sup32.value, sup33.value, sup34.value, sup35.value, sup36.value, sup37.value, sup38.value, sup39.value, sup40.value,
						sup41.value, sup42.value, sup43.value, sup44.value, sup45.value, sup46.value, sup47.value, sup48.value, sup49.value, sup50.value]
						
						supc[2] = [sup1.color,sup2.color,sup3.color,sup4.color,sup5.color,sup6.color,sup7.color, sup8.color, sup9.color, sup10.color,
							sup11.color, sup12.color, sup13.color, sup14.color, sup15.color, sup16.color, sup17.color, sup18.color, sup19.color, sup20.color,
							sup21.color, sup22.color, sup23.color, sup24.color, sup25.color, sup26.color, sup27.color, sup28.color, sup29.color, sup30.color,
							sup31.color, sup32.color, sup33.color, sup34.color, sup35.color, sup36.color, sup37.color, sup38.color, sup39.color, sup40.color,
							sup41.color, sup42.color, sup43.color, sup44.color, sup45.color, sup46.color, sup47.color, sup48.color, sup49.color, sup50.color]
							
			supb[2] = [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false,
				false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false,
				false, false, false, false, false];
			
			supst[2] = ['SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY',
			'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY',
			'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY']
			//4
			/////to be fitted in line15613




const shuffled3 = cards.sort(() => 0.5 - Math.random());

// Get sub-array of first n elements after shuffled
let ran3 = shuffled3.slice(0, 50);
sup1 = ran3[0];sup2 = ran3[1];sup3 = ran3[2];sup4 = ran3[3];sup5 = ran3[4];sup6 = ran3[5];sup7 = ran3[6];sup8 = ran3[7];sup9 = ran3[8];sup10 = ran3[9];
sup11 = ran3[10];sup12 = ran3[11];sup13 = ran3[12];sup14 = ran3[13];sup15 = ran3[14];sup16 = ran3[15];sup17 = ran3[16];sup18 = ran3[17];sup19 = ran3[18];sup20 = ran3[19];
sup21 = ran3[20];sup22 = ran3[21];sup23 = ran3[22];sup24 = ran3[23];sup25 = ran3[24];sup26 = ran3[25];sup27 = ran3[26];sup28 = ran3[27];sup29 = ran3[28];sup30 = ran3[29];
sup31 = ran3[30];sup32 = ran3[31];sup33 = ran3[32];sup34 = ran3[33];sup35 = ran3[34];sup36 = ran3[35];sup37 = ran3[36];sup38 = ran3[37];sup39 = ran3[38];sup40 = ran3[39];
sup41 = ran3[40];sup42 = ran3[41];sup43 = ran3[42];sup44 = ran3[43];sup45 = ran3[44];sup46 = ran3[45];sup47 = ran3[46];sup48 = ran3[47];sup49 = ran3[48];sup50 = ran3[49];


supe[3] = [sup1.emoji,sup2.emoji,sup3.emoji,sup4.emoji,sup5.emoji,sup6.emoji,sup7.emoji, sup8.emoji, sup9.emoji, sup10.emoji,
sup11.emoji, sup12.emoji, sup13.emoji, sup14.emoji, sup15.emoji, sup16.emoji, sup17.emoji, sup18.emoji, sup19.emoji, sup20.emoji,
sup21.emoji, sup22.emoji, sup23.emoji, sup24.emoji, sup25.emoji, sup26.emoji, sup27.emoji, sup28.emoji, sup29.emoji, sup30.emoji,
sup31.emoji, sup32.emoji, sup33.emoji, sup34.emoji, sup35.emoji, sup36.emoji, sup37.emoji, sup38.emoji, sup39.emoji, sup40.emoji,
sup41.emoji, sup42.emoji, sup43.emoji, sup44.emoji, sup45.emoji, sup46.emoji, sup47.emoji, sup48.emoji, sup49.emoji, sup50.emoji]

sups[3] = [sup1.sn,sup2.sn,sup3.sn,sup4.sn,sup5.sn,sup6.sn,sup7.sn, sup8.sn, sup9.sn, sup10.sn,
	sup11.sn, sup12.sn, sup13.sn, sup14.sn, sup15.sn, sup16.sn, sup17.sn, sup18.sn, sup19.sn, sup20.sn,
	sup21.sn, sup22.sn, sup23.sn, sup24.sn, sup25.sn, sup26.sn, sup27.sn, sup28.sn, sup29.sn, sup30.sn,
	sup31.sn, sup32.sn, sup33.sn, sup34.sn, sup35.sn, sup36.sn, sup37.sn, sup38.sn, sup39.sn, sup40.sn,
	sup41.sn, sup42.sn, sup43.sn, sup44.sn, sup45.sn, sup46.sn, sup47.sn, sup48.sn, sup49.sn, sup50.sn]
	
	supr[3] = [sup1.name,sup2.name,sup3.name,sup4.name,sup5.name,sup6.name,sup7.name, sup8.name, sup9.name, sup10.name,
		sup11.name, sup12.name, sup13.name, sup14.name, sup15.name, sup16.name, sup17.name, sup18.name, sup19.name, sup20.name,
		sup21.name, sup22.name, sup23.name, sup24.name, sup25.name, sup26.name, sup27.name, sup28.name, sup29.name, sup30.name,
		sup31.name, sup32.name, sup33.name, sup34.name, sup35.name, sup36.name, sup37.name, sup38.name, sup39.name, sup40.name,
		sup41.name, sup42.name, sup43.name, sup44.name, sup45.name, sup46.name, sup47.name, sup48.name, sup49.name, sup50.name]
		

		supv[3] = [sup1.value,sup2.value,sup3.value,sup4.value,sup5.value,sup6.value,sup7.value, sup8.value, sup9.value, sup10.value,
			sup11.value, sup12.value, sup13.value, sup14.value, sup15.value, sup16.value, sup17.value, sup18.value, sup19.value, sup20.value,
			sup21.value, sup22.value, sup23.value, sup24.value, sup25.value, sup26.value, sup27.value, sup28.value, sup29.value, sup30.value,
			sup31.value, sup32.value, sup33.value, sup34.value, sup35.value, sup36.value, sup37.value, sup38.value, sup39.value, sup40.value,
			sup41.value, sup42.value, sup43.value, sup44.value, sup45.value, sup46.value, sup47.value, sup48.value, sup49.value, sup50.value]
			
			supc[3] = [sup1.color,sup2.color,sup3.color,sup4.color,sup5.color,sup6.color,sup7.color, sup8.color, sup9.color, sup10.color,
				sup11.color, sup12.color, sup13.color, sup14.color, sup15.color, sup16.color, sup17.color, sup18.color, sup19.color, sup20.color,
				sup21.color, sup22.color, sup23.color, sup24.color, sup25.color, sup26.color, sup27.color, sup28.color, sup29.color, sup30.color,
				sup31.color, sup32.color, sup33.color, sup34.color, sup35.color, sup36.color, sup37.color, sup38.color, sup39.color, sup40.color,
				sup41.color, sup42.color, sup43.color, sup44.color, sup45.color, sup46.color, sup47.color, sup48.color, sup49.color, sup50.color]
				
supb[3] = [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false,
	false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false,
	false, false, false, false, false];

supst[3] = ['SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY',
'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY',
'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY']
/////to be fitted in line15613




const shuffled4 = cards.sort(() => 0.5 - Math.random());

			// Get sub-array of first n elements after shuffled
			let ran4 = shuffled4.slice(0, 50);
			sup1 = ran4[0];sup2 = ran4[1];sup3 = ran4[2];sup4 = ran4[3];sup5 = ran4[4];sup6 = ran4[5];sup7 = ran4[6];sup8 = ran4[7];sup9 = ran4[8];sup10 = ran4[9];
			sup11 = ran4[10];sup12 = ran4[11];sup13 = ran4[12];sup14 = ran4[13];sup15 = ran4[14];sup16 = ran4[15];sup17 = ran4[16];sup18 = ran4[17];sup19 = ran4[18];sup20 = ran4[19];
			sup21 = ran4[20];sup22 = ran4[21];sup23 = ran4[22];sup24 = ran4[23];sup25 = ran4[24];sup26 = ran4[25];sup27 = ran4[26];sup28 = ran4[27];sup29 = ran4[28];sup30 = ran4[29];
			sup31 = ran4[30];sup32 = ran4[31];sup33 = ran4[32];sup34 = ran4[33];sup35 = ran4[34];sup36 = ran4[35];sup37 = ran4[36];sup38 = ran4[37];sup39 = ran4[38];sup40 = ran4[39];
			sup41 = ran4[40];sup42 = ran4[41];sup43 = ran4[42];sup44 = ran4[43];sup45 = ran4[44];sup46 = ran4[45];sup47 = ran4[46];sup48 = ran4[47];sup49 = ran4[48];sup50 = ran4[49];


			supe[4] = [sup1.emoji,sup2.emoji,sup3.emoji,sup4.emoji,sup5.emoji,sup6.emoji,sup7.emoji, sup8.emoji, sup9.emoji, sup10.emoji,
			sup11.emoji, sup12.emoji, sup13.emoji, sup14.emoji, sup15.emoji, sup16.emoji, sup17.emoji, sup18.emoji, sup19.emoji, sup20.emoji,
			sup21.emoji, sup22.emoji, sup23.emoji, sup24.emoji, sup25.emoji, sup26.emoji, sup27.emoji, sup28.emoji, sup29.emoji, sup30.emoji,
			sup31.emoji, sup32.emoji, sup33.emoji, sup34.emoji, sup35.emoji, sup36.emoji, sup37.emoji, sup38.emoji, sup39.emoji, sup40.emoji,
			sup41.emoji, sup42.emoji, sup43.emoji, sup44.emoji, sup45.emoji, sup46.emoji, sup47.emoji, sup48.emoji, sup49.emoji, sup50.emoji]
			
			sups[4] = [sup1.sn,sup2.sn,sup3.sn,sup4.sn,sup5.sn,sup6.sn,sup7.sn, sup8.sn, sup9.sn, sup10.sn,
				sup11.sn, sup12.sn, sup13.sn, sup14.sn, sup15.sn, sup16.sn, sup17.sn, sup18.sn, sup19.sn, sup20.sn,
				sup21.sn, sup22.sn, sup23.sn, sup24.sn, sup25.sn, sup26.sn, sup27.sn, sup28.sn, sup29.sn, sup30.sn,
				sup31.sn, sup32.sn, sup33.sn, sup34.sn, sup35.sn, sup36.sn, sup37.sn, sup38.sn, sup39.sn, sup40.sn,
				sup41.sn, sup42.sn, sup43.sn, sup44.sn, sup45.sn, sup46.sn, sup47.sn, sup48.sn, sup49.sn, sup50.sn]
				
				supr[4] = [sup1.name,sup2.name,sup3.name,sup4.name,sup5.name,sup6.name,sup7.name, sup8.name, sup9.name, sup10.name,
					sup11.name, sup12.name, sup13.name, sup14.name, sup15.name, sup16.name, sup17.name, sup18.name, sup19.name, sup20.name,
					sup21.name, sup22.name, sup23.name, sup24.name, sup25.name, sup26.name, sup27.name, sup28.name, sup29.name, sup30.name,
					sup31.name, sup32.name, sup33.name, sup34.name, sup35.name, sup36.name, sup37.name, sup38.name, sup39.name, sup40.name,
					sup41.name, sup42.name, sup43.name, sup44.name, sup45.name, sup46.name, sup47.name, sup48.name, sup49.name, sup50.name]
					
			
					supv[4] = [sup1.value,sup2.value,sup3.value,sup4.value,sup5.value,sup6.value,sup7.value, sup8.value, sup9.value, sup10.value,
						sup11.value, sup12.value, sup13.value, sup14.value, sup15.value, sup16.value, sup17.value, sup18.value, sup19.value, sup20.value,
						sup21.value, sup22.value, sup23.value, sup24.value, sup25.value, sup26.value, sup27.value, sup28.value, sup29.value, sup30.value,
						sup31.value, sup32.value, sup33.value, sup34.value, sup35.value, sup36.value, sup37.value, sup38.value, sup39.value, sup40.value,
						sup41.value, sup42.value, sup43.value, sup44.value, sup45.value, sup46.value, sup47.value, sup48.value, sup49.value, sup50.value]
						
						supc[4] = [sup1.color,sup2.color,sup3.color,sup4.color,sup5.color,sup6.color,sup7.color, sup8.color, sup9.color, sup10.color,
							sup11.color, sup12.color, sup13.color, sup14.color, sup15.color, sup16.color, sup17.color, sup18.color, sup19.color, sup20.color,
							sup21.color, sup22.color, sup23.color, sup24.color, sup25.color, sup26.color, sup27.color, sup28.color, sup29.color, sup30.color,
							sup31.color, sup32.color, sup33.color, sup34.color, sup35.color, sup36.color, sup37.color, sup38.color, sup39.color, sup40.color,
							sup41.color, sup42.color, sup43.color, sup44.color, sup45.color, sup46.color, sup47.color, sup48.color, sup49.color, sup50.color]
							
			supb[4] = [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false,
				false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false,
				false, false, false, false, false];
			
			supst[4] = ['SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY',
			'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY',
			'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY']
			/////to be fitted in line15613




const shuffled5 = cards.sort(() => 0.5 - Math.random());

// Get sub-array of first n elements after shuffled
let ran5 = shuffled5.slice(0, 50);
sup1 = ran5[0];sup2 = ran5[1];sup3 = ran5[2];sup4 = ran5[3];sup5 = ran5[4];sup6 = ran5[5];sup7 = ran5[6];sup8 = ran5[7];sup9 = ran5[8];sup10 = ran5[9];
sup11 = ran5[10];sup12 = ran5[11];sup13 = ran5[12];sup14 = ran5[13];sup15 = ran5[14];sup16 = ran5[15];sup17 = ran5[16];sup18 = ran5[17];sup19 = ran5[18];sup20 = ran5[19];
sup21 = ran5[20];sup22 = ran5[21];sup23 = ran5[22];sup24 = ran5[23];sup25 = ran5[24];sup26 = ran5[25];sup27 = ran5[26];sup28 = ran5[27];sup29 = ran5[28];sup30 = ran5[29];
sup31 = ran5[30];sup32 = ran5[31];sup33 = ran5[32];sup34 = ran5[33];sup35 = ran5[34];sup36 = ran5[35];sup37 = ran5[36];sup38 = ran5[37];sup39 = ran5[38];sup40 = ran5[39];
sup41 = ran5[40];sup42 = ran5[41];sup43 = ran5[42];sup44 = ran5[43];sup45 = ran5[44];sup46 = ran5[45];sup47 = ran5[46];sup48 = ran5[47];sup49 = ran5[48];sup50 = ran5[49];


supe[5] = [sup1.emoji,sup2.emoji,sup3.emoji,sup4.emoji,sup5.emoji,sup6.emoji,sup7.emoji, sup8.emoji, sup9.emoji, sup10.emoji,
sup11.emoji, sup12.emoji, sup13.emoji, sup14.emoji, sup15.emoji, sup16.emoji, sup17.emoji, sup18.emoji, sup19.emoji, sup20.emoji,
sup21.emoji, sup22.emoji, sup23.emoji, sup24.emoji, sup25.emoji, sup26.emoji, sup27.emoji, sup28.emoji, sup29.emoji, sup30.emoji,
sup31.emoji, sup32.emoji, sup33.emoji, sup34.emoji, sup35.emoji, sup36.emoji, sup37.emoji, sup38.emoji, sup39.emoji, sup40.emoji,
sup41.emoji, sup42.emoji, sup43.emoji, sup44.emoji, sup45.emoji, sup46.emoji, sup47.emoji, sup48.emoji, sup49.emoji, sup50.emoji]

sups[5] = [sup1.sn,sup2.sn,sup3.sn,sup4.sn,sup5.sn,sup6.sn,sup7.sn, sup8.sn, sup9.sn, sup10.sn,
	sup11.sn, sup12.sn, sup13.sn, sup14.sn, sup15.sn, sup16.sn, sup17.sn, sup18.sn, sup19.sn, sup20.sn,
	sup21.sn, sup22.sn, sup23.sn, sup24.sn, sup25.sn, sup26.sn, sup27.sn, sup28.sn, sup29.sn, sup30.sn,
	sup31.sn, sup32.sn, sup33.sn, sup34.sn, sup35.sn, sup36.sn, sup37.sn, sup38.sn, sup39.sn, sup40.sn,
	sup41.sn, sup42.sn, sup43.sn, sup44.sn, sup45.sn, sup46.sn, sup47.sn, sup48.sn, sup49.sn, sup50.sn]
	
	supr[5] = [sup1.name,sup2.name,sup3.name,sup4.name,sup5.name,sup6.name,sup7.name, sup8.name, sup9.name, sup10.name,
		sup11.name, sup12.name, sup13.name, sup14.name, sup15.name, sup16.name, sup17.name, sup18.name, sup19.name, sup20.name,
		sup21.name, sup22.name, sup23.name, sup24.name, sup25.name, sup26.name, sup27.name, sup28.name, sup29.name, sup30.name,
		sup31.name, sup32.name, sup33.name, sup34.name, sup35.name, sup36.name, sup37.name, sup38.name, sup39.name, sup40.name,
		sup41.name, sup42.name, sup43.name, sup44.name, sup45.name, sup46.name, sup47.name, sup48.name, sup49.name, sup50.name]
		

		supv[5] = [sup1.value,sup2.value,sup3.value,sup4.value,sup5.value,sup6.value,sup7.value, sup8.value, sup9.value, sup10.value,
			sup11.value, sup12.value, sup13.value, sup14.value, sup15.value, sup16.value, sup17.value, sup18.value, sup19.value, sup20.value,
			sup21.value, sup22.value, sup23.value, sup24.value, sup25.value, sup26.value, sup27.value, sup28.value, sup29.value, sup30.value,
			sup31.value, sup32.value, sup33.value, sup34.value, sup35.value, sup36.value, sup37.value, sup38.value, sup39.value, sup40.value,
			sup41.value, sup42.value, sup43.value, sup44.value, sup45.value, sup46.value, sup47.value, sup48.value, sup49.value, sup50.value]
			
			supc[5] = [sup1.color,sup2.color,sup3.color,sup4.color,sup5.color,sup6.color,sup7.color, sup8.color, sup9.color, sup10.color,
				sup11.color, sup12.color, sup13.color, sup14.color, sup15.color, sup16.color, sup17.color, sup18.color, sup19.color, sup20.color,
				sup21.color, sup22.color, sup23.color, sup24.color, sup25.color, sup26.color, sup27.color, sup28.color, sup29.color, sup30.color,
				sup31.color, sup32.color, sup33.color, sup34.color, sup35.color, sup36.color, sup37.color, sup38.color, sup39.color, sup40.color,
				sup41.color, sup42.color, sup43.color, sup44.color, sup45.color, sup46.color, sup47.color, sup48.color, sup49.color, sup50.color]
				
supb[5] = [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false,
	false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false,
	false, false, false, false, false];

supst[5] = ['SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY',
'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY',
'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY']
/////to be fitted in line15613




const shuffled6 = cards.sort(() => 0.5 - Math.random());

			// Get sub-array of first n elements after shuffled
			let ran6 = shuffled6.slice(0, 50);
			sup1 = ran6[0];sup2 = ran6[1];sup3 = ran6[2];sup4 = ran6[3];sup5 = ran6[4];sup6 = ran6[5];sup7 = ran6[6];sup8 = ran6[7];sup9 = ran6[8];sup10 = ran6[9];
			sup11 = ran6[10];sup12 = ran6[11];sup13 = ran6[12];sup14 = ran6[13];sup15 = ran6[14];sup16 = ran6[15];sup17 = ran6[16];sup18 = ran6[17];sup19 = ran6[18];sup20 = ran6[19];
			sup21 = ran6[20];sup22 = ran6[21];sup23 = ran6[22];sup24 = ran6[23];sup25 = ran6[24];sup26 = ran6[25];sup27 = ran6[26];sup28 = ran6[27];sup29 = ran6[28];sup30 = ran6[29];
			sup31 = ran6[30];sup32 = ran6[31];sup33 = ran6[32];sup34 = ran6[33];sup35 = ran6[34];sup36 = ran6[35];sup37 = ran6[36];sup38 = ran6[37];sup39 = ran6[38];sup40 = ran6[39];
			sup41 = ran6[40];sup42 = ran6[41];sup43 = ran6[42];sup44 = ran6[43];sup45 = ran6[44];sup46 = ran6[45];sup47 = ran6[46];sup48 = ran6[47];sup49 = ran6[48];sup50 = ran6[49];


			supe[6] = [sup1.emoji,sup2.emoji,sup3.emoji,sup4.emoji,sup5.emoji,sup6.emoji,sup7.emoji, sup8.emoji, sup9.emoji, sup10.emoji,
			sup11.emoji, sup12.emoji, sup13.emoji, sup14.emoji, sup15.emoji, sup16.emoji, sup17.emoji, sup18.emoji, sup19.emoji, sup20.emoji,
			sup21.emoji, sup22.emoji, sup23.emoji, sup24.emoji, sup25.emoji, sup26.emoji, sup27.emoji, sup28.emoji, sup29.emoji, sup30.emoji,
			sup31.emoji, sup32.emoji, sup33.emoji, sup34.emoji, sup35.emoji, sup36.emoji, sup37.emoji, sup38.emoji, sup39.emoji, sup40.emoji,
			sup41.emoji, sup42.emoji, sup43.emoji, sup44.emoji, sup45.emoji, sup46.emoji, sup47.emoji, sup48.emoji, sup49.emoji, sup50.emoji]
			
			sups[6] = [sup1.sn,sup2.sn,sup3.sn,sup4.sn,sup5.sn,sup6.sn,sup7.sn, sup8.sn, sup9.sn, sup10.sn,
				sup11.sn, sup12.sn, sup13.sn, sup14.sn, sup15.sn, sup16.sn, sup17.sn, sup18.sn, sup19.sn, sup20.sn,
				sup21.sn, sup22.sn, sup23.sn, sup24.sn, sup25.sn, sup26.sn, sup27.sn, sup28.sn, sup29.sn, sup30.sn,
				sup31.sn, sup32.sn, sup33.sn, sup34.sn, sup35.sn, sup36.sn, sup37.sn, sup38.sn, sup39.sn, sup40.sn,
				sup41.sn, sup42.sn, sup43.sn, sup44.sn, sup45.sn, sup46.sn, sup47.sn, sup48.sn, sup49.sn, sup50.sn]
				
				supr[6] = [sup1.name,sup2.name,sup3.name,sup4.name,sup5.name,sup6.name,sup7.name, sup8.name, sup9.name, sup10.name,
					sup11.name, sup12.name, sup13.name, sup14.name, sup15.name, sup16.name, sup17.name, sup18.name, sup19.name, sup20.name,
					sup21.name, sup22.name, sup23.name, sup24.name, sup25.name, sup26.name, sup27.name, sup28.name, sup29.name, sup30.name,
					sup31.name, sup32.name, sup33.name, sup34.name, sup35.name, sup36.name, sup37.name, sup38.name, sup39.name, sup40.name,
					sup41.name, sup42.name, sup43.name, sup44.name, sup45.name, sup46.name, sup47.name, sup48.name, sup49.name, sup50.name]
					
			
					supv[6] = [sup1.value,sup2.value,sup3.value,sup4.value,sup5.value,sup6.value,sup7.value, sup8.value, sup9.value, sup10.value,
						sup11.value, sup12.value, sup13.value, sup14.value, sup15.value, sup16.value, sup17.value, sup18.value, sup19.value, sup20.value,
						sup21.value, sup22.value, sup23.value, sup24.value, sup25.value, sup26.value, sup27.value, sup28.value, sup29.value, sup30.value,
						sup31.value, sup32.value, sup33.value, sup34.value, sup35.value, sup36.value, sup37.value, sup38.value, sup39.value, sup40.value,
						sup41.value, sup42.value, sup43.value, sup44.value, sup45.value, sup46.value, sup47.value, sup48.value, sup49.value, sup50.value]
						
						supc[6] = [sup1.color,sup2.color,sup3.color,sup4.color,sup5.color,sup6.color,sup7.color, sup8.color, sup9.color, sup10.color,
							sup11.color, sup12.color, sup13.color, sup14.color, sup15.color, sup16.color, sup17.color, sup18.color, sup19.color, sup20.color,
							sup21.color, sup22.color, sup23.color, sup24.color, sup25.color, sup26.color, sup27.color, sup28.color, sup29.color, sup30.color,
							sup31.color, sup32.color, sup33.color, sup34.color, sup35.color, sup36.color, sup37.color, sup38.color, sup39.color, sup40.color,
							sup41.color, sup42.color, sup43.color, sup44.color, sup45.color, sup46.color, sup47.color, sup48.color, sup49.color, sup50.color]
							
			supb[6] = [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false,
				false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false,
				false, false, false, false, false];
			
			supst[6] = ['SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY',
			'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY',
			'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY']
			/////to be fitted in line15613




const shuffled7 = cards.sort(() => 0.5 - Math.random());

// Get sub-array of first n elements after shuffled
let ran7 = shuffled7.slice(0, 50);
sup1 = ran7[0];sup2 = ran7[1];sup3 = ran7[2];sup4 = ran7[3];sup5 = ran7[4];sup6 = ran7[5];sup7 = ran7[6];sup8 = ran7[7];sup9 = ran7[8];sup10 = ran7[9];
sup11 = ran7[10];sup12 = ran7[11];sup13 = ran7[12];sup14 = ran7[13];sup15 = ran7[14];sup16 = ran7[15];sup17 = ran7[16];sup18 = ran7[17];sup19 = ran7[18];sup20 = ran7[19];
sup21 = ran7[20];sup22 = ran7[21];sup23 = ran7[22];sup24 = ran7[23];sup25 = ran7[24];sup26 = ran7[25];sup27 = ran7[26];sup28 = ran7[27];sup29 = ran7[28];sup30 = ran7[29];
sup31 = ran7[30];sup32 = ran7[31];sup33 = ran7[32];sup34 = ran7[33];sup35 = ran7[34];sup36 = ran7[35];sup37 = ran7[36];sup38 = ran7[37];sup39 = ran7[38];sup40 = ran7[39];
sup41 = ran7[40];sup42 = ran7[41];sup43 = ran7[42];sup44 = ran7[43];sup45 = ran7[44];sup46 = ran7[45];sup47 = ran7[46];sup48 = ran7[47];sup49 = ran7[48];sup50 = ran7[49];


supe[7] = [sup1.emoji,sup2.emoji,sup3.emoji,sup4.emoji,sup5.emoji,sup6.emoji,sup7.emoji, sup8.emoji, sup9.emoji, sup10.emoji,
sup11.emoji, sup12.emoji, sup13.emoji, sup14.emoji, sup15.emoji, sup16.emoji, sup17.emoji, sup18.emoji, sup19.emoji, sup20.emoji,
sup21.emoji, sup22.emoji, sup23.emoji, sup24.emoji, sup25.emoji, sup26.emoji, sup27.emoji, sup28.emoji, sup29.emoji, sup30.emoji,
sup31.emoji, sup32.emoji, sup33.emoji, sup34.emoji, sup35.emoji, sup36.emoji, sup37.emoji, sup38.emoji, sup39.emoji, sup40.emoji,
sup41.emoji, sup42.emoji, sup43.emoji, sup44.emoji, sup45.emoji, sup46.emoji, sup47.emoji, sup48.emoji, sup49.emoji, sup50.emoji]

sups[7] = [sup1.sn,sup2.sn,sup3.sn,sup4.sn,sup5.sn,sup6.sn,sup7.sn, sup8.sn, sup9.sn, sup10.sn,
	sup11.sn, sup12.sn, sup13.sn, sup14.sn, sup15.sn, sup16.sn, sup17.sn, sup18.sn, sup19.sn, sup20.sn,
	sup21.sn, sup22.sn, sup23.sn, sup24.sn, sup25.sn, sup26.sn, sup27.sn, sup28.sn, sup29.sn, sup30.sn,
	sup31.sn, sup32.sn, sup33.sn, sup34.sn, sup35.sn, sup36.sn, sup37.sn, sup38.sn, sup39.sn, sup40.sn,
	sup41.sn, sup42.sn, sup43.sn, sup44.sn, sup45.sn, sup46.sn, sup47.sn, sup48.sn, sup49.sn, sup50.sn]
	
	supr[7] = [sup1.name,sup2.name,sup3.name,sup4.name,sup5.name,sup6.name,sup7.name, sup8.name, sup9.name, sup10.name,
		sup11.name, sup12.name, sup13.name, sup14.name, sup15.name, sup16.name, sup17.name, sup18.name, sup19.name, sup20.name,
		sup21.name, sup22.name, sup23.name, sup24.name, sup25.name, sup26.name, sup27.name, sup28.name, sup29.name, sup30.name,
		sup31.name, sup32.name, sup33.name, sup34.name, sup35.name, sup36.name, sup37.name, sup38.name, sup39.name, sup40.name,
		sup41.name, sup42.name, sup43.name, sup44.name, sup45.name, sup46.name, sup47.name, sup48.name, sup49.name, sup50.name]
		

		supv[7] = [sup1.value,sup2.value,sup3.value,sup4.value,sup5.value,sup6.value,sup7.value, sup8.value, sup9.value, sup10.value,
			sup11.value, sup12.value, sup13.value, sup14.value, sup15.value, sup16.value, sup17.value, sup18.value, sup19.value, sup20.value,
			sup21.value, sup22.value, sup23.value, sup24.value, sup25.value, sup26.value, sup27.value, sup28.value, sup29.value, sup30.value,
			sup31.value, sup32.value, sup33.value, sup34.value, sup35.value, sup36.value, sup37.value, sup38.value, sup39.value, sup40.value,
			sup41.value, sup42.value, sup43.value, sup44.value, sup45.value, sup46.value, sup47.value, sup48.value, sup49.value, sup50.value]
			
			supc[7] = [sup1.color,sup2.color,sup3.color,sup4.color,sup5.color,sup6.color,sup7.color, sup8.color, sup9.color, sup10.color,
				sup11.color, sup12.color, sup13.color, sup14.color, sup15.color, sup16.color, sup17.color, sup18.color, sup19.color, sup20.color,
				sup21.color, sup22.color, sup23.color, sup24.color, sup25.color, sup26.color, sup27.color, sup28.color, sup29.color, sup30.color,
				sup31.color, sup32.color, sup33.color, sup34.color, sup35.color, sup36.color, sup37.color, sup38.color, sup39.color, sup40.color,
				sup41.color, sup42.color, sup43.color, sup44.color, sup45.color, sup46.color, sup47.color, sup48.color, sup49.color, sup50.color]
				
supb[7] = [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false,
	false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false,
	false, false, false, false, false];

supst[7] = ['SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY',
'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY',
'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY']
/////to be fitted in line15613




const shuffled8 = cards.sort(() => 0.5 - Math.random());

			// Get sub-array of first n elements after shuffled
			let ran8 = shuffled8.slice(0, 50);
			sup1 = ran8[0];sup2 = ran8[1];sup3 = ran8[2];sup4 = ran8[3];sup5 = ran8[4];sup6 = ran8[5];sup7 = ran8[6];sup8 = ran8[7];sup9 = ran8[8];sup10 = ran8[9];
			sup11 = ran8[10];sup12 = ran8[11];sup13 = ran8[12];sup14 = ran8[13];sup15 = ran8[14];sup16 = ran8[15];sup17 = ran8[16];sup18 = ran8[17];sup19 = ran8[18];sup20 = ran8[19];
			sup21 = ran8[20];sup22 = ran8[21];sup23 = ran8[22];sup24 = ran8[23];sup25 = ran8[24];sup26 = ran8[25];sup27 = ran8[26];sup28 = ran8[27];sup29 = ran8[28];sup30 = ran8[29];
			sup31 = ran8[30];sup32 = ran8[31];sup33 = ran8[32];sup34 = ran8[33];sup35 = ran8[34];sup36 = ran8[35];sup37 = ran8[36];sup38 = ran8[37];sup39 = ran8[38];sup40 = ran8[39];
			sup41 = ran8[40];sup42 = ran8[41];sup43 = ran8[42];sup44 = ran8[43];sup45 = ran8[44];sup46 = ran8[45];sup47 = ran8[46];sup48 = ran8[47];sup49 = ran8[48];sup50 = ran8[49];


			supe[8] = [sup1.emoji,sup2.emoji,sup3.emoji,sup4.emoji,sup5.emoji,sup6.emoji,sup7.emoji, sup8.emoji, sup9.emoji, sup10.emoji,
			sup11.emoji, sup12.emoji, sup13.emoji, sup14.emoji, sup15.emoji, sup16.emoji, sup17.emoji, sup18.emoji, sup19.emoji, sup20.emoji,
			sup21.emoji, sup22.emoji, sup23.emoji, sup24.emoji, sup25.emoji, sup26.emoji, sup27.emoji, sup28.emoji, sup29.emoji, sup30.emoji,
			sup31.emoji, sup32.emoji, sup33.emoji, sup34.emoji, sup35.emoji, sup36.emoji, sup37.emoji, sup38.emoji, sup39.emoji, sup40.emoji,
			sup41.emoji, sup42.emoji, sup43.emoji, sup44.emoji, sup45.emoji, sup46.emoji, sup47.emoji, sup48.emoji, sup49.emoji, sup50.emoji]
			
			sups[8] = [sup1.sn,sup2.sn,sup3.sn,sup4.sn,sup5.sn,sup6.sn,sup7.sn, sup8.sn, sup9.sn, sup10.sn,
				sup11.sn, sup12.sn, sup13.sn, sup14.sn, sup15.sn, sup16.sn, sup17.sn, sup18.sn, sup19.sn, sup20.sn,
				sup21.sn, sup22.sn, sup23.sn, sup24.sn, sup25.sn, sup26.sn, sup27.sn, sup28.sn, sup29.sn, sup30.sn,
				sup31.sn, sup32.sn, sup33.sn, sup34.sn, sup35.sn, sup36.sn, sup37.sn, sup38.sn, sup39.sn, sup40.sn,
				sup41.sn, sup42.sn, sup43.sn, sup44.sn, sup45.sn, sup46.sn, sup47.sn, sup48.sn, sup49.sn, sup50.sn]
				
				supr[8] = [sup1.name,sup2.name,sup3.name,sup4.name,sup5.name,sup6.name,sup7.name, sup8.name, sup9.name, sup10.name,
					sup11.name, sup12.name, sup13.name, sup14.name, sup15.name, sup16.name, sup17.name, sup18.name, sup19.name, sup20.name,
					sup21.name, sup22.name, sup23.name, sup24.name, sup25.name, sup26.name, sup27.name, sup28.name, sup29.name, sup30.name,
					sup31.name, sup32.name, sup33.name, sup34.name, sup35.name, sup36.name, sup37.name, sup38.name, sup39.name, sup40.name,
					sup41.name, sup42.name, sup43.name, sup44.name, sup45.name, sup46.name, sup47.name, sup48.name, sup49.name, sup50.name]
					
			
					supv[8] = [sup1.value,sup2.value,sup3.value,sup4.value,sup5.value,sup6.value,sup7.value, sup8.value, sup9.value, sup10.value,
						sup11.value, sup12.value, sup13.value, sup14.value, sup15.value, sup16.value, sup17.value, sup18.value, sup19.value, sup20.value,
						sup21.value, sup22.value, sup23.value, sup24.value, sup25.value, sup26.value, sup27.value, sup28.value, sup29.value, sup30.value,
						sup31.value, sup32.value, sup33.value, sup34.value, sup35.value, sup36.value, sup37.value, sup38.value, sup39.value, sup40.value,
						sup41.value, sup42.value, sup43.value, sup44.value, sup45.value, sup46.value, sup47.value, sup48.value, sup49.value, sup50.value]
						
						supc[8] = [sup1.color,sup2.color,sup3.color,sup4.color,sup5.color,sup6.color,sup7.color, sup8.color, sup9.color, sup10.color,
							sup11.color, sup12.color, sup13.color, sup14.color, sup15.color, sup16.color, sup17.color, sup18.color, sup19.color, sup20.color,
							sup21.color, sup22.color, sup23.color, sup24.color, sup25.color, sup26.color, sup27.color, sup28.color, sup29.color, sup30.color,
							sup31.color, sup32.color, sup33.color, sup34.color, sup35.color, sup36.color, sup37.color, sup38.color, sup39.color, sup40.color,
							sup41.color, sup42.color, sup43.color, sup44.color, sup45.color, sup46.color, sup47.color, sup48.color, sup49.color, sup50.color]
							
			supb[8] = [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false,
				false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false,
				false, false, false, false, false];
			
			supst[8] = ['SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY',
			'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY',
			'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY']
			/////to be fitted in line15613




const shuffled9 = cards.sort(() => 0.5 - Math.random());

// Get sub-array of first n elements after shuffled
let ran9 = shuffled9.slice(0, 50);
sup1 = ran9[0];sup2 = ran9[1];sup3 = ran9[2];sup4 = ran9[3];sup5 = ran9[4];sup6 = ran9[5];sup7 = ran9[6];sup8 = ran9[7];sup9 = ran9[8];sup10 = ran9[9];
sup11 = ran9[10];sup12 = ran9[11];sup13 = ran9[12];sup14 = ran9[13];sup15 = ran9[14];sup16 = ran9[15];sup17 = ran9[16];sup18 = ran9[17];sup19 = ran9[18];sup20 = ran9[19];
sup21 = ran9[20];sup22 = ran9[21];sup23 = ran9[22];sup24 = ran9[23];sup25 = ran9[24];sup26 = ran9[25];sup27 = ran9[26];sup28 = ran9[27];sup29 = ran9[28];sup30 = ran9[29];
sup31 = ran9[30];sup32 = ran9[31];sup33 = ran9[32];sup34 = ran9[33];sup35 = ran9[34];sup36 = ran9[35];sup37 = ran9[36];sup38 = ran9[37];sup39 = ran9[38];sup40 = ran9[39];
sup41 = ran9[40];sup42 = ran9[41];sup43 = ran9[42];sup44 = ran9[43];sup45 = ran9[44];sup46 = ran9[45];sup47 = ran9[46];sup48 = ran9[47];sup49 = ran9[48];sup50 = ran9[49];


supe[9] = [sup1.emoji,sup2.emoji,sup3.emoji,sup4.emoji,sup5.emoji,sup6.emoji,sup7.emoji, sup8.emoji, sup9.emoji, sup10.emoji,
sup11.emoji, sup12.emoji, sup13.emoji, sup14.emoji, sup15.emoji, sup16.emoji, sup17.emoji, sup18.emoji, sup19.emoji, sup20.emoji,
sup21.emoji, sup22.emoji, sup23.emoji, sup24.emoji, sup25.emoji, sup26.emoji, sup27.emoji, sup28.emoji, sup29.emoji, sup30.emoji,
sup31.emoji, sup32.emoji, sup33.emoji, sup34.emoji, sup35.emoji, sup36.emoji, sup37.emoji, sup38.emoji, sup39.emoji, sup40.emoji,
sup41.emoji, sup42.emoji, sup43.emoji, sup44.emoji, sup45.emoji, sup46.emoji, sup47.emoji, sup48.emoji, sup49.emoji, sup50.emoji]

sups[9] = [sup1.sn,sup2.sn,sup3.sn,sup4.sn,sup5.sn,sup6.sn,sup7.sn, sup8.sn, sup9.sn, sup10.sn,
	sup11.sn, sup12.sn, sup13.sn, sup14.sn, sup15.sn, sup16.sn, sup17.sn, sup18.sn, sup19.sn, sup20.sn,
	sup21.sn, sup22.sn, sup23.sn, sup24.sn, sup25.sn, sup26.sn, sup27.sn, sup28.sn, sup29.sn, sup30.sn,
	sup31.sn, sup32.sn, sup33.sn, sup34.sn, sup35.sn, sup36.sn, sup37.sn, sup38.sn, sup39.sn, sup40.sn,
	sup41.sn, sup42.sn, sup43.sn, sup44.sn, sup45.sn, sup46.sn, sup47.sn, sup48.sn, sup49.sn, sup50.sn]
	
	supr[9] = [sup1.name,sup2.name,sup3.name,sup4.name,sup5.name,sup6.name,sup7.name, sup8.name, sup9.name, sup10.name,
		sup11.name, sup12.name, sup13.name, sup14.name, sup15.name, sup16.name, sup17.name, sup18.name, sup19.name, sup20.name,
		sup21.name, sup22.name, sup23.name, sup24.name, sup25.name, sup26.name, sup27.name, sup28.name, sup29.name, sup30.name,
		sup31.name, sup32.name, sup33.name, sup34.name, sup35.name, sup36.name, sup37.name, sup38.name, sup39.name, sup40.name,
		sup41.name, sup42.name, sup43.name, sup44.name, sup45.name, sup46.name, sup47.name, sup48.name, sup49.name, sup50.name]
		

		supv[9] = [sup1.value,sup2.value,sup3.value,sup4.value,sup5.value,sup6.value,sup7.value, sup8.value, sup9.value, sup10.value,
			sup11.value, sup12.value, sup13.value, sup14.value, sup15.value, sup16.value, sup17.value, sup18.value, sup19.value, sup20.value,
			sup21.value, sup22.value, sup23.value, sup24.value, sup25.value, sup26.value, sup27.value, sup28.value, sup29.value, sup30.value,
			sup31.value, sup32.value, sup33.value, sup34.value, sup35.value, sup36.value, sup37.value, sup38.value, sup39.value, sup40.value,
			sup41.value, sup42.value, sup43.value, sup44.value, sup45.value, sup46.value, sup47.value, sup48.value, sup49.value, sup50.value]
			
			supc[9] = [sup1.color,sup2.color,sup3.color,sup4.color,sup5.color,sup6.color,sup7.color, sup8.color, sup9.color, sup10.color,
				sup11.color, sup12.color, sup13.color, sup14.color, sup15.color, sup16.color, sup17.color, sup18.color, sup19.color, sup20.color,
				sup21.color, sup22.color, sup23.color, sup24.color, sup25.color, sup26.color, sup27.color, sup28.color, sup29.color, sup30.color,
				sup31.color, sup32.color, sup33.color, sup34.color, sup35.color, sup36.color, sup37.color, sup38.color, sup39.color, sup40.color,
				sup41.color, sup42.color, sup43.color, sup44.color, sup45.color, sup46.color, sup47.color, sup48.color, sup49.color, sup50.color]
				
supb[9] = [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false,
	false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false,
	false, false, false, false, false];

supst[9] = ['SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY',
'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY',
'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY']
/////to be fitted in line15613




const shuffled10 = cards.sort(() => 0.5 - Math.random());

			// Get sub-array of first n elements after shuffled
			let ran10 = shuffled10.slice(0, 50);
			sup1 = ran10[0];sup2 = ran10[1];sup3 = ran10[2];sup4 = ran10[3];sup5 = ran10[4];sup6 = ran10[5];sup7 = ran10[6];sup8 = ran10[7];sup9 = ran10[8];sup10 = ran10[9];
			sup11 = ran10[10];sup12 = ran10[11];sup13 = ran10[12];sup14 = ran10[13];sup15 = ran10[14];sup16 = ran10[15];sup17 = ran10[16];sup18 = ran10[17];sup19 = ran10[18];sup20 = ran10[19];
			sup21 = ran10[20];sup22 = ran10[21];sup23 = ran10[22];sup24 = ran10[23];sup25 = ran10[24];sup26 = ran10[25];sup27 = ran10[26];sup28 = ran10[27];sup29 = ran10[28];sup30 = ran10[29];
			sup31 = ran10[30];sup32 = ran10[31];sup33 = ran10[32];sup34 = ran10[33];sup35 = ran10[34];sup36 = ran10[35];sup37 = ran10[36];sup38 = ran10[37];sup39 = ran10[38];sup40 = ran10[39];
			sup41 = ran10[40];sup42 = ran10[41];sup43 = ran10[42];sup44 = ran10[43];sup45 = ran10[44];sup46 = ran10[45];sup47 = ran10[46];sup48 = ran10[47];sup49 = ran10[48];sup50 = ran10[49];


			supe[10] = [sup1.emoji,sup2.emoji,sup3.emoji,sup4.emoji,sup5.emoji,sup6.emoji,sup7.emoji, sup8.emoji, sup9.emoji, sup10.emoji,
			sup11.emoji, sup12.emoji, sup13.emoji, sup14.emoji, sup15.emoji, sup16.emoji, sup17.emoji, sup18.emoji, sup19.emoji, sup20.emoji,
			sup21.emoji, sup22.emoji, sup23.emoji, sup24.emoji, sup25.emoji, sup26.emoji, sup27.emoji, sup28.emoji, sup29.emoji, sup30.emoji,
			sup31.emoji, sup32.emoji, sup33.emoji, sup34.emoji, sup35.emoji, sup36.emoji, sup37.emoji, sup38.emoji, sup39.emoji, sup40.emoji,
			sup41.emoji, sup42.emoji, sup43.emoji, sup44.emoji, sup45.emoji, sup46.emoji, sup47.emoji, sup48.emoji, sup49.emoji, sup50.emoji]
			
			sups[10] = [sup1.sn,sup2.sn,sup3.sn,sup4.sn,sup5.sn,sup6.sn,sup7.sn, sup8.sn, sup9.sn, sup10.sn,
				sup11.sn, sup12.sn, sup13.sn, sup14.sn, sup15.sn, sup16.sn, sup17.sn, sup18.sn, sup19.sn, sup20.sn,
				sup21.sn, sup22.sn, sup23.sn, sup24.sn, sup25.sn, sup26.sn, sup27.sn, sup28.sn, sup29.sn, sup30.sn,
				sup31.sn, sup32.sn, sup33.sn, sup34.sn, sup35.sn, sup36.sn, sup37.sn, sup38.sn, sup39.sn, sup40.sn,
				sup41.sn, sup42.sn, sup43.sn, sup44.sn, sup45.sn, sup46.sn, sup47.sn, sup48.sn, sup49.sn, sup50.sn]
				
				supr[10] = [sup1.name,sup2.name,sup3.name,sup4.name,sup5.name,sup6.name,sup7.name, sup8.name, sup9.name, sup10.name,
					sup11.name, sup12.name, sup13.name, sup14.name, sup15.name, sup16.name, sup17.name, sup18.name, sup19.name, sup20.name,
					sup21.name, sup22.name, sup23.name, sup24.name, sup25.name, sup26.name, sup27.name, sup28.name, sup29.name, sup30.name,
					sup31.name, sup32.name, sup33.name, sup34.name, sup35.name, sup36.name, sup37.name, sup38.name, sup39.name, sup40.name,
					sup41.name, sup42.name, sup43.name, sup44.name, sup45.name, sup46.name, sup47.name, sup48.name, sup49.name, sup50.name]
					
			
					supv[10] = [sup1.value,sup2.value,sup3.value,sup4.value,sup5.value,sup6.value,sup7.value, sup8.value, sup9.value, sup10.value,
						sup11.value, sup12.value, sup13.value, sup14.value, sup15.value, sup16.value, sup17.value, sup18.value, sup19.value, sup20.value,
						sup21.value, sup22.value, sup23.value, sup24.value, sup25.value, sup26.value, sup27.value, sup28.value, sup29.value, sup30.value,
						sup31.value, sup32.value, sup33.value, sup34.value, sup35.value, sup36.value, sup37.value, sup38.value, sup39.value, sup40.value,
						sup41.value, sup42.value, sup43.value, sup44.value, sup45.value, sup46.value, sup47.value, sup48.value, sup49.value, sup50.value]
						
						supc[10] = [sup1.color,sup2.color,sup3.color,sup4.color,sup5.color,sup6.color,sup7.color, sup8.color, sup9.color, sup10.color,
							sup11.color, sup12.color, sup13.color, sup14.color, sup15.color, sup16.color, sup17.color, sup18.color, sup19.color, sup20.color,
							sup21.color, sup22.color, sup23.color, sup24.color, sup25.color, sup26.color, sup27.color, sup28.color, sup29.color, sup30.color,
							sup31.color, sup32.color, sup33.color, sup34.color, sup35.color, sup36.color, sup37.color, sup38.color, sup39.color, sup40.color,
							sup41.color, sup42.color, sup43.color, sup44.color, sup45.color, sup46.color, sup47.color, sup48.color, sup49.color, sup50.color]
							
			supb[10] = [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false,
				false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false,
				false, false, false, false, false];
			
			supst[10] = ['SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY',
			'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY',
			'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY']
			/////to be fitted in line15613




const shuffled11 = cards.sort(() => 0.5 - Math.random());

// Get sub-array of first n elements after shuffled
let ran11 = shuffled11.slice(0, 50);
sup1 = ran11[0];sup2 = ran11[1];sup3 = ran11[2];sup4 = ran11[3];sup5 = ran11[4];sup6 = ran11[5];sup7 = ran11[6];sup8 = ran11[7];sup9 = ran11[8];sup10 = ran11[9];
sup11 = ran11[10];sup12 = ran11[11];sup13 = ran11[12];sup14 = ran11[13];sup15 = ran11[14];sup16 = ran11[15];sup17 = ran11[16];sup18 = ran11[17];sup19 = ran11[18];sup20 = ran11[19];
sup21 = ran11[20];sup22 = ran11[21];sup23 = ran11[22];sup24 = ran11[23];sup25 = ran11[24];sup26 = ran11[25];sup27 = ran11[26];sup28 = ran11[27];sup29 = ran11[28];sup30 = ran11[29];
sup31 = ran11[30];sup32 = ran11[31];sup33 = ran11[32];sup34 = ran11[33];sup35 = ran11[34];sup36 = ran11[35];sup37 = ran11[36];sup38 = ran11[37];sup39 = ran11[38];sup40 = ran11[39];
sup41 = ran11[40];sup42 = ran11[41];sup43 = ran11[42];sup44 = ran11[43];sup45 = ran11[44];sup46 = ran11[45];sup47 = ran11[46];sup48 = ran11[47];sup49 = ran11[48];sup50 = ran11[49];


supe[11] = [sup1.emoji,sup2.emoji,sup3.emoji,sup4.emoji,sup5.emoji,sup6.emoji,sup7.emoji, sup8.emoji, sup9.emoji, sup10.emoji,
sup11.emoji, sup12.emoji, sup13.emoji, sup14.emoji, sup15.emoji, sup16.emoji, sup17.emoji, sup18.emoji, sup19.emoji, sup20.emoji,
sup21.emoji, sup22.emoji, sup23.emoji, sup24.emoji, sup25.emoji, sup26.emoji, sup27.emoji, sup28.emoji, sup29.emoji, sup30.emoji,
sup31.emoji, sup32.emoji, sup33.emoji, sup34.emoji, sup35.emoji, sup36.emoji, sup37.emoji, sup38.emoji, sup39.emoji, sup40.emoji,
sup41.emoji, sup42.emoji, sup43.emoji, sup44.emoji, sup45.emoji, sup46.emoji, sup47.emoji, sup48.emoji, sup49.emoji, sup50.emoji]

sups[11] = [sup1.sn,sup2.sn,sup3.sn,sup4.sn,sup5.sn,sup6.sn,sup7.sn, sup8.sn, sup9.sn, sup10.sn,
	sup11.sn, sup12.sn, sup13.sn, sup14.sn, sup15.sn, sup16.sn, sup17.sn, sup18.sn, sup19.sn, sup20.sn,
	sup21.sn, sup22.sn, sup23.sn, sup24.sn, sup25.sn, sup26.sn, sup27.sn, sup28.sn, sup29.sn, sup30.sn,
	sup31.sn, sup32.sn, sup33.sn, sup34.sn, sup35.sn, sup36.sn, sup37.sn, sup38.sn, sup39.sn, sup40.sn,
	sup41.sn, sup42.sn, sup43.sn, sup44.sn, sup45.sn, sup46.sn, sup47.sn, sup48.sn, sup49.sn, sup50.sn]
	
	supr[11] = [sup1.name,sup2.name,sup3.name,sup4.name,sup5.name,sup6.name,sup7.name, sup8.name, sup9.name, sup10.name,
		sup11.name, sup12.name, sup13.name, sup14.name, sup15.name, sup16.name, sup17.name, sup18.name, sup19.name, sup20.name,
		sup21.name, sup22.name, sup23.name, sup24.name, sup25.name, sup26.name, sup27.name, sup28.name, sup29.name, sup30.name,
		sup31.name, sup32.name, sup33.name, sup34.name, sup35.name, sup36.name, sup37.name, sup38.name, sup39.name, sup40.name,
		sup41.name, sup42.name, sup43.name, sup44.name, sup45.name, sup46.name, sup47.name, sup48.name, sup49.name, sup50.name]
		

		supv[11] = [sup1.value,sup2.value,sup3.value,sup4.value,sup5.value,sup6.value,sup7.value, sup8.value, sup9.value, sup10.value,
			sup11.value, sup12.value, sup13.value, sup14.value, sup15.value, sup16.value, sup17.value, sup18.value, sup19.value, sup20.value,
			sup21.value, sup22.value, sup23.value, sup24.value, sup25.value, sup26.value, sup27.value, sup28.value, sup29.value, sup30.value,
			sup31.value, sup32.value, sup33.value, sup34.value, sup35.value, sup36.value, sup37.value, sup38.value, sup39.value, sup40.value,
			sup41.value, sup42.value, sup43.value, sup44.value, sup45.value, sup46.value, sup47.value, sup48.value, sup49.value, sup50.value]
			
			supc[11] = [sup1.color,sup2.color,sup3.color,sup4.color,sup5.color,sup6.color,sup7.color, sup8.color, sup9.color, sup10.color,
				sup11.color, sup12.color, sup13.color, sup14.color, sup15.color, sup16.color, sup17.color, sup18.color, sup19.color, sup20.color,
				sup21.color, sup22.color, sup23.color, sup24.color, sup25.color, sup26.color, sup27.color, sup28.color, sup29.color, sup30.color,
				sup31.color, sup32.color, sup33.color, sup34.color, sup35.color, sup36.color, sup37.color, sup38.color, sup39.color, sup40.color,
				sup41.color, sup42.color, sup43.color, sup44.color, sup45.color, sup46.color, sup47.color, sup48.color, sup49.color, sup50.color]
				
supb[11] = [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false,
	false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false,
	false, false, false, false, false];

supst[11] = ['SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY',
'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY',
'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY']
/////to be fitted in line15613




const shuffled12 = cards.sort(() => 0.5 - Math.random());

			// Get sub-array of first n elements after shuffled
			let ran12 = shuffled12.slice(0, 50);
			sup1 = ran12[0];sup2 = ran12[1];sup3 = ran12[2];sup4 = ran12[3];sup5 = ran12[4];sup6 = ran12[5];sup7 = ran12[6];sup8 = ran12[7];sup9 = ran12[8];sup10 = ran12[9];
			sup11 = ran12[10];sup12 = ran12[11];sup13 = ran12[12];sup14 = ran12[13];sup15 = ran12[14];sup16 = ran12[15];sup17 = ran12[16];sup18 = ran12[17];sup19 = ran12[18];sup20 = ran12[19];
			sup21 = ran12[20];sup22 = ran12[21];sup23 = ran12[22];sup24 = ran12[23];sup25 = ran12[24];sup26 = ran12[25];sup27 = ran12[26];sup28 = ran12[27];sup29 = ran12[28];sup30 = ran12[29];
			sup31 = ran12[30];sup32 = ran12[31];sup33 = ran12[32];sup34 = ran12[33];sup35 = ran12[34];sup36 = ran12[35];sup37 = ran12[36];sup38 = ran12[37];sup39 = ran12[38];sup40 = ran12[39];
			sup41 = ran12[40];sup42 = ran12[41];sup43 = ran12[42];sup44 = ran12[43];sup45 = ran12[44];sup46 = ran12[45];sup47 = ran12[46];sup48 = ran12[47];sup49 = ran12[48];sup50 = ran12[49];


			supe[12] = [sup1.emoji,sup2.emoji,sup3.emoji,sup4.emoji,sup5.emoji,sup6.emoji,sup7.emoji, sup8.emoji, sup9.emoji, sup10.emoji,
			sup11.emoji, sup12.emoji, sup13.emoji, sup14.emoji, sup15.emoji, sup16.emoji, sup17.emoji, sup18.emoji, sup19.emoji, sup20.emoji,
			sup21.emoji, sup22.emoji, sup23.emoji, sup24.emoji, sup25.emoji, sup26.emoji, sup27.emoji, sup28.emoji, sup29.emoji, sup30.emoji,
			sup31.emoji, sup32.emoji, sup33.emoji, sup34.emoji, sup35.emoji, sup36.emoji, sup37.emoji, sup38.emoji, sup39.emoji, sup40.emoji,
			sup41.emoji, sup42.emoji, sup43.emoji, sup44.emoji, sup45.emoji, sup46.emoji, sup47.emoji, sup48.emoji, sup49.emoji, sup50.emoji]
			
			sups[12] = [sup1.sn,sup2.sn,sup3.sn,sup4.sn,sup5.sn,sup6.sn,sup7.sn, sup8.sn, sup9.sn, sup10.sn,
				sup11.sn, sup12.sn, sup13.sn, sup14.sn, sup15.sn, sup16.sn, sup17.sn, sup18.sn, sup19.sn, sup20.sn,
				sup21.sn, sup22.sn, sup23.sn, sup24.sn, sup25.sn, sup26.sn, sup27.sn, sup28.sn, sup29.sn, sup30.sn,
				sup31.sn, sup32.sn, sup33.sn, sup34.sn, sup35.sn, sup36.sn, sup37.sn, sup38.sn, sup39.sn, sup40.sn,
				sup41.sn, sup42.sn, sup43.sn, sup44.sn, sup45.sn, sup46.sn, sup47.sn, sup48.sn, sup49.sn, sup50.sn]
				
				supr[12] = [sup1.name,sup2.name,sup3.name,sup4.name,sup5.name,sup6.name,sup7.name, sup8.name, sup9.name, sup10.name,
					sup11.name, sup12.name, sup13.name, sup14.name, sup15.name, sup16.name, sup17.name, sup18.name, sup19.name, sup20.name,
					sup21.name, sup22.name, sup23.name, sup24.name, sup25.name, sup26.name, sup27.name, sup28.name, sup29.name, sup30.name,
					sup31.name, sup32.name, sup33.name, sup34.name, sup35.name, sup36.name, sup37.name, sup38.name, sup39.name, sup40.name,
					sup41.name, sup42.name, sup43.name, sup44.name, sup45.name, sup46.name, sup47.name, sup48.name, sup49.name, sup50.name]
					
			
					supv[12] = [sup1.value,sup2.value,sup3.value,sup4.value,sup5.value,sup6.value,sup7.value, sup8.value, sup9.value, sup10.value,
						sup11.value, sup12.value, sup13.value, sup14.value, sup15.value, sup16.value, sup17.value, sup18.value, sup19.value, sup20.value,
						sup21.value, sup22.value, sup23.value, sup24.value, sup25.value, sup26.value, sup27.value, sup28.value, sup29.value, sup30.value,
						sup31.value, sup32.value, sup33.value, sup34.value, sup35.value, sup36.value, sup37.value, sup38.value, sup39.value, sup40.value,
						sup41.value, sup42.value, sup43.value, sup44.value, sup45.value, sup46.value, sup47.value, sup48.value, sup49.value, sup50.value]
						
						supc[12] = [sup1.color,sup2.color,sup3.color,sup4.color,sup5.color,sup6.color,sup7.color, sup8.color, sup9.color, sup10.color,
							sup11.color, sup12.color, sup13.color, sup14.color, sup15.color, sup16.color, sup17.color, sup18.color, sup19.color, sup20.color,
							sup21.color, sup22.color, sup23.color, sup24.color, sup25.color, sup26.color, sup27.color, sup28.color, sup29.color, sup30.color,
							sup31.color, sup32.color, sup33.color, sup34.color, sup35.color, sup36.color, sup37.color, sup38.color, sup39.color, sup40.color,
							sup41.color, sup42.color, sup43.color, sup44.color, sup45.color, sup46.color, sup47.color, sup48.color, sup49.color, sup50.color]
							
			supb[12] = [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false,
				false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false,
				false, false, false, false, false];
			
			supst[12] = ['SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY',
			'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY',
			'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY']
			/////to be fitted in line15613




const shuffled13 = cards.sort(() => 0.5 - Math.random());

// Get sub-array of first n elements after shuffled
let ran13 = shuffled13.slice(0, 50);
sup1 = ran13[0];sup2 = ran13[1];sup3 = ran13[2];sup4 = ran13[3];sup5 = ran13[4];sup6 = ran13[5];sup7 = ran13[6];sup8 = ran13[7];sup9 = ran13[8];sup10 = ran13[9];
sup11 = ran13[10];sup12 = ran13[11];sup13 = ran13[12];sup14 = ran13[13];sup15 = ran13[14];sup16 = ran13[15];sup17 = ran13[16];sup18 = ran13[17];sup19 = ran13[18];sup20 = ran13[19];
sup21 = ran13[20];sup22 = ran13[21];sup23 = ran13[22];sup24 = ran13[23];sup25 = ran13[24];sup26 = ran13[25];sup27 = ran13[26];sup28 = ran13[27];sup29 = ran13[28];sup30 = ran13[29];
sup31 = ran13[30];sup32 = ran13[31];sup33 = ran13[32];sup34 = ran13[33];sup35 = ran13[34];sup36 = ran13[35];sup37 = ran13[36];sup38 = ran13[37];sup39 = ran13[38];sup40 = ran13[39];
sup41 = ran13[40];sup42 = ran13[41];sup43 = ran13[42];sup44 = ran13[43];sup45 = ran13[44];sup46 = ran13[45];sup47 = ran13[46];sup48 = ran13[47];sup49 = ran13[48];sup50 = ran13[49];


supe[13] = [sup1.emoji,sup2.emoji,sup3.emoji,sup4.emoji,sup5.emoji,sup6.emoji,sup7.emoji, sup8.emoji, sup9.emoji, sup10.emoji,
sup11.emoji, sup12.emoji, sup13.emoji, sup14.emoji, sup15.emoji, sup16.emoji, sup17.emoji, sup18.emoji, sup19.emoji, sup20.emoji,
sup21.emoji, sup22.emoji, sup23.emoji, sup24.emoji, sup25.emoji, sup26.emoji, sup27.emoji, sup28.emoji, sup29.emoji, sup30.emoji,
sup31.emoji, sup32.emoji, sup33.emoji, sup34.emoji, sup35.emoji, sup36.emoji, sup37.emoji, sup38.emoji, sup39.emoji, sup40.emoji,
sup41.emoji, sup42.emoji, sup43.emoji, sup44.emoji, sup45.emoji, sup46.emoji, sup47.emoji, sup48.emoji, sup49.emoji, sup50.emoji]

sups[13] = [sup1.sn,sup2.sn,sup3.sn,sup4.sn,sup5.sn,sup6.sn,sup7.sn, sup8.sn, sup9.sn, sup10.sn,
	sup11.sn, sup12.sn, sup13.sn, sup14.sn, sup15.sn, sup16.sn, sup17.sn, sup18.sn, sup19.sn, sup20.sn,
	sup21.sn, sup22.sn, sup23.sn, sup24.sn, sup25.sn, sup26.sn, sup27.sn, sup28.sn, sup29.sn, sup30.sn,
	sup31.sn, sup32.sn, sup33.sn, sup34.sn, sup35.sn, sup36.sn, sup37.sn, sup38.sn, sup39.sn, sup40.sn,
	sup41.sn, sup42.sn, sup43.sn, sup44.sn, sup45.sn, sup46.sn, sup47.sn, sup48.sn, sup49.sn, sup50.sn]
	
	supr[13] = [sup1.name,sup2.name,sup3.name,sup4.name,sup5.name,sup6.name,sup7.name, sup8.name, sup9.name, sup10.name,
		sup11.name, sup12.name, sup13.name, sup14.name, sup15.name, sup16.name, sup17.name, sup18.name, sup19.name, sup20.name,
		sup21.name, sup22.name, sup23.name, sup24.name, sup25.name, sup26.name, sup27.name, sup28.name, sup29.name, sup30.name,
		sup31.name, sup32.name, sup33.name, sup34.name, sup35.name, sup36.name, sup37.name, sup38.name, sup39.name, sup40.name,
		sup41.name, sup42.name, sup43.name, sup44.name, sup45.name, sup46.name, sup47.name, sup48.name, sup49.name, sup50.name]
		

		supv[13] = [sup1.value,sup2.value,sup3.value,sup4.value,sup5.value,sup6.value,sup7.value, sup8.value, sup9.value, sup10.value,
			sup11.value, sup12.value, sup13.value, sup14.value, sup15.value, sup16.value, sup17.value, sup18.value, sup19.value, sup20.value,
			sup21.value, sup22.value, sup23.value, sup24.value, sup25.value, sup26.value, sup27.value, sup28.value, sup29.value, sup30.value,
			sup31.value, sup32.value, sup33.value, sup34.value, sup35.value, sup36.value, sup37.value, sup38.value, sup39.value, sup40.value,
			sup41.value, sup42.value, sup43.value, sup44.value, sup45.value, sup46.value, sup47.value, sup48.value, sup49.value, sup50.value]
			
			supc[13] = [sup1.color,sup2.color,sup3.color,sup4.color,sup5.color,sup6.color,sup7.color, sup8.color, sup9.color, sup10.color,
				sup11.color, sup12.color, sup13.color, sup14.color, sup15.color, sup16.color, sup17.color, sup18.color, sup19.color, sup20.color,
				sup21.color, sup22.color, sup23.color, sup24.color, sup25.color, sup26.color, sup27.color, sup28.color, sup29.color, sup30.color,
				sup31.color, sup32.color, sup33.color, sup34.color, sup35.color, sup36.color, sup37.color, sup38.color, sup39.color, sup40.color,
				sup41.color, sup42.color, sup43.color, sup44.color, sup45.color, sup46.color, sup47.color, sup48.color, sup49.color, sup50.color]
				
supb[13] = [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false,
	false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false,
	false, false, false, false, false];

supst[13] = ['SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY',
'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY',
'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY']
/////to be fitted in line15613




const shuffled14 = cards.sort(() => 0.5 - Math.random());

			// Get sub-array of first n elements after shuffled
			let ran14 = shuffled14.slice(0, 50);
			sup1 = ran14[0];sup2 = ran14[1];sup3 = ran14[2];sup4 = ran14[3];sup5 = ran14[4];sup6 = ran14[5];sup7 = ran14[6];sup8 = ran14[7];sup9 = ran14[8];sup10 = ran14[9];
			sup11 = ran14[10];sup12 = ran14[11];sup13 = ran14[12];sup14 = ran14[13];sup15 = ran14[14];sup16 = ran14[15];sup17 = ran14[16];sup18 = ran14[17];sup19 = ran14[18];sup20 = ran14[19];
			sup21 = ran14[20];sup22 = ran14[21];sup23 = ran14[22];sup24 = ran14[23];sup25 = ran14[24];sup26 = ran14[25];sup27 = ran14[26];sup28 = ran14[27];sup29 = ran14[28];sup30 = ran14[29];
			sup31 = ran14[30];sup32 = ran14[31];sup33 = ran14[32];sup34 = ran14[33];sup35 = ran14[34];sup36 = ran14[35];sup37 = ran14[36];sup38 = ran14[37];sup39 = ran14[38];sup40 = ran14[39];
			sup41 = ran14[40];sup42 = ran14[41];sup43 = ran14[42];sup44 = ran14[43];sup45 = ran14[44];sup46 = ran14[45];sup47 = ran14[46];sup48 = ran14[47];sup49 = ran14[48];sup50 = ran14[49];


			supe[14] = [sup1.emoji,sup2.emoji,sup3.emoji,sup4.emoji,sup5.emoji,sup6.emoji,sup7.emoji, sup8.emoji, sup9.emoji, sup10.emoji,
			sup11.emoji, sup12.emoji, sup13.emoji, sup14.emoji, sup15.emoji, sup16.emoji, sup17.emoji, sup18.emoji, sup19.emoji, sup20.emoji,
			sup21.emoji, sup22.emoji, sup23.emoji, sup24.emoji, sup25.emoji, sup26.emoji, sup27.emoji, sup28.emoji, sup29.emoji, sup30.emoji,
			sup31.emoji, sup32.emoji, sup33.emoji, sup34.emoji, sup35.emoji, sup36.emoji, sup37.emoji, sup38.emoji, sup39.emoji, sup40.emoji,
			sup41.emoji, sup42.emoji, sup43.emoji, sup44.emoji, sup45.emoji, sup46.emoji, sup47.emoji, sup48.emoji, sup49.emoji, sup50.emoji]
			
			sups[14] = [sup1.sn,sup2.sn,sup3.sn,sup4.sn,sup5.sn,sup6.sn,sup7.sn, sup8.sn, sup9.sn, sup10.sn,
				sup11.sn, sup12.sn, sup13.sn, sup14.sn, sup15.sn, sup16.sn, sup17.sn, sup18.sn, sup19.sn, sup20.sn,
				sup21.sn, sup22.sn, sup23.sn, sup24.sn, sup25.sn, sup26.sn, sup27.sn, sup28.sn, sup29.sn, sup30.sn,
				sup31.sn, sup32.sn, sup33.sn, sup34.sn, sup35.sn, sup36.sn, sup37.sn, sup38.sn, sup39.sn, sup40.sn,
				sup41.sn, sup42.sn, sup43.sn, sup44.sn, sup45.sn, sup46.sn, sup47.sn, sup48.sn, sup49.sn, sup50.sn]
				
				supr[14] = [sup1.name,sup2.name,sup3.name,sup4.name,sup5.name,sup6.name,sup7.name, sup8.name, sup9.name, sup10.name,
					sup11.name, sup12.name, sup13.name, sup14.name, sup15.name, sup16.name, sup17.name, sup18.name, sup19.name, sup20.name,
					sup21.name, sup22.name, sup23.name, sup24.name, sup25.name, sup26.name, sup27.name, sup28.name, sup29.name, sup30.name,
					sup31.name, sup32.name, sup33.name, sup34.name, sup35.name, sup36.name, sup37.name, sup38.name, sup39.name, sup40.name,
					sup41.name, sup42.name, sup43.name, sup44.name, sup45.name, sup46.name, sup47.name, sup48.name, sup49.name, sup50.name]
					
			
					supv[14] = [sup1.value,sup2.value,sup3.value,sup4.value,sup5.value,sup6.value,sup7.value, sup8.value, sup9.value, sup10.value,
						sup11.value, sup12.value, sup13.value, sup14.value, sup15.value, sup16.value, sup17.value, sup18.value, sup19.value, sup20.value,
						sup21.value, sup22.value, sup23.value, sup24.value, sup25.value, sup26.value, sup27.value, sup28.value, sup29.value, sup30.value,
						sup31.value, sup32.value, sup33.value, sup34.value, sup35.value, sup36.value, sup37.value, sup38.value, sup39.value, sup40.value,
						sup41.value, sup42.value, sup43.value, sup44.value, sup45.value, sup46.value, sup47.value, sup48.value, sup49.value, sup50.value]
						
						supc[14] = [sup1.color,sup2.color,sup3.color,sup4.color,sup5.color,sup6.color,sup7.color, sup8.color, sup9.color, sup10.color,
							sup11.color, sup12.color, sup13.color, sup14.color, sup15.color, sup16.color, sup17.color, sup18.color, sup19.color, sup20.color,
							sup21.color, sup22.color, sup23.color, sup24.color, sup25.color, sup26.color, sup27.color, sup28.color, sup29.color, sup30.color,
							sup31.color, sup32.color, sup33.color, sup34.color, sup35.color, sup36.color, sup37.color, sup38.color, sup39.color, sup40.color,
							sup41.color, sup42.color, sup43.color, sup44.color, sup45.color, sup46.color, sup47.color, sup48.color, sup49.color, sup50.color]
							
			supb[14] = [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false,
				false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false,
				false, false, false, false, false];
			
			supst[14] = ['SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY',
			'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY',
			'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY']
			/////to be fitted in line15613




const shuffled15 = cards.sort(() => 0.5 - Math.random());

// Get sub-array of first n elements after shuffled
let ran15 = shuffled15.slice(0, 50);
sup1 = ran15[0];sup2 = ran15[1];sup3 = ran15[2];sup4 = ran15[3];sup5 = ran15[4];sup6 = ran15[5];sup7 = ran15[6];sup8 = ran15[7];sup9 = ran15[8];sup10 = ran15[9];
sup11 = ran15[10];sup12 = ran15[11];sup13 = ran15[12];sup14 = ran15[13];sup15 = ran15[14];sup16 = ran15[15];sup17 = ran15[16];sup18 = ran15[17];sup19 = ran15[18];sup20 = ran15[19];
sup21 = ran15[20];sup22 = ran15[21];sup23 = ran15[22];sup24 = ran15[23];sup25 = ran15[24];sup26 = ran15[25];sup27 = ran15[26];sup28 = ran15[27];sup29 = ran15[28];sup30 = ran15[29];
sup31 = ran15[30];sup32 = ran15[31];sup33 = ran15[32];sup34 = ran15[33];sup35 = ran15[34];sup36 = ran15[35];sup37 = ran15[36];sup38 = ran15[37];sup39 = ran15[38];sup40 = ran15[39];
sup41 = ran15[40];sup42 = ran15[41];sup43 = ran15[42];sup44 = ran15[43];sup45 = ran15[44];sup46 = ran15[45];sup47 = ran15[46];sup48 = ran15[47];sup49 = ran15[48];sup50 = ran15[49];


supe[15] = [sup1.emoji,sup2.emoji,sup3.emoji,sup4.emoji,sup5.emoji,sup6.emoji,sup7.emoji, sup8.emoji, sup9.emoji, sup10.emoji,
sup11.emoji, sup12.emoji, sup13.emoji, sup14.emoji, sup15.emoji, sup16.emoji, sup17.emoji, sup18.emoji, sup19.emoji, sup20.emoji,
sup21.emoji, sup22.emoji, sup23.emoji, sup24.emoji, sup25.emoji, sup26.emoji, sup27.emoji, sup28.emoji, sup29.emoji, sup30.emoji,
sup31.emoji, sup32.emoji, sup33.emoji, sup34.emoji, sup35.emoji, sup36.emoji, sup37.emoji, sup38.emoji, sup39.emoji, sup40.emoji,
sup41.emoji, sup42.emoji, sup43.emoji, sup44.emoji, sup45.emoji, sup46.emoji, sup47.emoji, sup48.emoji, sup49.emoji, sup50.emoji]

sups[15] = [sup1.sn,sup2.sn,sup3.sn,sup4.sn,sup5.sn,sup6.sn,sup7.sn, sup8.sn, sup9.sn, sup10.sn,
	sup11.sn, sup12.sn, sup13.sn, sup14.sn, sup15.sn, sup16.sn, sup17.sn, sup18.sn, sup19.sn, sup20.sn,
	sup21.sn, sup22.sn, sup23.sn, sup24.sn, sup25.sn, sup26.sn, sup27.sn, sup28.sn, sup29.sn, sup30.sn,
	sup31.sn, sup32.sn, sup33.sn, sup34.sn, sup35.sn, sup36.sn, sup37.sn, sup38.sn, sup39.sn, sup40.sn,
	sup41.sn, sup42.sn, sup43.sn, sup44.sn, sup45.sn, sup46.sn, sup47.sn, sup48.sn, sup49.sn, sup50.sn]
	
	supr[15] = [sup1.name,sup2.name,sup3.name,sup4.name,sup5.name,sup6.name,sup7.name, sup8.name, sup9.name, sup10.name,
		sup11.name, sup12.name, sup13.name, sup14.name, sup15.name, sup16.name, sup17.name, sup18.name, sup19.name, sup20.name,
		sup21.name, sup22.name, sup23.name, sup24.name, sup25.name, sup26.name, sup27.name, sup28.name, sup29.name, sup30.name,
		sup31.name, sup32.name, sup33.name, sup34.name, sup35.name, sup36.name, sup37.name, sup38.name, sup39.name, sup40.name,
		sup41.name, sup42.name, sup43.name, sup44.name, sup45.name, sup46.name, sup47.name, sup48.name, sup49.name, sup50.name]
		

		supv[15] = [sup1.value,sup2.value,sup3.value,sup4.value,sup5.value,sup6.value,sup7.value, sup8.value, sup9.value, sup10.value,
			sup11.value, sup12.value, sup13.value, sup14.value, sup15.value, sup16.value, sup17.value, sup18.value, sup19.value, sup20.value,
			sup21.value, sup22.value, sup23.value, sup24.value, sup25.value, sup26.value, sup27.value, sup28.value, sup29.value, sup30.value,
			sup31.value, sup32.value, sup33.value, sup34.value, sup35.value, sup36.value, sup37.value, sup38.value, sup39.value, sup40.value,
			sup41.value, sup42.value, sup43.value, sup44.value, sup45.value, sup46.value, sup47.value, sup48.value, sup49.value, sup50.value]
			
			supc[15] = [sup1.color,sup2.color,sup3.color,sup4.color,sup5.color,sup6.color,sup7.color, sup8.color, sup9.color, sup10.color,
				sup11.color, sup12.color, sup13.color, sup14.color, sup15.color, sup16.color, sup17.color, sup18.color, sup19.color, sup20.color,
				sup21.color, sup22.color, sup23.color, sup24.color, sup25.color, sup26.color, sup27.color, sup28.color, sup29.color, sup30.color,
				sup31.color, sup32.color, sup33.color, sup34.color, sup35.color, sup36.color, sup37.color, sup38.color, sup39.color, sup40.color,
				sup41.color, sup42.color, sup43.color, sup44.color, sup45.color, sup46.color, sup47.color, sup48.color, sup49.color, sup50.color]
				
supb[15] = [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false,
	false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false,
	false, false, false, false, false];

supst[15] = ['SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY',
'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY',
'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY']
/////to be fitted in line15613




const shuffled16 = cards.sort(() => 0.5 - Math.random());

			// Get sub-array of first n elements after shuffled
			let ran16 = shuffled16.slice(0, 50);
			sup1 = ran16[0];sup2 = ran16[1];sup3 = ran16[2];sup4 = ran16[3];sup5 = ran16[4];sup6 = ran16[5];sup7 = ran16[6];sup8 = ran16[7];sup9 = ran16[8];sup10 = ran16[9];
			sup11 = ran16[10];sup12 = ran16[11];sup13 = ran16[12];sup14 = ran16[13];sup15 = ran16[14];sup16 = ran16[15];sup17 = ran16[16];sup18 = ran16[17];sup19 = ran16[18];sup20 = ran16[19];
			sup21 = ran16[20];sup22 = ran16[21];sup23 = ran16[22];sup24 = ran16[23];sup25 = ran16[24];sup26 = ran16[25];sup27 = ran16[26];sup28 = ran16[27];sup29 = ran16[28];sup30 = ran16[29];
			sup31 = ran16[30];sup32 = ran16[31];sup33 = ran16[32];sup34 = ran16[33];sup35 = ran16[34];sup36 = ran16[35];sup37 = ran16[36];sup38 = ran16[37];sup39 = ran16[38];sup40 = ran16[39];
			sup41 = ran16[40];sup42 = ran16[41];sup43 = ran16[42];sup44 = ran16[43];sup45 = ran16[44];sup46 = ran16[45];sup47 = ran16[46];sup48 = ran16[47];sup49 = ran16[48];sup50 = ran16[49];


			supe[16] = [sup1.emoji,sup2.emoji,sup3.emoji,sup4.emoji,sup5.emoji,sup6.emoji,sup7.emoji, sup8.emoji, sup9.emoji, sup10.emoji,
			sup11.emoji, sup12.emoji, sup13.emoji, sup14.emoji, sup15.emoji, sup16.emoji, sup17.emoji, sup18.emoji, sup19.emoji, sup20.emoji,
			sup21.emoji, sup22.emoji, sup23.emoji, sup24.emoji, sup25.emoji, sup26.emoji, sup27.emoji, sup28.emoji, sup29.emoji, sup30.emoji,
			sup31.emoji, sup32.emoji, sup33.emoji, sup34.emoji, sup35.emoji, sup36.emoji, sup37.emoji, sup38.emoji, sup39.emoji, sup40.emoji,
			sup41.emoji, sup42.emoji, sup43.emoji, sup44.emoji, sup45.emoji, sup46.emoji, sup47.emoji, sup48.emoji, sup49.emoji, sup50.emoji]
			
			sups[16] = [sup1.sn,sup2.sn,sup3.sn,sup4.sn,sup5.sn,sup6.sn,sup7.sn, sup8.sn, sup9.sn, sup10.sn,
				sup11.sn, sup12.sn, sup13.sn, sup14.sn, sup15.sn, sup16.sn, sup17.sn, sup18.sn, sup19.sn, sup20.sn,
				sup21.sn, sup22.sn, sup23.sn, sup24.sn, sup25.sn, sup26.sn, sup27.sn, sup28.sn, sup29.sn, sup30.sn,
				sup31.sn, sup32.sn, sup33.sn, sup34.sn, sup35.sn, sup36.sn, sup37.sn, sup38.sn, sup39.sn, sup40.sn,
				sup41.sn, sup42.sn, sup43.sn, sup44.sn, sup45.sn, sup46.sn, sup47.sn, sup48.sn, sup49.sn, sup50.sn]
				
				supr[16] = [sup1.name,sup2.name,sup3.name,sup4.name,sup5.name,sup6.name,sup7.name, sup8.name, sup9.name, sup10.name,
					sup11.name, sup12.name, sup13.name, sup14.name, sup15.name, sup16.name, sup17.name, sup18.name, sup19.name, sup20.name,
					sup21.name, sup22.name, sup23.name, sup24.name, sup25.name, sup26.name, sup27.name, sup28.name, sup29.name, sup30.name,
					sup31.name, sup32.name, sup33.name, sup34.name, sup35.name, sup36.name, sup37.name, sup38.name, sup39.name, sup40.name,
					sup41.name, sup42.name, sup43.name, sup44.name, sup45.name, sup46.name, sup47.name, sup48.name, sup49.name, sup50.name]
					
			
					supv[16] = [sup1.value,sup2.value,sup3.value,sup4.value,sup5.value,sup6.value,sup7.value, sup8.value, sup9.value, sup10.value,
						sup11.value, sup12.value, sup13.value, sup14.value, sup15.value, sup16.value, sup17.value, sup18.value, sup19.value, sup20.value,
						sup21.value, sup22.value, sup23.value, sup24.value, sup25.value, sup26.value, sup27.value, sup28.value, sup29.value, sup30.value,
						sup31.value, sup32.value, sup33.value, sup34.value, sup35.value, sup36.value, sup37.value, sup38.value, sup39.value, sup40.value,
						sup41.value, sup42.value, sup43.value, sup44.value, sup45.value, sup46.value, sup47.value, sup48.value, sup49.value, sup50.value]
						
						supc[16] = [sup1.color,sup2.color,sup3.color,sup4.color,sup5.color,sup6.color,sup7.color, sup8.color, sup9.color, sup10.color,
							sup11.color, sup12.color, sup13.color, sup14.color, sup15.color, sup16.color, sup17.color, sup18.color, sup19.color, sup20.color,
							sup21.color, sup22.color, sup23.color, sup24.color, sup25.color, sup26.color, sup27.color, sup28.color, sup29.color, sup30.color,
							sup31.color, sup32.color, sup33.color, sup34.color, sup35.color, sup36.color, sup37.color, sup38.color, sup39.color, sup40.color,
							sup41.color, sup42.color, sup43.color, sup44.color, sup45.color, sup46.color, sup47.color, sup48.color, sup49.color, sup50.color]
							
			supb[16] = [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false,
				false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false,
				false, false, false, false, false];
			
			supst[16] = ['SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY',
			'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY',
			'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY']
			/////to be fitted in line15613




const shuffled17 = cards.sort(() => 0.5 - Math.random());

// Get sub-array of first n elements after shuffled
let ran17 = shuffled17.slice(0, 50);
sup1 = ran17[0];sup2 = ran17[1];sup3 = ran17[2];sup4 = ran17[3];sup5 = ran17[4];sup6 = ran17[5];sup7 = ran17[6];sup8 = ran17[7];sup9 = ran17[8];sup10 = ran17[9];
sup11 = ran17[10];sup12 = ran17[11];sup13 = ran17[12];sup14 = ran17[13];sup15 = ran17[14];sup16 = ran17[15];sup17 = ran17[16];sup18 = ran17[17];sup19 = ran17[18];sup20 = ran17[19];
sup21 = ran17[20];sup22 = ran17[21];sup23 = ran17[22];sup24 = ran17[23];sup25 = ran17[24];sup26 = ran17[25];sup27 = ran17[26];sup28 = ran17[27];sup29 = ran17[28];sup30 = ran17[29];
sup31 = ran17[30];sup32 = ran17[31];sup33 = ran17[32];sup34 = ran17[33];sup35 = ran17[34];sup36 = ran17[35];sup37 = ran17[36];sup38 = ran17[37];sup39 = ran17[38];sup40 = ran17[39];
sup41 = ran17[40];sup42 = ran17[41];sup43 = ran17[42];sup44 = ran17[43];sup45 = ran17[44];sup46 = ran17[45];sup47 = ran17[46];sup48 = ran17[47];sup49 = ran17[48];sup50 = ran17[49];


supe[17] = [sup1.emoji,sup2.emoji,sup3.emoji,sup4.emoji,sup5.emoji,sup6.emoji,sup7.emoji, sup8.emoji, sup9.emoji, sup10.emoji,
sup11.emoji, sup12.emoji, sup13.emoji, sup14.emoji, sup15.emoji, sup16.emoji, sup17.emoji, sup18.emoji, sup19.emoji, sup20.emoji,
sup21.emoji, sup22.emoji, sup23.emoji, sup24.emoji, sup25.emoji, sup26.emoji, sup27.emoji, sup28.emoji, sup29.emoji, sup30.emoji,
sup31.emoji, sup32.emoji, sup33.emoji, sup34.emoji, sup35.emoji, sup36.emoji, sup37.emoji, sup38.emoji, sup39.emoji, sup40.emoji,
sup41.emoji, sup42.emoji, sup43.emoji, sup44.emoji, sup45.emoji, sup46.emoji, sup47.emoji, sup48.emoji, sup49.emoji, sup50.emoji]

sups[17] = [sup1.sn,sup2.sn,sup3.sn,sup4.sn,sup5.sn,sup6.sn,sup7.sn, sup8.sn, sup9.sn, sup10.sn,
	sup11.sn, sup12.sn, sup13.sn, sup14.sn, sup15.sn, sup16.sn, sup17.sn, sup18.sn, sup19.sn, sup20.sn,
	sup21.sn, sup22.sn, sup23.sn, sup24.sn, sup25.sn, sup26.sn, sup27.sn, sup28.sn, sup29.sn, sup30.sn,
	sup31.sn, sup32.sn, sup33.sn, sup34.sn, sup35.sn, sup36.sn, sup37.sn, sup38.sn, sup39.sn, sup40.sn,
	sup41.sn, sup42.sn, sup43.sn, sup44.sn, sup45.sn, sup46.sn, sup47.sn, sup48.sn, sup49.sn, sup50.sn]
	
	supr[17] = [sup1.name,sup2.name,sup3.name,sup4.name,sup5.name,sup6.name,sup7.name, sup8.name, sup9.name, sup10.name,
		sup11.name, sup12.name, sup13.name, sup14.name, sup15.name, sup16.name, sup17.name, sup18.name, sup19.name, sup20.name,
		sup21.name, sup22.name, sup23.name, sup24.name, sup25.name, sup26.name, sup27.name, sup28.name, sup29.name, sup30.name,
		sup31.name, sup32.name, sup33.name, sup34.name, sup35.name, sup36.name, sup37.name, sup38.name, sup39.name, sup40.name,
		sup41.name, sup42.name, sup43.name, sup44.name, sup45.name, sup46.name, sup47.name, sup48.name, sup49.name, sup50.name]
		

		supv[17] = [sup1.value,sup2.value,sup3.value,sup4.value,sup5.value,sup6.value,sup7.value, sup8.value, sup9.value, sup10.value,
			sup11.value, sup12.value, sup13.value, sup14.value, sup15.value, sup16.value, sup17.value, sup18.value, sup19.value, sup20.value,
			sup21.value, sup22.value, sup23.value, sup24.value, sup25.value, sup26.value, sup27.value, sup28.value, sup29.value, sup30.value,
			sup31.value, sup32.value, sup33.value, sup34.value, sup35.value, sup36.value, sup37.value, sup38.value, sup39.value, sup40.value,
			sup41.value, sup42.value, sup43.value, sup44.value, sup45.value, sup46.value, sup47.value, sup48.value, sup49.value, sup50.value]
			
			supc[17] = [sup1.color,sup2.color,sup3.color,sup4.color,sup5.color,sup6.color,sup7.color, sup8.color, sup9.color, sup10.color,
				sup11.color, sup12.color, sup13.color, sup14.color, sup15.color, sup16.color, sup17.color, sup18.color, sup19.color, sup20.color,
				sup21.color, sup22.color, sup23.color, sup24.color, sup25.color, sup26.color, sup27.color, sup28.color, sup29.color, sup30.color,
				sup31.color, sup32.color, sup33.color, sup34.color, sup35.color, sup36.color, sup37.color, sup38.color, sup39.color, sup40.color,
				sup41.color, sup42.color, sup43.color, sup44.color, sup45.color, sup46.color, sup47.color, sup48.color, sup49.color, sup50.color]
				
supb[17] = [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false,
	false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false,
	false, false, false, false, false];

supst[17] = ['SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY',
'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY',
'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY']
/////to be fitted in line15613




const shuffled18 = cards.sort(() => 0.5 - Math.random());

			// Get sub-array of first n elements after shuffled
			let ran18 = shuffled18.slice(0, 50);
			sup1 = ran18[0];sup2 = ran18[1];sup3 = ran18[2];sup4 = ran18[3];sup5 = ran18[4];sup6 = ran18[5];sup7 = ran18[6];sup8 = ran18[7];sup9 = ran18[8];sup10 = ran18[9];
			sup11 = ran18[10];sup12 = ran18[11];sup13 = ran18[12];sup14 = ran18[13];sup15 = ran18[14];sup16 = ran18[15];sup17 = ran18[16];sup18 = ran18[17];sup19 = ran18[18];sup20 = ran18[19];
			sup21 = ran18[20];sup22 = ran18[21];sup23 = ran18[22];sup24 = ran18[23];sup25 = ran18[24];sup26 = ran18[25];sup27 = ran18[26];sup28 = ran18[27];sup29 = ran18[28];sup30 = ran18[29];
			sup31 = ran18[30];sup32 = ran18[31];sup33 = ran18[32];sup34 = ran18[33];sup35 = ran18[34];sup36 = ran18[35];sup37 = ran18[36];sup38 = ran18[37];sup39 = ran18[38];sup40 = ran18[39];
			sup41 = ran18[40];sup42 = ran18[41];sup43 = ran18[42];sup44 = ran18[43];sup45 = ran18[44];sup46 = ran18[45];sup47 = ran18[46];sup48 = ran18[47];sup49 = ran18[48];sup50 = ran18[49];


			supe[18] = [sup1.emoji,sup2.emoji,sup3.emoji,sup4.emoji,sup5.emoji,sup6.emoji,sup7.emoji, sup8.emoji, sup9.emoji, sup10.emoji,
			sup11.emoji, sup12.emoji, sup13.emoji, sup14.emoji, sup15.emoji, sup16.emoji, sup17.emoji, sup18.emoji, sup19.emoji, sup20.emoji,
			sup21.emoji, sup22.emoji, sup23.emoji, sup24.emoji, sup25.emoji, sup26.emoji, sup27.emoji, sup28.emoji, sup29.emoji, sup30.emoji,
			sup31.emoji, sup32.emoji, sup33.emoji, sup34.emoji, sup35.emoji, sup36.emoji, sup37.emoji, sup38.emoji, sup39.emoji, sup40.emoji,
			sup41.emoji, sup42.emoji, sup43.emoji, sup44.emoji, sup45.emoji, sup46.emoji, sup47.emoji, sup48.emoji, sup49.emoji, sup50.emoji]
			
			sups[18] = [sup1.sn,sup2.sn,sup3.sn,sup4.sn,sup5.sn,sup6.sn,sup7.sn, sup8.sn, sup9.sn, sup10.sn,
				sup11.sn, sup12.sn, sup13.sn, sup14.sn, sup15.sn, sup16.sn, sup17.sn, sup18.sn, sup19.sn, sup20.sn,
				sup21.sn, sup22.sn, sup23.sn, sup24.sn, sup25.sn, sup26.sn, sup27.sn, sup28.sn, sup29.sn, sup30.sn,
				sup31.sn, sup32.sn, sup33.sn, sup34.sn, sup35.sn, sup36.sn, sup37.sn, sup38.sn, sup39.sn, sup40.sn,
				sup41.sn, sup42.sn, sup43.sn, sup44.sn, sup45.sn, sup46.sn, sup47.sn, sup48.sn, sup49.sn, sup50.sn]
				
				supr[18] = [sup1.name,sup2.name,sup3.name,sup4.name,sup5.name,sup6.name,sup7.name, sup8.name, sup9.name, sup10.name,
					sup11.name, sup12.name, sup13.name, sup14.name, sup15.name, sup16.name, sup17.name, sup18.name, sup19.name, sup20.name,
					sup21.name, sup22.name, sup23.name, sup24.name, sup25.name, sup26.name, sup27.name, sup28.name, sup29.name, sup30.name,
					sup31.name, sup32.name, sup33.name, sup34.name, sup35.name, sup36.name, sup37.name, sup38.name, sup39.name, sup40.name,
					sup41.name, sup42.name, sup43.name, sup44.name, sup45.name, sup46.name, sup47.name, sup48.name, sup49.name, sup50.name]
					
			
					supv[18] = [sup1.value,sup2.value,sup3.value,sup4.value,sup5.value,sup6.value,sup7.value, sup8.value, sup9.value, sup10.value,
						sup11.value, sup12.value, sup13.value, sup14.value, sup15.value, sup16.value, sup17.value, sup18.value, sup19.value, sup20.value,
						sup21.value, sup22.value, sup23.value, sup24.value, sup25.value, sup26.value, sup27.value, sup28.value, sup29.value, sup30.value,
						sup31.value, sup32.value, sup33.value, sup34.value, sup35.value, sup36.value, sup37.value, sup38.value, sup39.value, sup40.value,
						sup41.value, sup42.value, sup43.value, sup44.value, sup45.value, sup46.value, sup47.value, sup48.value, sup49.value, sup50.value]
						
						supc[18] = [sup1.color,sup2.color,sup3.color,sup4.color,sup5.color,sup6.color,sup7.color, sup8.color, sup9.color, sup10.color,
							sup11.color, sup12.color, sup13.color, sup14.color, sup15.color, sup16.color, sup17.color, sup18.color, sup19.color, sup20.color,
							sup21.color, sup22.color, sup23.color, sup24.color, sup25.color, sup26.color, sup27.color, sup28.color, sup29.color, sup30.color,
							sup31.color, sup32.color, sup33.color, sup34.color, sup35.color, sup36.color, sup37.color, sup38.color, sup39.color, sup40.color,
							sup41.color, sup42.color, sup43.color, sup44.color, sup45.color, sup46.color, sup47.color, sup48.color, sup49.color, sup50.color]
							
			supb[18] = [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false,
				false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false,
				false, false, false, false, false];
			
			supst[18] = ['SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY',
			'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY',
			'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY']
			/////to be fitted in line15613




const shuffled19 = cards.sort(() => 0.5 - Math.random());

// Get sub-array of first n elements after shuffled
let ran19 = shuffled19.slice(0, 50);
sup1 = ran19[0];sup2 = ran19[1];sup3 = ran19[2];sup4 = ran19[3];sup5 = ran19[4];sup6 = ran19[5];sup7 = ran19[6];sup8 = ran19[7];sup9 = ran19[8];sup10 = ran19[9];
sup11 = ran19[10];sup12 = ran19[11];sup13 = ran19[12];sup14 = ran19[13];sup15 = ran19[14];sup16 = ran19[15];sup17 = ran19[16];sup18 = ran19[17];sup19 = ran19[18];sup20 = ran19[19];
sup21 = ran19[20];sup22 = ran19[21];sup23 = ran19[22];sup24 = ran19[23];sup25 = ran19[24];sup26 = ran19[25];sup27 = ran19[26];sup28 = ran19[27];sup29 = ran19[28];sup30 = ran19[29];
sup31 = ran19[30];sup32 = ran19[31];sup33 = ran19[32];sup34 = ran19[33];sup35 = ran19[34];sup36 = ran19[35];sup37 = ran19[36];sup38 = ran19[37];sup39 = ran19[38];sup40 = ran19[39];
sup41 = ran19[40];sup42 = ran19[41];sup43 = ran19[42];sup44 = ran19[43];sup45 = ran19[44];sup46 = ran19[45];sup47 = ran19[46];sup48 = ran19[47];sup49 = ran19[48];sup50 = ran19[49];


supe[19] = [sup1.emoji,sup2.emoji,sup3.emoji,sup4.emoji,sup5.emoji,sup6.emoji,sup7.emoji, sup8.emoji, sup9.emoji, sup10.emoji,
sup11.emoji, sup12.emoji, sup13.emoji, sup14.emoji, sup15.emoji, sup16.emoji, sup17.emoji, sup18.emoji, sup19.emoji, sup20.emoji,
sup21.emoji, sup22.emoji, sup23.emoji, sup24.emoji, sup25.emoji, sup26.emoji, sup27.emoji, sup28.emoji, sup29.emoji, sup30.emoji,
sup31.emoji, sup32.emoji, sup33.emoji, sup34.emoji, sup35.emoji, sup36.emoji, sup37.emoji, sup38.emoji, sup39.emoji, sup40.emoji,
sup41.emoji, sup42.emoji, sup43.emoji, sup44.emoji, sup45.emoji, sup46.emoji, sup47.emoji, sup48.emoji, sup49.emoji, sup50.emoji]

sups[19] = [sup1.sn,sup2.sn,sup3.sn,sup4.sn,sup5.sn,sup6.sn,sup7.sn, sup8.sn, sup9.sn, sup10.sn,
	sup11.sn, sup12.sn, sup13.sn, sup14.sn, sup15.sn, sup16.sn, sup17.sn, sup18.sn, sup19.sn, sup20.sn,
	sup21.sn, sup22.sn, sup23.sn, sup24.sn, sup25.sn, sup26.sn, sup27.sn, sup28.sn, sup29.sn, sup30.sn,
	sup31.sn, sup32.sn, sup33.sn, sup34.sn, sup35.sn, sup36.sn, sup37.sn, sup38.sn, sup39.sn, sup40.sn,
	sup41.sn, sup42.sn, sup43.sn, sup44.sn, sup45.sn, sup46.sn, sup47.sn, sup48.sn, sup49.sn, sup50.sn]
	
	supr[19] = [sup1.name,sup2.name,sup3.name,sup4.name,sup5.name,sup6.name,sup7.name, sup8.name, sup9.name, sup10.name,
		sup11.name, sup12.name, sup13.name, sup14.name, sup15.name, sup16.name, sup17.name, sup18.name, sup19.name, sup20.name,
		sup21.name, sup22.name, sup23.name, sup24.name, sup25.name, sup26.name, sup27.name, sup28.name, sup29.name, sup30.name,
		sup31.name, sup32.name, sup33.name, sup34.name, sup35.name, sup36.name, sup37.name, sup38.name, sup39.name, sup40.name,
		sup41.name, sup42.name, sup43.name, sup44.name, sup45.name, sup46.name, sup47.name, sup48.name, sup49.name, sup50.name]
		

		supv[19] = [sup1.value,sup2.value,sup3.value,sup4.value,sup5.value,sup6.value,sup7.value, sup8.value, sup9.value, sup10.value,
			sup11.value, sup12.value, sup13.value, sup14.value, sup15.value, sup16.value, sup17.value, sup18.value, sup19.value, sup20.value,
			sup21.value, sup22.value, sup23.value, sup24.value, sup25.value, sup26.value, sup27.value, sup28.value, sup29.value, sup30.value,
			sup31.value, sup32.value, sup33.value, sup34.value, sup35.value, sup36.value, sup37.value, sup38.value, sup39.value, sup40.value,
			sup41.value, sup42.value, sup43.value, sup44.value, sup45.value, sup46.value, sup47.value, sup48.value, sup49.value, sup50.value]
			
			supc[19] = [sup1.color,sup2.color,sup3.color,sup4.color,sup5.color,sup6.color,sup7.color, sup8.color, sup9.color, sup10.color,
				sup11.color, sup12.color, sup13.color, sup14.color, sup15.color, sup16.color, sup17.color, sup18.color, sup19.color, sup20.color,
				sup21.color, sup22.color, sup23.color, sup24.color, sup25.color, sup26.color, sup27.color, sup28.color, sup29.color, sup30.color,
				sup31.color, sup32.color, sup33.color, sup34.color, sup35.color, sup36.color, sup37.color, sup38.color, sup39.color, sup40.color,
				sup41.color, sup42.color, sup43.color, sup44.color, sup45.color, sup46.color, sup47.color, sup48.color, sup49.color, sup50.color]
				
supb[19] = [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false,
	false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false,
	false, false, false, false, false];

supst[19] = ['SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY',
'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY',
'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY']
/////to be fitted in line15613




const shuffled20 = cards.sort(() => 0.5 - Math.random());

			// Get sub-array of first n elements after shuffled
			let ran20 = shuffled20.slice(0, 50);
			sup1 = ran20[0];sup2 = ran20[1];sup3 = ran20[2];sup4 = ran20[3];sup5 = ran20[4];sup6 = ran20[5];sup7 = ran20[6];sup8 = ran20[7];sup9 = ran20[8];sup10 = ran20[9];
			sup11 = ran20[10];sup12 = ran20[11];sup13 = ran20[12];sup14 = ran20[13];sup15 = ran20[14];sup16 = ran20[15];sup17 = ran20[16];sup18 = ran20[17];sup19 = ran20[18];sup20 = ran20[19];
			sup21 = ran20[20];sup22 = ran20[21];sup23 = ran20[22];sup24 = ran20[23];sup25 = ran20[24];sup26 = ran20[25];sup27 = ran20[26];sup28 = ran20[27];sup29 = ran20[28];sup30 = ran20[29];
			sup31 = ran20[30];sup32 = ran20[31];sup33 = ran20[32];sup34 = ran20[33];sup35 = ran20[34];sup36 = ran20[35];sup37 = ran20[36];sup38 = ran20[37];sup39 = ran20[38];sup40 = ran20[39];
			sup41 = ran20[40];sup42 = ran20[41];sup43 = ran20[42];sup44 = ran20[43];sup45 = ran20[44];sup46 = ran20[45];sup47 = ran20[46];sup48 = ran20[47];sup49 = ran20[48];sup50 = ran20[49];


			supe[20] = [sup1.emoji,sup2.emoji,sup3.emoji,sup4.emoji,sup5.emoji,sup6.emoji,sup7.emoji, sup8.emoji, sup9.emoji, sup10.emoji,
			sup11.emoji, sup12.emoji, sup13.emoji, sup14.emoji, sup15.emoji, sup16.emoji, sup17.emoji, sup18.emoji, sup19.emoji, sup20.emoji,
			sup21.emoji, sup22.emoji, sup23.emoji, sup24.emoji, sup25.emoji, sup26.emoji, sup27.emoji, sup28.emoji, sup29.emoji, sup30.emoji,
			sup31.emoji, sup32.emoji, sup33.emoji, sup34.emoji, sup35.emoji, sup36.emoji, sup37.emoji, sup38.emoji, sup39.emoji, sup40.emoji,
			sup41.emoji, sup42.emoji, sup43.emoji, sup44.emoji, sup45.emoji, sup46.emoji, sup47.emoji, sup48.emoji, sup49.emoji, sup50.emoji]
			
			sups[20] = [sup1.sn,sup2.sn,sup3.sn,sup4.sn,sup5.sn,sup6.sn,sup7.sn, sup8.sn, sup9.sn, sup10.sn,
				sup11.sn, sup12.sn, sup13.sn, sup14.sn, sup15.sn, sup16.sn, sup17.sn, sup18.sn, sup19.sn, sup20.sn,
				sup21.sn, sup22.sn, sup23.sn, sup24.sn, sup25.sn, sup26.sn, sup27.sn, sup28.sn, sup29.sn, sup30.sn,
				sup31.sn, sup32.sn, sup33.sn, sup34.sn, sup35.sn, sup36.sn, sup37.sn, sup38.sn, sup39.sn, sup40.sn,
				sup41.sn, sup42.sn, sup43.sn, sup44.sn, sup45.sn, sup46.sn, sup47.sn, sup48.sn, sup49.sn, sup50.sn]
				
				supr[20] = [sup1.name,sup2.name,sup3.name,sup4.name,sup5.name,sup6.name,sup7.name, sup8.name, sup9.name, sup10.name,
					sup11.name, sup12.name, sup13.name, sup14.name, sup15.name, sup16.name, sup17.name, sup18.name, sup19.name, sup20.name,
					sup21.name, sup22.name, sup23.name, sup24.name, sup25.name, sup26.name, sup27.name, sup28.name, sup29.name, sup30.name,
					sup31.name, sup32.name, sup33.name, sup34.name, sup35.name, sup36.name, sup37.name, sup38.name, sup39.name, sup40.name,
					sup41.name, sup42.name, sup43.name, sup44.name, sup45.name, sup46.name, sup47.name, sup48.name, sup49.name, sup50.name]
					
			
					supv[20] = [sup1.value,sup2.value,sup3.value,sup4.value,sup5.value,sup6.value,sup7.value, sup8.value, sup9.value, sup10.value,
						sup11.value, sup12.value, sup13.value, sup14.value, sup15.value, sup16.value, sup17.value, sup18.value, sup19.value, sup20.value,
						sup21.value, sup22.value, sup23.value, sup24.value, sup25.value, sup26.value, sup27.value, sup28.value, sup29.value, sup30.value,
						sup31.value, sup32.value, sup33.value, sup34.value, sup35.value, sup36.value, sup37.value, sup38.value, sup39.value, sup40.value,
						sup41.value, sup42.value, sup43.value, sup44.value, sup45.value, sup46.value, sup47.value, sup48.value, sup49.value, sup50.value]
						
						supc[20] = [sup1.color,sup2.color,sup3.color,sup4.color,sup5.color,sup6.color,sup7.color, sup8.color, sup9.color, sup10.color,
							sup11.color, sup12.color, sup13.color, sup14.color, sup15.color, sup16.color, sup17.color, sup18.color, sup19.color, sup20.color,
							sup21.color, sup22.color, sup23.color, sup24.color, sup25.color, sup26.color, sup27.color, sup28.color, sup29.color, sup30.color,
							sup31.color, sup32.color, sup33.color, sup34.color, sup35.color, sup36.color, sup37.color, sup38.color, sup39.color, sup40.color,
							sup41.color, sup42.color, sup43.color, sup44.color, sup45.color, sup46.color, sup47.color, sup48.color, sup49.color, sup50.color]
							
			supb[20] = [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false,
				false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false,
				false, false, false, false, false];
			
			supst[20] = ['SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY',
			'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY',
			'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY']
			/////to be fitted in line15613




const shuffled21 = cards.sort(() => 0.5 - Math.random());

// Get sub-array of first n elements after shuffled
let ran21 = shuffled21.slice(0, 50);
sup1 = ran21[0];sup2 = ran21[1];sup3 = ran21[2];sup4 = ran21[3];sup5 = ran21[4];sup6 = ran21[5];sup7 = ran21[6];sup8 = ran21[7];sup9 = ran21[8];sup10 = ran21[9];
sup11 = ran21[10];sup12 = ran21[11];sup13 = ran21[12];sup14 = ran21[13];sup15 = ran21[14];sup16 = ran21[15];sup17 = ran21[16];sup18 = ran21[17];sup19 = ran21[18];sup20 = ran21[19];
sup21 = ran21[20];sup22 = ran21[21];sup23 = ran21[22];sup24 = ran21[23];sup25 = ran21[24];sup26 = ran21[25];sup27 = ran21[26];sup28 = ran21[27];sup29 = ran21[28];sup30 = ran21[29];
sup31 = ran21[30];sup32 = ran21[31];sup33 = ran21[32];sup34 = ran21[33];sup35 = ran21[34];sup36 = ran21[35];sup37 = ran21[36];sup38 = ran21[37];sup39 = ran21[38];sup40 = ran21[39];
sup41 = ran21[40];sup42 = ran21[41];sup43 = ran21[42];sup44 = ran21[43];sup45 = ran21[44];sup46 = ran21[45];sup47 = ran21[46];sup48 = ran21[47];sup49 = ran21[48];sup50 = ran21[49];


supe[21] = [sup1.emoji,sup2.emoji,sup3.emoji,sup4.emoji,sup5.emoji,sup6.emoji,sup7.emoji, sup8.emoji, sup9.emoji, sup10.emoji,
sup11.emoji, sup12.emoji, sup13.emoji, sup14.emoji, sup15.emoji, sup16.emoji, sup17.emoji, sup18.emoji, sup19.emoji, sup20.emoji,
sup21.emoji, sup22.emoji, sup23.emoji, sup24.emoji, sup25.emoji, sup26.emoji, sup27.emoji, sup28.emoji, sup29.emoji, sup30.emoji,
sup31.emoji, sup32.emoji, sup33.emoji, sup34.emoji, sup35.emoji, sup36.emoji, sup37.emoji, sup38.emoji, sup39.emoji, sup40.emoji,
sup41.emoji, sup42.emoji, sup43.emoji, sup44.emoji, sup45.emoji, sup46.emoji, sup47.emoji, sup48.emoji, sup49.emoji, sup50.emoji]

sups[21] = [sup1.sn,sup2.sn,sup3.sn,sup4.sn,sup5.sn,sup6.sn,sup7.sn, sup8.sn, sup9.sn, sup10.sn,
	sup11.sn, sup12.sn, sup13.sn, sup14.sn, sup15.sn, sup16.sn, sup17.sn, sup18.sn, sup19.sn, sup20.sn,
	sup21.sn, sup22.sn, sup23.sn, sup24.sn, sup25.sn, sup26.sn, sup27.sn, sup28.sn, sup29.sn, sup30.sn,
	sup31.sn, sup32.sn, sup33.sn, sup34.sn, sup35.sn, sup36.sn, sup37.sn, sup38.sn, sup39.sn, sup40.sn,
	sup41.sn, sup42.sn, sup43.sn, sup44.sn, sup45.sn, sup46.sn, sup47.sn, sup48.sn, sup49.sn, sup50.sn]
	
	supr[21] = [sup1.name,sup2.name,sup3.name,sup4.name,sup5.name,sup6.name,sup7.name, sup8.name, sup9.name, sup10.name,
		sup11.name, sup12.name, sup13.name, sup14.name, sup15.name, sup16.name, sup17.name, sup18.name, sup19.name, sup20.name,
		sup21.name, sup22.name, sup23.name, sup24.name, sup25.name, sup26.name, sup27.name, sup28.name, sup29.name, sup30.name,
		sup31.name, sup32.name, sup33.name, sup34.name, sup35.name, sup36.name, sup37.name, sup38.name, sup39.name, sup40.name,
		sup41.name, sup42.name, sup43.name, sup44.name, sup45.name, sup46.name, sup47.name, sup48.name, sup49.name, sup50.name]
		

		supv[21] = [sup1.value,sup2.value,sup3.value,sup4.value,sup5.value,sup6.value,sup7.value, sup8.value, sup9.value, sup10.value,
			sup11.value, sup12.value, sup13.value, sup14.value, sup15.value, sup16.value, sup17.value, sup18.value, sup19.value, sup20.value,
			sup21.value, sup22.value, sup23.value, sup24.value, sup25.value, sup26.value, sup27.value, sup28.value, sup29.value, sup30.value,
			sup31.value, sup32.value, sup33.value, sup34.value, sup35.value, sup36.value, sup37.value, sup38.value, sup39.value, sup40.value,
			sup41.value, sup42.value, sup43.value, sup44.value, sup45.value, sup46.value, sup47.value, sup48.value, sup49.value, sup50.value]
			
			supc[21] = [sup1.color,sup2.color,sup3.color,sup4.color,sup5.color,sup6.color,sup7.color, sup8.color, sup9.color, sup10.color,
				sup11.color, sup12.color, sup13.color, sup14.color, sup15.color, sup16.color, sup17.color, sup18.color, sup19.color, sup20.color,
				sup21.color, sup22.color, sup23.color, sup24.color, sup25.color, sup26.color, sup27.color, sup28.color, sup29.color, sup30.color,
				sup31.color, sup32.color, sup33.color, sup34.color, sup35.color, sup36.color, sup37.color, sup38.color, sup39.color, sup40.color,
				sup41.color, sup42.color, sup43.color, sup44.color, sup45.color, sup46.color, sup47.color, sup48.color, sup49.color, sup50.color]
				
supb[21] = [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false,
	false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false,
	false, false, false, false, false];

supst[21] = ['SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY',
'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY',
'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY']
/////to be fitted in line15613




const shuffled22 = cards.sort(() => 0.5 - Math.random());

			// Get sub-array of first n elements after shuffled
			let ran22 = shuffled22.slice(0, 50);
			sup1 = ran22[0];sup2 = ran22[1];sup3 = ran22[2];sup4 = ran22[3];sup5 = ran22[4];sup6 = ran22[5];sup7 = ran22[6];sup8 = ran22[7];sup9 = ran22[8];sup10 = ran22[9];
			sup11 = ran22[10];sup12 = ran22[11];sup13 = ran22[12];sup14 = ran22[13];sup15 = ran22[14];sup16 = ran22[15];sup17 = ran22[16];sup18 = ran22[17];sup19 = ran22[18];sup20 = ran22[19];
			sup21 = ran22[20];sup22 = ran22[21];sup23 = ran22[22];sup24 = ran22[23];sup25 = ran22[24];sup26 = ran22[25];sup27 = ran22[26];sup28 = ran22[27];sup29 = ran22[28];sup30 = ran22[29];
			sup31 = ran22[30];sup32 = ran22[31];sup33 = ran22[32];sup34 = ran22[33];sup35 = ran22[34];sup36 = ran22[35];sup37 = ran22[36];sup38 = ran22[37];sup39 = ran22[38];sup40 = ran22[39];
			sup41 = ran22[40];sup42 = ran22[41];sup43 = ran22[42];sup44 = ran22[43];sup45 = ran22[44];sup46 = ran22[45];sup47 = ran22[46];sup48 = ran22[47];sup49 = ran22[48];sup50 = ran22[49];


			supe[22] = [sup1.emoji,sup2.emoji,sup3.emoji,sup4.emoji,sup5.emoji,sup6.emoji,sup7.emoji, sup8.emoji, sup9.emoji, sup10.emoji,
			sup11.emoji, sup12.emoji, sup13.emoji, sup14.emoji, sup15.emoji, sup16.emoji, sup17.emoji, sup18.emoji, sup19.emoji, sup20.emoji,
			sup21.emoji, sup22.emoji, sup23.emoji, sup24.emoji, sup25.emoji, sup26.emoji, sup27.emoji, sup28.emoji, sup29.emoji, sup30.emoji,
			sup31.emoji, sup32.emoji, sup33.emoji, sup34.emoji, sup35.emoji, sup36.emoji, sup37.emoji, sup38.emoji, sup39.emoji, sup40.emoji,
			sup41.emoji, sup42.emoji, sup43.emoji, sup44.emoji, sup45.emoji, sup46.emoji, sup47.emoji, sup48.emoji, sup49.emoji, sup50.emoji]
			
			sups[22] = [sup1.sn,sup2.sn,sup3.sn,sup4.sn,sup5.sn,sup6.sn,sup7.sn, sup8.sn, sup9.sn, sup10.sn,
				sup11.sn, sup12.sn, sup13.sn, sup14.sn, sup15.sn, sup16.sn, sup17.sn, sup18.sn, sup19.sn, sup20.sn,
				sup21.sn, sup22.sn, sup23.sn, sup24.sn, sup25.sn, sup26.sn, sup27.sn, sup28.sn, sup29.sn, sup30.sn,
				sup31.sn, sup32.sn, sup33.sn, sup34.sn, sup35.sn, sup36.sn, sup37.sn, sup38.sn, sup39.sn, sup40.sn,
				sup41.sn, sup42.sn, sup43.sn, sup44.sn, sup45.sn, sup46.sn, sup47.sn, sup48.sn, sup49.sn, sup50.sn]
				
				supr[22] = [sup1.name,sup2.name,sup3.name,sup4.name,sup5.name,sup6.name,sup7.name, sup8.name, sup9.name, sup10.name,
					sup11.name, sup12.name, sup13.name, sup14.name, sup15.name, sup16.name, sup17.name, sup18.name, sup19.name, sup20.name,
					sup21.name, sup22.name, sup23.name, sup24.name, sup25.name, sup26.name, sup27.name, sup28.name, sup29.name, sup30.name,
					sup31.name, sup32.name, sup33.name, sup34.name, sup35.name, sup36.name, sup37.name, sup38.name, sup39.name, sup40.name,
					sup41.name, sup42.name, sup43.name, sup44.name, sup45.name, sup46.name, sup47.name, sup48.name, sup49.name, sup50.name]
					
			
					supv[22] = [sup1.value,sup2.value,sup3.value,sup4.value,sup5.value,sup6.value,sup7.value, sup8.value, sup9.value, sup10.value,
						sup11.value, sup12.value, sup13.value, sup14.value, sup15.value, sup16.value, sup17.value, sup18.value, sup19.value, sup20.value,
						sup21.value, sup22.value, sup23.value, sup24.value, sup25.value, sup26.value, sup27.value, sup28.value, sup29.value, sup30.value,
						sup31.value, sup32.value, sup33.value, sup34.value, sup35.value, sup36.value, sup37.value, sup38.value, sup39.value, sup40.value,
						sup41.value, sup42.value, sup43.value, sup44.value, sup45.value, sup46.value, sup47.value, sup48.value, sup49.value, sup50.value]
						
						supc[22] = [sup1.color,sup2.color,sup3.color,sup4.color,sup5.color,sup6.color,sup7.color, sup8.color, sup9.color, sup10.color,
							sup11.color, sup12.color, sup13.color, sup14.color, sup15.color, sup16.color, sup17.color, sup18.color, sup19.color, sup20.color,
							sup21.color, sup22.color, sup23.color, sup24.color, sup25.color, sup26.color, sup27.color, sup28.color, sup29.color, sup30.color,
							sup31.color, sup32.color, sup33.color, sup34.color, sup35.color, sup36.color, sup37.color, sup38.color, sup39.color, sup40.color,
							sup41.color, sup42.color, sup43.color, sup44.color, sup45.color, sup46.color, sup47.color, sup48.color, sup49.color, sup50.color]
							
			supb[22] = [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false,
				false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false,
				false, false, false, false, false];
			
			supst[22] = ['SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY',
			'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY',
			'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY']
			/////to be fitted in line15613




const shuffled23 = cards.sort(() => 0.5 - Math.random());

// Get sub-array of first n elements after shuffled
let ran23 = shuffled23.slice(0, 50);
sup1 = ran23[0];sup2 = ran23[1];sup3 = ran23[2];sup4 = ran23[3];sup5 = ran23[4];sup6 = ran23[5];sup7 = ran23[6];sup8 = ran23[7];sup9 = ran23[8];sup10 = ran23[9];
sup11 = ran23[10];sup12 = ran23[11];sup13 = ran23[12];sup14 = ran23[13];sup15 = ran23[14];sup16 = ran23[15];sup17 = ran23[16];sup18 = ran23[17];sup19 = ran23[18];sup20 = ran23[19];
sup21 = ran23[20];sup22 = ran23[21];sup23 = ran23[22];sup24 = ran23[23];sup25 = ran23[24];sup26 = ran23[25];sup27 = ran23[26];sup28 = ran23[27];sup29 = ran23[28];sup30 = ran23[29];
sup31 = ran23[30];sup32 = ran23[31];sup33 = ran23[32];sup34 = ran23[33];sup35 = ran23[34];sup36 = ran23[35];sup37 = ran23[36];sup38 = ran23[37];sup39 = ran23[38];sup40 = ran23[39];
sup41 = ran23[40];sup42 = ran23[41];sup43 = ran23[42];sup44 = ran23[43];sup45 = ran23[44];sup46 = ran23[45];sup47 = ran23[46];sup48 = ran23[47];sup49 = ran23[48];sup50 = ran23[49];


supe[23] = [sup1.emoji,sup2.emoji,sup3.emoji,sup4.emoji,sup5.emoji,sup6.emoji,sup7.emoji, sup8.emoji, sup9.emoji, sup10.emoji,
sup11.emoji, sup12.emoji, sup13.emoji, sup14.emoji, sup15.emoji, sup16.emoji, sup17.emoji, sup18.emoji, sup19.emoji, sup20.emoji,
sup21.emoji, sup22.emoji, sup23.emoji, sup24.emoji, sup25.emoji, sup26.emoji, sup27.emoji, sup28.emoji, sup29.emoji, sup30.emoji,
sup31.emoji, sup32.emoji, sup33.emoji, sup34.emoji, sup35.emoji, sup36.emoji, sup37.emoji, sup38.emoji, sup39.emoji, sup40.emoji,
sup41.emoji, sup42.emoji, sup43.emoji, sup44.emoji, sup45.emoji, sup46.emoji, sup47.emoji, sup48.emoji, sup49.emoji, sup50.emoji]

sups[23] = [sup1.sn,sup2.sn,sup3.sn,sup4.sn,sup5.sn,sup6.sn,sup7.sn, sup8.sn, sup9.sn, sup10.sn,
	sup11.sn, sup12.sn, sup13.sn, sup14.sn, sup15.sn, sup16.sn, sup17.sn, sup18.sn, sup19.sn, sup20.sn,
	sup21.sn, sup22.sn, sup23.sn, sup24.sn, sup25.sn, sup26.sn, sup27.sn, sup28.sn, sup29.sn, sup30.sn,
	sup31.sn, sup32.sn, sup33.sn, sup34.sn, sup35.sn, sup36.sn, sup37.sn, sup38.sn, sup39.sn, sup40.sn,
	sup41.sn, sup42.sn, sup43.sn, sup44.sn, sup45.sn, sup46.sn, sup47.sn, sup48.sn, sup49.sn, sup50.sn]
	
	supr[23] = [sup1.name,sup2.name,sup3.name,sup4.name,sup5.name,sup6.name,sup7.name, sup8.name, sup9.name, sup10.name,
		sup11.name, sup12.name, sup13.name, sup14.name, sup15.name, sup16.name, sup17.name, sup18.name, sup19.name, sup20.name,
		sup21.name, sup22.name, sup23.name, sup24.name, sup25.name, sup26.name, sup27.name, sup28.name, sup29.name, sup30.name,
		sup31.name, sup32.name, sup33.name, sup34.name, sup35.name, sup36.name, sup37.name, sup38.name, sup39.name, sup40.name,
		sup41.name, sup42.name, sup43.name, sup44.name, sup45.name, sup46.name, sup47.name, sup48.name, sup49.name, sup50.name]
		

		supv[23] = [sup1.value,sup2.value,sup3.value,sup4.value,sup5.value,sup6.value,sup7.value, sup8.value, sup9.value, sup10.value,
			sup11.value, sup12.value, sup13.value, sup14.value, sup15.value, sup16.value, sup17.value, sup18.value, sup19.value, sup20.value,
			sup21.value, sup22.value, sup23.value, sup24.value, sup25.value, sup26.value, sup27.value, sup28.value, sup29.value, sup30.value,
			sup31.value, sup32.value, sup33.value, sup34.value, sup35.value, sup36.value, sup37.value, sup38.value, sup39.value, sup40.value,
			sup41.value, sup42.value, sup43.value, sup44.value, sup45.value, sup46.value, sup47.value, sup48.value, sup49.value, sup50.value]
			
			supc[23] = [sup1.color,sup2.color,sup3.color,sup4.color,sup5.color,sup6.color,sup7.color, sup8.color, sup9.color, sup10.color,
				sup11.color, sup12.color, sup13.color, sup14.color, sup15.color, sup16.color, sup17.color, sup18.color, sup19.color, sup20.color,
				sup21.color, sup22.color, sup23.color, sup24.color, sup25.color, sup26.color, sup27.color, sup28.color, sup29.color, sup30.color,
				sup31.color, sup32.color, sup33.color, sup34.color, sup35.color, sup36.color, sup37.color, sup38.color, sup39.color, sup40.color,
				sup41.color, sup42.color, sup43.color, sup44.color, sup45.color, sup46.color, sup47.color, sup48.color, sup49.color, sup50.color]
				
supb[23] = [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false,
	false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false,
	false, false, false, false, false];

supst[23] = ['SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY',
'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY',
'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY']
/////to be fitted in line15613




const shuffled24 = cards.sort(() => 0.5 - Math.random());

			// Get sub-array of first n elements after shuffled
			let ran24 = shuffled24.slice(0, 50);
			sup1 = ran24[0];sup2 = ran24[1];sup3 = ran24[2];sup4 = ran24[3];sup5 = ran24[4];sup6 = ran24[5];sup7 = ran24[6];sup8 = ran24[7];sup9 = ran24[8];sup10 = ran24[9];
			sup11 = ran24[10];sup12 = ran24[11];sup13 = ran24[12];sup14 = ran24[13];sup15 = ran24[14];sup16 = ran24[15];sup17 = ran24[16];sup18 = ran24[17];sup19 = ran24[18];sup20 = ran24[19];
			sup21 = ran24[20];sup22 = ran24[21];sup23 = ran24[22];sup24 = ran24[23];sup25 = ran24[24];sup26 = ran24[25];sup27 = ran24[26];sup28 = ran24[27];sup29 = ran24[28];sup30 = ran24[29];
			sup31 = ran24[30];sup32 = ran24[31];sup33 = ran24[32];sup34 = ran24[33];sup35 = ran24[34];sup36 = ran24[35];sup37 = ran24[36];sup38 = ran24[37];sup39 = ran24[38];sup40 = ran24[39];
			sup41 = ran24[40];sup42 = ran24[41];sup43 = ran24[42];sup44 = ran24[43];sup45 = ran24[44];sup46 = ran24[45];sup47 = ran24[46];sup48 = ran24[47];sup49 = ran24[48];sup50 = ran24[49];


			supe[24] = [sup1.emoji,sup2.emoji,sup3.emoji,sup4.emoji,sup5.emoji,sup6.emoji,sup7.emoji, sup8.emoji, sup9.emoji, sup10.emoji,
			sup11.emoji, sup12.emoji, sup13.emoji, sup14.emoji, sup15.emoji, sup16.emoji, sup17.emoji, sup18.emoji, sup19.emoji, sup20.emoji,
			sup21.emoji, sup22.emoji, sup23.emoji, sup24.emoji, sup25.emoji, sup26.emoji, sup27.emoji, sup28.emoji, sup29.emoji, sup30.emoji,
			sup31.emoji, sup32.emoji, sup33.emoji, sup34.emoji, sup35.emoji, sup36.emoji, sup37.emoji, sup38.emoji, sup39.emoji, sup40.emoji,
			sup41.emoji, sup42.emoji, sup43.emoji, sup44.emoji, sup45.emoji, sup46.emoji, sup47.emoji, sup48.emoji, sup49.emoji, sup50.emoji]
			
			sups[24] = [sup1.sn,sup2.sn,sup3.sn,sup4.sn,sup5.sn,sup6.sn,sup7.sn, sup8.sn, sup9.sn, sup10.sn,
				sup11.sn, sup12.sn, sup13.sn, sup14.sn, sup15.sn, sup16.sn, sup17.sn, sup18.sn, sup19.sn, sup20.sn,
				sup21.sn, sup22.sn, sup23.sn, sup24.sn, sup25.sn, sup26.sn, sup27.sn, sup28.sn, sup29.sn, sup30.sn,
				sup31.sn, sup32.sn, sup33.sn, sup34.sn, sup35.sn, sup36.sn, sup37.sn, sup38.sn, sup39.sn, sup40.sn,
				sup41.sn, sup42.sn, sup43.sn, sup44.sn, sup45.sn, sup46.sn, sup47.sn, sup48.sn, sup49.sn, sup50.sn]
				
				supr[24] = [sup1.name,sup2.name,sup3.name,sup4.name,sup5.name,sup6.name,sup7.name, sup8.name, sup9.name, sup10.name,
					sup11.name, sup12.name, sup13.name, sup14.name, sup15.name, sup16.name, sup17.name, sup18.name, sup19.name, sup20.name,
					sup21.name, sup22.name, sup23.name, sup24.name, sup25.name, sup26.name, sup27.name, sup28.name, sup29.name, sup30.name,
					sup31.name, sup32.name, sup33.name, sup34.name, sup35.name, sup36.name, sup37.name, sup38.name, sup39.name, sup40.name,
					sup41.name, sup42.name, sup43.name, sup44.name, sup45.name, sup46.name, sup47.name, sup48.name, sup49.name, sup50.name]
					
			
					supv[24] = [sup1.value,sup2.value,sup3.value,sup4.value,sup5.value,sup6.value,sup7.value, sup8.value, sup9.value, sup10.value,
						sup11.value, sup12.value, sup13.value, sup14.value, sup15.value, sup16.value, sup17.value, sup18.value, sup19.value, sup20.value,
						sup21.value, sup22.value, sup23.value, sup24.value, sup25.value, sup26.value, sup27.value, sup28.value, sup29.value, sup30.value,
						sup31.value, sup32.value, sup33.value, sup34.value, sup35.value, sup36.value, sup37.value, sup38.value, sup39.value, sup40.value,
						sup41.value, sup42.value, sup43.value, sup44.value, sup45.value, sup46.value, sup47.value, sup48.value, sup49.value, sup50.value]
						
						supc[24] = [sup1.color,sup2.color,sup3.color,sup4.color,sup5.color,sup6.color,sup7.color, sup8.color, sup9.color, sup10.color,
							sup11.color, sup12.color, sup13.color, sup14.color, sup15.color, sup16.color, sup17.color, sup18.color, sup19.color, sup20.color,
							sup21.color, sup22.color, sup23.color, sup24.color, sup25.color, sup26.color, sup27.color, sup28.color, sup29.color, sup30.color,
							sup31.color, sup32.color, sup33.color, sup34.color, sup35.color, sup36.color, sup37.color, sup38.color, sup39.color, sup40.color,
							sup41.color, sup42.color, sup43.color, sup44.color, sup45.color, sup46.color, sup47.color, sup48.color, sup49.color, sup50.color]
							
			supb[24] = [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false,
				false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false,
				false, false, false, false, false];
			
			supst[24] = ['SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY',
			'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY',
			'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY']
			///////////////do it upto 24
			if (aid[Args.user] == 'bot') {
				return unobot(klm);
			}

			collector1.on("collect", async (klmbutton) => {
				singh = aid.indexOf(`${klmbutton.user.id}`);
				if (singh == -1) {
					klmbutton.reply({ content: `You are not in the game lobby`, ephemeral: true })
				} else if (klmbutton.customId == 'Suno') {
					if (cruelty[singh] != 0) {
						if (nob[singh] == 1) {
							if (disp.length == 8) {
								disp.splice(0, 1);
								disp.push(`**${a[singh]}** said Uno!`);

							}
							else {
								disp.push(`**${a[singh]}** said Uno!`);


							}
							cruelty[singh] = 1;//safe


						} else {
							chsukki = 0;
							for (sukki = 0; sukki < a.length; sukki++) {
								if (nob[sukki] == 1 && cruelty[sukki] != 1) {
									nso.push(a[sukki]);
									cruelty[sukki] = 0;
									chsukki = chsukki + 1;
								}
							}
							if (chsukki > 0) {
								if (disp.length == 8) {
									disp.splice(0, 1);
									disp.push(`**${a[singh]}** said Uno before ${nso}!`);

								}
								else {
									disp.push(`**${a[singh]}** said Uno before ${nso}!`);


								}
								for (konkani = 0; konkani < nso.length; konkani++) {
									if (disp.length == 8) {
										disp.splice(0, 1);
										disp.push(`**${nso[konkani]}** have to draw  cards!`);

									}
									else {
										disp.push(`**${nso[konkani]}** have to draw  cards!`);


									}

								}
								nso = [];

							} else {

							}

						}
						if (a.length == 1)
							initial1 = new MessageEmbed()
								.setColor('#36393F')
								.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
								.setDescription(`${disp.join('\n')}`)
								.addFields(
									{ name: `${cpa[0]}`, value: `${nobe[0]}` }
								)

								.setImage(topimage)
								.setFooter('Join the thread to play!');
						else if (a.length == 2)
							initial1 = new MessageEmbed()
								.setColor('#36393F')
								.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
								.setDescription(`${disp.join('\n')}`)
								.addFields(
									{ name: `${cpa[0]}`, value: `${nobe[0]}` },
									{ name: `${cpa[1]}`, value: `${nobe[1]}` }
								)

								.setImage(topimage)
								.setFooter('Join the thread to play!');
						else if (a.length == 3)
							initial1 = new MessageEmbed()
								.setColor('#36393F')
								.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
								.setDescription(`${disp.join('\n')}`)
								.addFields(
									{ name: `${cpa[0]}`, value: `${nobe[0]}` },
									{ name: `${cpa[1]}`, value: `${nobe[1]}` },
									{ name: `${cpa[2]}`, value: `${nobe[2]}` }
								)
								.setImage(topimage)
								.setFooter('Join the thread to play!');
						else if (a.length == 4)
							initial1 = new MessageEmbed()
								.setColor('#36393F')
								.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
								.setDescription(`${disp.join('\n')}`)
								.addFields(
									{ name: `${cpa[0]}`, value: `${nobe[0]}` },
									{ name: `${cpa[1]}`, value: `${nobe[1]}` },
									{ name: `${cpa[2]}`, value: `${nobe[2]}` },
									{ name: `${cpa[3]}`, value: `${nobe[3]}` }
								)
								.setImage(topimage)
								.setFooter('Join the thread to play!');
						else if (a.length == 5)
							initial1 = new MessageEmbed()
								.setColor('#36393F')
								.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
								.setDescription(`${disp.join('\n')}`)
								.addFields(
									{ name: `${cpa[0]}`, value: `${nobe[0]}` },
									{ name: `${cpa[1]}`, value: `${nobe[1]}` },
									{ name: `${cpa[2]}`, value: `${nobe[2]}` },
									{ name: `${cpa[3]}`, value: `${nobe[3]}` },
									{ name: `${cpa[4]}`, value: `${nobe[4]}` }
								)
								.setImage(topimage)
								.setFooter('Join the thread to play!');
						else if (a.length == 6)
							initial1 = new MessageEmbed()
								.setColor('#36393F')
								.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
								.setDescription(`${disp.join('\n')}`)
								.addFields(
									{ name: `${cpa[0]}`, value: `${nobe[0]}` },
									{ name: `${cpa[1]}`, value: `${nobe[1]}` },
									{ name: `${cpa[2]}`, value: `${nobe[2]}` },
									{ name: `${cpa[3]}`, value: `${nobe[3]}` },
									{ name: `${cpa[4]}`, value: `${nobe[4]}` },
									{ name: `${cpa[5]}`, value: `${nobe[5]}` }
								)
								.setImage(topimage)
								.setFooter('Join the thread to play!');
						else if (a.length == 7)
							initial1 = new MessageEmbed()
								.setColor('#36393F')
								.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
								.setDescription(`${disp.join('\n')}`)
								.addFields(
									{ name: `${cpa[0]}`, value: `${nobe[0]}` },
									{ name: `${cpa[1]}`, value: `${nobe[1]}` },
									{ name: `${cpa[2]}`, value: `${nobe[2]}` },
									{ name: `${cpa[3]}`, value: `${nobe[3]}` },
									{ name: `${cpa[4]}`, value: `${nobe[4]}` },
									{ name: `${cpa[5]}`, value: `${nobe[5]}` },
									{ name: `${cpa[6]}`, value: `${nobe[6]}` }
								)
								.setImage(topimage)
								.setFooter('Join the thread to play!');
						else if (a.length == 8)
							initial1 = new MessageEmbed()
								.setColor('#36393F')
								.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
								.setDescription(`${disp.join('\n')}`)
								.addFields(
									{ name: `${cpa[0]}`, value: `${nobe[0]}` },
									{ name: `${cpa[1]}`, value: `${nobe[1]}` },
									{ name: `${cpa[2]}`, value: `${nobe[2]}` },
									{ name: `${cpa[3]}`, value: `${nobe[3]}` },
									{ name: `${cpa[4]}`, value: `${nobe[4]}` },
									{ name: `${cpa[5]}`, value: `${nobe[5]}` },
									{ name: `${cpa[6]}`, value: `${nobe[6]}` },
									{ name: `${cpa[7]}`, value: `${nobe[7]}` }
								)
								.setImage(topimage)
								.setFooter('Join the thread to play!');
						else if (a.length == 9)
							initial1 = new MessageEmbed()
								.setColor('#36393F')
								.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
								.setDescription(`${disp.join('\n')}`)
								.addFields(
									{ name: `${cpa[0]}`, value: `${nobe[0]}` },
									{ name: `${cpa[1]}`, value: `${nobe[1]}` },
									{ name: `${cpa[2]}`, value: `${nobe[2]}` },
									{ name: `${cpa[3]}`, value: `${nobe[3]}` },
									{ name: `${cpa[4]}`, value: `${nobe[4]}` },
									{ name: `${cpa[5]}`, value: `${nobe[5]}` },
									{ name: `${cpa[6]}`, value: `${nobe[6]}` },
									{ name: `${cpa[7]}`, value: `${nobe[7]}` },
									{ name: `${cpa[8]}`, value: `${nobe[8]}` }
								)
								.setImage(topimage)
								.setFooter('Join the thread to play!');
						else if (a.length == 10)
							initial1 = new MessageEmbed()
								.setColor('#36393F')
								.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
								.setDescription(`${disp.join('\n')}`)
								.addFields(
									{ name: `${cpa[0]}`, value: `${nobe[0]}` },
									{ name: `${cpa[1]}`, value: `${nobe[1]}` },
									{ name: `${cpa[2]}`, value: `${nobe[2]}` },
									{ name: `${cpa[3]}`, value: `${nobe[3]}` },
									{ name: `${cpa[4]}`, value: `${nobe[4]}` },
									{ name: `${cpa[5]}`, value: `${nobe[5]}` },
									{ name: `${cpa[6]}`, value: `${nobe[6]}` },
									{ name: `${cpa[7]}`, value: `${nobe[7]}` },
									{ name: `${cpa[8]}`, value: `${nobe[8]}` },
									{ name: `${cpa[9]}`, value: `${nobe[9]}` }
								)
								.setImage(topimage)
								.setFooter('Join the thread to play!');
						else if (a.length == 11)
							initial1 = new MessageEmbed()
								.setColor('#36393F')
								.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
								.setDescription(`${disp.join('\n')}`)
								.addFields(
									{ name: `${cpa[0]}`, value: `${nobe[0]}` },
									{ name: `${cpa[1]}`, value: `${nobe[1]}` },
									{ name: `${cpa[2]}`, value: `${nobe[2]}` },
									{ name: `${cpa[3]}`, value: `${nobe[3]}` },
									{ name: `${cpa[4]}`, value: `${nobe[4]}` },
									{ name: `${cpa[5]}`, value: `${nobe[5]}` },
									{ name: `${cpa[6]}`, value: `${nobe[6]}` },
									{ name: `${cpa[7]}`, value: `${nobe[7]}` },
									{ name: `${cpa[8]}`, value: `${nobe[8]}` },
									{ name: `${cpa[9]}`, value: `${nobe[9]}` },
									{ name: `${cpa[10]}`, value: `${nobe[10]}` }
								)
								.setImage(topimage)
								.setFooter('Join the thread to play!');
						else if (a.length == 12)
							initial1 = new MessageEmbed()
								.setColor('#36393F')
								.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
								.setDescription(`${disp.join('\n')}`)
								.addFields(
									{ name: `${cpa[0]}`, value: `${nobe[0]}` },
									{ name: `${cpa[1]}`, value: `${nobe[1]}` },
									{ name: `${cpa[2]}`, value: `${nobe[2]}` },
									{ name: `${cpa[3]}`, value: `${nobe[3]}` },
									{ name: `${cpa[4]}`, value: `${nobe[4]}` },
									{ name: `${cpa[5]}`, value: `${nobe[5]}` },
									{ name: `${cpa[6]}`, value: `${nobe[6]}` },
									{ name: `${cpa[7]}`, value: `${nobe[7]}` },
									{ name: `${cpa[8]}`, value: `${nobe[8]}` },
									{ name: `${cpa[9]}`, value: `${nobe[9]}` },
									{ name: `${cpa[10]}`, value: `${nobe[10]}` },
									{ name: `${cpa[11]}`, value: `${nobe[11]}` }
								)
								.setImage(topimage)
								
								.setFooter('Join the thread to play!');
						else if (a.length == 13)
							initial1 = new MessageEmbed()
								.setColor('#36393F')
								.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
								.setDescription(`${disp.join('\n')}`)
								.addFields(
									{ name: `${cpa[0]}`, value: `${nobe[0]}` },
									{ name: `${cpa[1]}`, value: `${nobe[1]}` },
									{ name: `${cpa[2]}`, value: `${nobe[2]}` },
									{ name: `${cpa[3]}`, value: `${nobe[3]}` },
									{ name: `${cpa[4]}`, value: `${nobe[4]}` },
									{ name: `${cpa[5]}`, value: `${nobe[5]}` },
									{ name: `${cpa[6]}`, value: `${nobe[6]}` },
									{ name: `${cpa[7]}`, value: `${nobe[7]}` },
									{ name: `${cpa[8]}`, value: `${nobe[8]}` },
									{ name: `${cpa[9]}`, value: `${nobe[9]}` },
									{ name: `${cpa[10]}`, value: `${nobe[10]}` },
									{ name: `${cpa[11]}`, value: `${nobe[11]}` },
									{ name: `${cpa[12]}`, value: `${nobe[12]}` }
								)
								.setImage(topimage)
								.setFooter('Join the thread to play!');
						else if (a.length == 14)
							initial1 = new MessageEmbed()
								.setColor('#36393F')
								.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
								.setDescription(`${disp.join('\n')}`)
								.addFields(
									{ name: `${cpa[0]}`, value: `${nobe[0]}` },
									{ name: `${cpa[1]}`, value: `${nobe[1]}` },
									{ name: `${cpa[2]}`, value: `${nobe[2]}` },
									{ name: `${cpa[3]}`, value: `${nobe[3]}` },
									{ name: `${cpa[4]}`, value: `${nobe[4]}` },
									{ name: `${cpa[5]}`, value: `${nobe[5]}` },
									{ name: `${cpa[6]}`, value: `${nobe[6]}` },
									{ name: `${cpa[7]}`, value: `${nobe[7]}` },
									{ name: `${cpa[8]}`, value: `${nobe[8]}` },
									{ name: `${cpa[9]}`, value: `${nobe[9]}` },
									{ name: `${cpa[10]}`, value: `${nobe[10]}` },
									{ name: `${cpa[11]}`, value: `${nobe[11]}` },
									{ name: `${cpa[12]}`, value: `${nobe[12]}` },
									{ name: `${cpa[13]}`, value: `${nobe[13]}` }
								)
								.setImage(topimage)
								.setFooter('Join the thread to play!');
						else if (a.length == 15)
							initial1 = new MessageEmbed()
								.setColor('#36393F')
								.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
								.setDescription(`${disp.join('\n')}`)
								.addFields(
									{ name: `${cpa[0]}`, value: `${nobe[0]}` },
									{ name: `${cpa[1]}`, value: `${nobe[1]}` },
									{ name: `${cpa[2]}`, value: `${nobe[2]}` },
									{ name: `${cpa[3]}`, value: `${nobe[3]}` },
									{ name: `${cpa[4]}`, value: `${nobe[4]}` },
									{ name: `${cpa[5]}`, value: `${nobe[5]}` },
									{ name: `${cpa[6]}`, value: `${nobe[6]}` },
									{ name: `${cpa[7]}`, value: `${nobe[7]}` },
									{ name: `${cpa[8]}`, value: `${nobe[8]}` },
									{ name: `${cpa[9]}`, value: `${nobe[9]}` },
									{ name: `${cpa[10]}`, value: `${nobe[10]}` },
									{ name: `${cpa[11]}`, value: `${nobe[11]}` },
									{ name: `${cpa[12]}`, value: `${nobe[12]}` },
									{ name: `${cpa[13]}`, value: `${nobe[13]}` },
									{ name: `${cpa[14]}`, value: `${nobe[14]}` }
								)
								.setImage(topimage)
								.setFooter('Join the thread to play!');
						else if (a.length == 16)
							initial1 = new MessageEmbed()
								.setColor('#36393F')
								.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
								.setDescription(`${disp.join('\n')}`)
								.addFields(
									{ name: `${cpa[0]}`, value: `${nobe[0]}` },
									{ name: `${cpa[1]}`, value: `${nobe[1]}` },
									{ name: `${cpa[2]}`, value: `${nobe[2]}` },
									{ name: `${cpa[3]}`, value: `${nobe[3]}` },
									{ name: `${cpa[4]}`, value: `${nobe[4]}` },
									{ name: `${cpa[5]}`, value: `${nobe[5]}` },
									{ name: `${cpa[6]}`, value: `${nobe[6]}` },
									{ name: `${cpa[7]}`, value: `${nobe[7]}` },
									{ name: `${cpa[8]}`, value: `${nobe[8]}` },
									{ name: `${cpa[9]}`, value: `${nobe[9]}` },
									{ name: `${cpa[10]}`, value: `${nobe[10]}` },
									{ name: `${cpa[11]}`, value: `${nobe[11]}` },
									{ name: `${cpa[12]}`, value: `${nobe[12]}` },
									{ name: `${cpa[13]}`, value: `${nobe[13]}` },
									{ name: `${cpa[14]}`, value: `${nobe[14]}` },
									{ name: `${cpa[15]}`, value: `${nobe[15]}` }
								)
								.setImage(topimage)
								.setFooter('Join the thread to play!');
						else if (a.length == 17)
							initial1 = new MessageEmbed()
								.setColor('#36393F')
								.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
								.setDescription(`${disp.join('\n')}`)
								.addFields(
									{ name: `${cpa[0]}`, value: `${nobe[0]}` },
									{ name: `${cpa[1]}`, value: `${nobe[1]}` },
									{ name: `${cpa[2]}`, value: `${nobe[2]}` },
									{ name: `${cpa[3]}`, value: `${nobe[3]}` },
									{ name: `${cpa[4]}`, value: `${nobe[4]}` },
									{ name: `${cpa[5]}`, value: `${nobe[5]}` },
									{ name: `${cpa[6]}`, value: `${nobe[6]}` },
									{ name: `${cpa[7]}`, value: `${nobe[7]}` },
									{ name: `${cpa[8]}`, value: `${nobe[8]}` },
									{ name: `${cpa[9]}`, value: `${nobe[9]}` },
									{ name: `${cpa[10]}`, value: `${nobe[10]}` },
									{ name: `${cpa[11]}`, value: `${nobe[11]}` },
									{ name: `${cpa[12]}`, value: `${nobe[12]}` },
									{ name: `${cpa[13]}`, value: `${nobe[13]}` },
									{ name: `${cpa[14]}`, value: `${nobe[14]}` },
									{ name: `${cpa[15]}`, value: `${nobe[15]}` },
									{ name: `${cpa[16]}`, value: `${nobe[16]}` }
								)
								.setImage(topimage)
								.setFooter('Join the thread to play!');
						else if (a.length == 18)
							initial1 = new MessageEmbed()
								.setColor('#36393F')
								.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
								.setDescription(`${disp.join('\n')}`)
								.addFields(
									{ name: `${cpa[0]}`, value: `${nobe[0]}` },
									{ name: `${cpa[1]}`, value: `${nobe[1]}` },
									{ name: `${cpa[2]}`, value: `${nobe[2]}` },
									{ name: `${cpa[3]}`, value: `${nobe[3]}` },
									{ name: `${cpa[4]}`, value: `${nobe[4]}` },
									{ name: `${cpa[5]}`, value: `${nobe[5]}` },
									{ name: `${cpa[6]}`, value: `${nobe[6]}` },
									{ name: `${cpa[7]}`, value: `${nobe[7]}` },
									{ name: `${cpa[8]}`, value: `${nobe[8]}` },
									{ name: `${cpa[9]}`, value: `${nobe[9]}` },
									{ name: `${cpa[10]}`, value: `${nobe[10]}` },
									{ name: `${cpa[11]}`, value: `${nobe[11]}` },
									{ name: `${cpa[12]}`, value: `${nobe[12]}` },
									{ name: `${cpa[13]}`, value: `${nobe[13]}` },
									{ name: `${cpa[14]}`, value: `${nobe[14]}` },
									{ name: `${cpa[15]}`, value: `${nobe[15]}` },
									{ name: `${cpa[16]}`, value: `${nobe[16]}` },
									{ name: `${cpa[17]}`, value: `${nobe[17]}` }
								)
								.setImage(topimage)
								.setFooter('Join the thread to play!');
						else if (a.length == 19)
							initial1 = new MessageEmbed()
								.setColor('#36393F')
								.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
								.setDescription(`${disp.join('\n')}`)
								.addFields(
									{ name: `${cpa[0]}`, value: `${nobe[0]}` },
									{ name: `${cpa[1]}`, value: `${nobe[1]}` },
									{ name: `${cpa[2]}`, value: `${nobe[2]}` },
									{ name: `${cpa[3]}`, value: `${nobe[3]}` },
									{ name: `${cpa[4]}`, value: `${nobe[4]}` },
									{ name: `${cpa[5]}`, value: `${nobe[5]}` },
									{ name: `${cpa[6]}`, value: `${nobe[6]}` },
									{ name: `${cpa[7]}`, value: `${nobe[7]}` },
									{ name: `${cpa[8]}`, value: `${nobe[8]}` },
									{ name: `${cpa[9]}`, value: `${nobe[9]}` },
									{ name: `${cpa[10]}`, value: `${nobe[10]}` },
									{ name: `${cpa[11]}`, value: `${nobe[11]}` },
									{ name: `${cpa[12]}`, value: `${nobe[12]}` },
									{ name: `${cpa[13]}`, value: `${nobe[13]}` },
									{ name: `${cpa[14]}`, value: `${nobe[14]}` },
									{ name: `${cpa[15]}`, value: `${nobe[15]}` },
									{ name: `${cpa[16]}`, value: `${nobe[16]}` },
									{ name: `${cpa[17]}`, value: `${nobe[17]}` },
									{ name: `${cpa[18]}`, value: `${nobe[18]}` }
								)
								.setImage(topimage)
								.setFooter('Join the thread to play!');
						else if (a.length == 20)
							initial1 = new MessageEmbed()
								.setColor('#36393F')
								.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
								.setDescription(`${disp.join('\n')}`)
								.addFields(
									{ name: `${cpa[0]}`, value: `${nobe[0]}` },
									{ name: `${cpa[1]}`, value: `${nobe[1]}` },
									{ name: `${cpa[2]}`, value: `${nobe[2]}` },
									{ name: `${cpa[3]}`, value: `${nobe[3]}` },
									{ name: `${cpa[4]}`, value: `${nobe[4]}` },
									{ name: `${cpa[5]}`, value: `${nobe[5]}` },
									{ name: `${cpa[6]}`, value: `${nobe[6]}` },
									{ name: `${cpa[7]}`, value: `${nobe[7]}` },
									{ name: `${cpa[8]}`, value: `${nobe[8]}` },
									{ name: `${cpa[9]}`, value: `${nobe[9]}` },
									{ name: `${cpa[10]}`, value: `${nobe[10]}` },
									{ name: `${cpa[11]}`, value: `${nobe[11]}` },
									{ name: `${cpa[12]}`, value: `${nobe[12]}` },
									{ name: `${cpa[13]}`, value: `${nobe[13]}` },
									{ name: `${cpa[14]}`, value: `${nobe[14]}` },
									{ name: `${cpa[15]}`, value: `${nobe[15]}` },
									{ name: `${cpa[16]}`, value: `${nobe[16]}` },
									{ name: `${cpa[17]}`, value: `${nobe[17]}` },
									{ name: `${cpa[18]}`, value: `${nobe[18]}` },
									{ name: `${cpa[19]}`, value: `${nobe[19]}` }
								)
								.setImage(topimage)
								.setFooter('Join the thread to play!');
						else if (a.length == 21)
							initial1 = new MessageEmbed()
								.setColor('#36393F')
								.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
								.setDescription(`${disp.join('\n')}`)
								.addFields(
									{ name: `${cpa[0]}`, value: `${nobe[0]}` },
									{ name: `${cpa[1]}`, value: `${nobe[1]}` },
									{ name: `${cpa[2]}`, value: `${nobe[2]}` },
									{ name: `${cpa[3]}`, value: `${nobe[3]}` },
									{ name: `${cpa[4]}`, value: `${nobe[4]}` },
									{ name: `${cpa[5]}`, value: `${nobe[5]}` },
									{ name: `${cpa[6]}`, value: `${nobe[6]}` },
									{ name: `${cpa[7]}`, value: `${nobe[7]}` },
									{ name: `${cpa[8]}`, value: `${nobe[8]}` },
									{ name: `${cpa[9]}`, value: `${nobe[9]}` },
									{ name: `${cpa[10]}`, value: `${nobe[10]}` },
									{ name: `${cpa[11]}`, value: `${nobe[11]}` },
									{ name: `${cpa[12]}`, value: `${nobe[12]}` },
									{ name: `${cpa[13]}`, value: `${nobe[13]}` },
									{ name: `${cpa[14]}`, value: `${nobe[14]}` },
									{ name: `${cpa[15]}`, value: `${nobe[15]}` },
									{ name: `${cpa[16]}`, value: `${nobe[16]}` },
									{ name: `${cpa[17]}`, value: `${nobe[17]}` },
									{ name: `${cpa[18]}`, value: `${nobe[18]}` },
									{ name: `${cpa[19]}`, value: `${nobe[19]}` },
									{ name: `${cpa[20]}`, value: `${nobe[20]}` }
								)
								.setImage(topimage)
								.setFooter('Join the thread to play!');
						else if (a.length == 22)
							initial1 = new MessageEmbed()
								.setColor('#36393F')
								.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
								.setDescription(`${disp.join('\n')}`)
								.addFields(
									{ name: `${cpa[0]}`, value: `${nobe[0]}` },
									{ name: `${cpa[1]}`, value: `${nobe[1]}` },
									{ name: `${cpa[2]}`, value: `${nobe[2]}` },
									{ name: `${cpa[3]}`, value: `${nobe[3]}` },
									{ name: `${cpa[4]}`, value: `${nobe[4]}` },
									{ name: `${cpa[5]}`, value: `${nobe[5]}` },
									{ name: `${cpa[6]}`, value: `${nobe[6]}` },
									{ name: `${cpa[7]}`, value: `${nobe[7]}` },
									{ name: `${cpa[8]}`, value: `${nobe[8]}` },
									{ name: `${cpa[9]}`, value: `${nobe[9]}` },
									{ name: `${cpa[10]}`, value: `${nobe[10]}` },
									{ name: `${cpa[11]}`, value: `${nobe[11]}` },
									{ name: `${cpa[12]}`, value: `${nobe[12]}` },
									{ name: `${cpa[13]}`, value: `${nobe[13]}` },
									{ name: `${cpa[14]}`, value: `${nobe[14]}` },
									{ name: `${cpa[15]}`, value: `${nobe[15]}` },
									{ name: `${cpa[16]}`, value: `${nobe[16]}` },
									{ name: `${cpa[17]}`, value: `${nobe[17]}` },
									{ name: `${cpa[18]}`, value: `${nobe[18]}` },
									{ name: `${cpa[19]}`, value: `${nobe[19]}` },
									{ name: `${cpa[20]}`, value: `${nobe[20]}` },
									{ name: `${cpa[21]}`, value: `${nobe[21]}` }
								)
								.setImage(topimage)
								.setFooter('Join the thread to play!');
						else if (a.length == 23)
							initial1 = new MessageEmbed()
								.setColor('#36393F')
								.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
								.setDescription(`${disp.join('\n')}`)
								.addFields(
									{ name: `${cpa[0]}`, value: `${nobe[0]}` },
									{ name: `${cpa[1]}`, value: `${nobe[1]}` },
									{ name: `${cpa[2]}`, value: `${nobe[2]}` },
									{ name: `${cpa[3]}`, value: `${nobe[3]}` },
									{ name: `${cpa[4]}`, value: `${nobe[4]}` },
									{ name: `${cpa[5]}`, value: `${nobe[5]}` },
									{ name: `${cpa[6]}`, value: `${nobe[6]}` },
									{ name: `${cpa[7]}`, value: `${nobe[7]}` },
									{ name: `${cpa[8]}`, value: `${nobe[8]}` },
									{ name: `${cpa[9]}`, value: `${nobe[9]}` },
									{ name: `${cpa[10]}`, value: `${nobe[10]}` },
									{ name: `${cpa[11]}`, value: `${nobe[11]}` },
									{ name: `${cpa[12]}`, value: `${nobe[12]}` },
									{ name: `${cpa[13]}`, value: `${nobe[13]}` },
									{ name: `${cpa[14]}`, value: `${nobe[14]}` },
									{ name: `${cpa[15]}`, value: `${nobe[15]}` },
									{ name: `${cpa[16]}`, value: `${nobe[16]}` },
									{ name: `${cpa[17]}`, value: `${nobe[17]}` },
									{ name: `${cpa[18]}`, value: `${nobe[18]}` },
									{ name: `${cpa[19]}`, value: `${nobe[19]}` },
									{ name: `${cpa[20]}`, value: `${nobe[20]}` },
									{ name: `${cpa[21]}`, value: `${nobe[21]}` },
									{ name: `${cpa[22]}`, value: `${nobe[22]}` }
								)
								.setImage(topimage)
								.setFooter('Join the thread to play!');
						else if (a.length == 24)
							initial1 = new MessageEmbed()
								.setColor('#36393F')
								.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
								.setDescription(`${disp.join('\n')}`)
								.addFields(
									{ name: `${cpa[0]}`, value: `${nobe[0]}` },
									{ name: `${cpa[1]}`, value: `${nobe[1]}` },
									{ name: `${cpa[2]}`, value: `${nobe[2]}` },
									{ name: `${cpa[3]}`, value: `${nobe[3]}` },
									{ name: `${cpa[4]}`, value: `${nobe[4]}` },
									{ name: `${cpa[5]}`, value: `${nobe[5]}` },
									{ name: `${cpa[6]}`, value: `${nobe[6]}` },
									{ name: `${cpa[7]}`, value: `${nobe[7]}` },
									{ name: `${cpa[8]}`, value: `${nobe[8]}` },
									{ name: `${cpa[9]}`, value: `${nobe[9]}` },
									{ name: `${cpa[10]}`, value: `${nobe[10]}` },
									{ name: `${cpa[11]}`, value: `${nobe[11]}` },
									{ name: `${cpa[12]}`, value: `${nobe[12]}` },
									{ name: `${cpa[13]}`, value: `${nobe[13]}` },
									{ name: `${cpa[14]}`, value: `${nobe[14]}` },
									{ name: `${cpa[15]}`, value: `${nobe[15]}` },
									{ name: `${cpa[16]}`, value: `${nobe[16]}` },
									{ name: `${cpa[17]}`, value: `${nobe[17]}` },
									{ name: `${cpa[18]}`, value: `${nobe[18]}` },
									{ name: `${cpa[19]}`, value: `${nobe[19]}` },
									{ name: `${cpa[20]}`, value: `${nobe[20]}` },
									{ name: `${cpa[21]}`, value: `${nobe[21]}` },
									{ name: `${cpa[22]}`, value: `${nobe[22]}` },
									{ name: `${cpa[23]}`, value: `${nobe[23]}` }
								)
								.setImage(topimage)
								.setFooter('Join the thread to play!');
						else if (a.length == 25)
							initial1 = new MessageEmbed()
								.setColor('#36393F')
								.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
								.setDescription(`${disp.join('\n')}`)
								.addFields(
									{ name: `${cpa[0]}`, value: `${nobe[0]}` },
									{ name: `${cpa[1]}`, value: `${nobe[1]}` },
									{ name: `${cpa[2]}`, value: `${nobe[2]}` },
									{ name: `${cpa[3]}`, value: `${nobe[3]}` },
									{ name: `${cpa[4]}`, value: `${nobe[4]}` },
									{ name: `${cpa[5]}`, value: `${nobe[5]}` },
									{ name: `${cpa[6]}`, value: `${nobe[6]}` },
									{ name: `${cpa[7]}`, value: `${nobe[7]}` },
									{ name: `${cpa[8]}`, value: `${nobe[8]}` },
									{ name: `${cpa[9]}`, value: `${nobe[9]}` },
									{ name: `${cpa[10]}`, value: `${nobe[10]}` },
									{ name: `${cpa[11]}`, value: `${nobe[11]}` },
									{ name: `${cpa[12]}`, value: `${nobe[12]}` },
									{ name: `${cpa[13]}`, value: `${nobe[13]}` },
									{ name: `${cpa[14]}`, value: `${nobe[14]}` },
									{ name: `${cpa[15]}`, value: `${nobe[15]}` },
									{ name: `${cpa[16]}`, value: `${nobe[16]}` },
									{ name: `${cpa[17]}`, value: `${nobe[17]}` },
									{ name: `${cpa[18]}`, value: `${nobe[18]}` },
									{ name: `${cpa[19]}`, value: `${nobe[19]}` },
									{ name: `${cpa[20]}`, value: `${nobe[20]}` },
									{ name: `${cpa[21]}`, value: `${nobe[21]}` },
									{ name: `${cpa[22]}`, value: `${nobe[22]}` },
									{ name: `${cpa[23]}`, value: `${nobe[23]}` },
									{ name: `${cpa[24]}`, value: `${nobe[24]}` }

								)
								.setImage(topimage)
								.setFooter('Join the thread to play!');

						crbe = new MessageEmbed()
							.setColor('#36393F')
							.setTitle(`:green_circle: ${a[Args.user]}'s turn`)
							.setTimestamp();










						klm.edit({ embeds: [initial1, crbe] });
						klmbutton.deferUpdate();

					} else {
						klmbutton.reply({ content: 'You cannot use this button, draw ', ephemeral: true });
					}







				} else if (klmbutton.customId == "Leave Game") {
					klmbutton.deferUpdate();
					if (lbf == 1) {
						if (Args.user == a.length - 1 && aid[Args.user] == klmbutton.user.id) {
							Args.user = 0;
						}
					} else if (lbf == -1 && aid[Args.user] == klmbutton.user.id) {
						Args.user = a.length - 1;
					}

					if (disp.length == 8) {
						disp.splice(0, 1);
						disp.push(`**${a[singh]}** left the game!`);

					}
					else {
						disp.push(`**${a[singh]}** left the game!`);


					}


					imp.splice(singh, 1);
					a.splice(singh, 1);
					aid.splice(singh, 1);
					nob.splice(singh, 1);
					nobe.splice(singh, 1);
					cpa.splice(singh, 1);
					cruelty.splice(singh, 1);
					sups.splice(singh, 1);
					supe.splice(singh, 1);
					supr.splice(singh, 1);
					supb.splice(singh, 1);
					supv.splice(singh, 1);
					supc.splice(singh, 1);
					supst.splice(singh, 1);
					crb1.splice(singh, 1);
					crb2.splice(singh, 1);
					crb3.splice(singh, 1);
					crb4.splice(singh, 1);
					Args.userid = aid[Args.user];
					for (sil = 0; sil <= a.length; sil++) {
						cpa[sil] = a[sil];
					}
					cpa[Args.user] = `__${a[Args.user]}__`;

					if (a.length == 1)
						initial1 = new MessageEmbed()
							.setColor('#36393F')
							.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
							.setDescription(`${disp.join('\n')}`)
							.addFields(
								{ name: `${cpa[0]}`, value: `${nobe[0]}` }
							)

							.setImage(topimage)
							.setFooter('Join the thread to play!');
					else if (a.length == 2)
						initial1 = new MessageEmbed()
							.setColor('#36393F')
							.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
							.setDescription(`${disp.join('\n')}`)
							.addFields(
								{ name: `${cpa[0]}`, value: `${nobe[0]}` },
								{ name: `${cpa[1]}`, value: `${nobe[1]}` }
							)

							.setImage(topimage)
							.setFooter('Join the thread to play!');
					else if (a.length == 3)
						initial1 = new MessageEmbed()
							.setColor('#36393F')
							.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
							.setDescription(`${disp.join('\n')}`)
							.addFields(
								{ name: `${cpa[0]}`, value: `${nobe[0]}` },
								{ name: `${cpa[1]}`, value: `${nobe[1]}` },
								{ name: `${cpa[2]}`, value: `${nobe[2]}` }
							)
							.setImage(topimage)
							.setFooter('Join the thread to play!');
					else if (a.length == 4)
						initial1 = new MessageEmbed()
							.setColor('#36393F')
							.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
							.setDescription(`${disp.join('\n')}`)
							.addFields(
								{ name: `${cpa[0]}`, value: `${nobe[0]}` },
								{ name: `${cpa[1]}`, value: `${nobe[1]}` },
								{ name: `${cpa[2]}`, value: `${nobe[2]}` },
								{ name: `${cpa[3]}`, value: `${nobe[3]}` }
							)
							.setImage(topimage)
							.setFooter('Join the thread to play!');
					else if (a.length == 5)
						initial1 = new MessageEmbed()
							.setColor('#36393F')
							.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
							.setDescription(`${disp.join('\n')}`)
							.addFields(
								{ name: `${cpa[0]}`, value: `${nobe[0]}` },
								{ name: `${cpa[1]}`, value: `${nobe[1]}` },
								{ name: `${cpa[2]}`, value: `${nobe[2]}` },
								{ name: `${cpa[3]}`, value: `${nobe[3]}` },
								{ name: `${cpa[4]}`, value: `${nobe[4]}` }
							)
							.setImage(topimage)
							.setFooter('Join the thread to play!');
					else if (a.length == 6)
						initial1 = new MessageEmbed()
							.setColor('#36393F')
							.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
							.setDescription(`${disp.join('\n')}`)
							.addFields(
								{ name: `${cpa[0]}`, value: `${nobe[0]}` },
								{ name: `${cpa[1]}`, value: `${nobe[1]}` },
								{ name: `${cpa[2]}`, value: `${nobe[2]}` },
								{ name: `${cpa[3]}`, value: `${nobe[3]}` },
								{ name: `${cpa[4]}`, value: `${nobe[4]}` },
								{ name: `${cpa[5]}`, value: `${nobe[5]}` }
							)
							.setImage(topimage)
							.setFooter('Join the thread to play!');
					else if (a.length == 7)
						initial1 = new MessageEmbed()
							.setColor('#36393F')
							.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
							.setDescription(`${disp.join('\n')}`)
							.addFields(
								{ name: `${cpa[0]}`, value: `${nobe[0]}` },
								{ name: `${cpa[1]}`, value: `${nobe[1]}` },
								{ name: `${cpa[2]}`, value: `${nobe[2]}` },
								{ name: `${cpa[3]}`, value: `${nobe[3]}` },
								{ name: `${cpa[4]}`, value: `${nobe[4]}` },
								{ name: `${cpa[5]}`, value: `${nobe[5]}` },
								{ name: `${cpa[6]}`, value: `${nobe[6]}` }
							)
							.setImage(topimage)
							.setFooter('Join the thread to play!');
					else if (a.length == 8)
						initial1 = new MessageEmbed()
							.setColor('#36393F')
							.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
							.setDescription(`${disp.join('\n')}`)
							.addFields(
								{ name: `${cpa[0]}`, value: `${nobe[0]}` },
								{ name: `${cpa[1]}`, value: `${nobe[1]}` },
								{ name: `${cpa[2]}`, value: `${nobe[2]}` },
								{ name: `${cpa[3]}`, value: `${nobe[3]}` },
								{ name: `${cpa[4]}`, value: `${nobe[4]}` },
								{ name: `${cpa[5]}`, value: `${nobe[5]}` },
								{ name: `${cpa[6]}`, value: `${nobe[6]}` },
								{ name: `${cpa[7]}`, value: `${nobe[7]}` }
							)
							.setImage(topimage)
							.setFooter('Join the thread to play!');
					else if (a.length == 9)
						initial1 = new MessageEmbed()
							.setColor('#36393F')
							.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
							.setDescription(`${disp.join('\n')}`)
							.addFields(
								{ name: `${cpa[0]}`, value: `${nobe[0]}` },
								{ name: `${cpa[1]}`, value: `${nobe[1]}` },
								{ name: `${cpa[2]}`, value: `${nobe[2]}` },
								{ name: `${cpa[3]}`, value: `${nobe[3]}` },
								{ name: `${cpa[4]}`, value: `${nobe[4]}` },
								{ name: `${cpa[5]}`, value: `${nobe[5]}` },
								{ name: `${cpa[6]}`, value: `${nobe[6]}` },
								{ name: `${cpa[7]}`, value: `${nobe[7]}` },
								{ name: `${cpa[8]}`, value: `${nobe[8]}` }
							)
							.setImage(topimage)
							.setFooter('Join the thread to play!');
					else if (a.length == 10)
						initial1 = new MessageEmbed()
							.setColor('#36393F')
							.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
							.setDescription(`${disp.join('\n')}`)
							.addFields(
								{ name: `${cpa[0]}`, value: `${nobe[0]}` },
								{ name: `${cpa[1]}`, value: `${nobe[1]}` },
								{ name: `${cpa[2]}`, value: `${nobe[2]}` },
								{ name: `${cpa[3]}`, value: `${nobe[3]}` },
								{ name: `${cpa[4]}`, value: `${nobe[4]}` },
								{ name: `${cpa[5]}`, value: `${nobe[5]}` },
								{ name: `${cpa[6]}`, value: `${nobe[6]}` },
								{ name: `${cpa[7]}`, value: `${nobe[7]}` },
								{ name: `${cpa[8]}`, value: `${nobe[8]}` },
								{ name: `${cpa[9]}`, value: `${nobe[9]}` }
							)
							.setImage(topimage)
							.setFooter('Join the thread to play!');
					else if (a.length == 11)
						initial1 = new MessageEmbed()
							.setColor('#36393F')
							.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
							.setDescription(`${disp.join('\n')}`)
							.addFields(
								{ name: `${cpa[0]}`, value: `${nobe[0]}` },
								{ name: `${cpa[1]}`, value: `${nobe[1]}` },
								{ name: `${cpa[2]}`, value: `${nobe[2]}` },
								{ name: `${cpa[3]}`, value: `${nobe[3]}` },
								{ name: `${cpa[4]}`, value: `${nobe[4]}` },
								{ name: `${cpa[5]}`, value: `${nobe[5]}` },
								{ name: `${cpa[6]}`, value: `${nobe[6]}` },
								{ name: `${cpa[7]}`, value: `${nobe[7]}` },
								{ name: `${cpa[8]}`, value: `${nobe[8]}` },
								{ name: `${cpa[9]}`, value: `${nobe[9]}` },
								{ name: `${cpa[10]}`, value: `${nobe[10]}` }
							)
							.setImage(topimage)
							.setFooter('Join the thread to play!');
					else if (a.length == 12)
						initial1 = new MessageEmbed()
							.setColor('#36393F')
							.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
							.setDescription(`${disp.join('\n')}`)
							.addFields(
								{ name: `${cpa[0]}`, value: `${nobe[0]}` },
								{ name: `${cpa[1]}`, value: `${nobe[1]}` },
								{ name: `${cpa[2]}`, value: `${nobe[2]}` },
								{ name: `${cpa[3]}`, value: `${nobe[3]}` },
								{ name: `${cpa[4]}`, value: `${nobe[4]}` },
								{ name: `${cpa[5]}`, value: `${nobe[5]}` },
								{ name: `${cpa[6]}`, value: `${nobe[6]}` },
								{ name: `${cpa[7]}`, value: `${nobe[7]}` },
								{ name: `${cpa[8]}`, value: `${nobe[8]}` },
								{ name: `${cpa[9]}`, value: `${nobe[9]}` },
								{ name: `${cpa[10]}`, value: `${nobe[10]}` },
								{ name: `${cpa[11]}`, value: `${nobe[11]}` }
							)
							.setImage(topimage)
							.setFooter('Join the thread to play!');
					else if (a.length == 13)
						initial1 = new MessageEmbed()
							.setColor('#36393F')
							.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
							.setDescription(`${disp.join('\n')}`)
							.addFields(
								{ name: `${cpa[0]}`, value: `${nobe[0]}` },
								{ name: `${cpa[1]}`, value: `${nobe[1]}` },
								{ name: `${cpa[2]}`, value: `${nobe[2]}` },
								{ name: `${cpa[3]}`, value: `${nobe[3]}` },
								{ name: `${cpa[4]}`, value: `${nobe[4]}` },
								{ name: `${cpa[5]}`, value: `${nobe[5]}` },
								{ name: `${cpa[6]}`, value: `${nobe[6]}` },
								{ name: `${cpa[7]}`, value: `${nobe[7]}` },
								{ name: `${cpa[8]}`, value: `${nobe[8]}` },
								{ name: `${cpa[9]}`, value: `${nobe[9]}` },
								{ name: `${cpa[10]}`, value: `${nobe[10]}` },
								{ name: `${cpa[11]}`, value: `${nobe[11]}` },
								{ name: `${cpa[12]}`, value: `${nobe[12]}` }
							)
							.setImage(topimage)
							.setFooter('Join the thread to play!');
					else if (a.length == 14)
						initial1 = new MessageEmbed()
							.setColor('#36393F')
							.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
							.setDescription(`${disp.join('\n')}`)
							.addFields(
								{ name: `${cpa[0]}`, value: `${nobe[0]}` },
								{ name: `${cpa[1]}`, value: `${nobe[1]}` },
								{ name: `${cpa[2]}`, value: `${nobe[2]}` },
								{ name: `${cpa[3]}`, value: `${nobe[3]}` },
								{ name: `${cpa[4]}`, value: `${nobe[4]}` },
								{ name: `${cpa[5]}`, value: `${nobe[5]}` },
								{ name: `${cpa[6]}`, value: `${nobe[6]}` },
								{ name: `${cpa[7]}`, value: `${nobe[7]}` },
								{ name: `${cpa[8]}`, value: `${nobe[8]}` },
								{ name: `${cpa[9]}`, value: `${nobe[9]}` },
								{ name: `${cpa[10]}`, value: `${nobe[10]}` },
								{ name: `${cpa[11]}`, value: `${nobe[11]}` },
								{ name: `${cpa[12]}`, value: `${nobe[12]}` },
								{ name: `${cpa[13]}`, value: `${nobe[13]}` }
							)
							.setImage(topimage)
							.setFooter('Join the thread to play!');
					else if (a.length == 15)
						initial1 = new MessageEmbed()
							.setColor('#36393F')
							.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
							.setDescription(`${disp.join('\n')}`)
							.addFields(
								{ name: `${cpa[0]}`, value: `${nobe[0]}` },
								{ name: `${cpa[1]}`, value: `${nobe[1]}` },
								{ name: `${cpa[2]}`, value: `${nobe[2]}` },
								{ name: `${cpa[3]}`, value: `${nobe[3]}` },
								{ name: `${cpa[4]}`, value: `${nobe[4]}` },
								{ name: `${cpa[5]}`, value: `${nobe[5]}` },
								{ name: `${cpa[6]}`, value: `${nobe[6]}` },
								{ name: `${cpa[7]}`, value: `${nobe[7]}` },
								{ name: `${cpa[8]}`, value: `${nobe[8]}` },
								{ name: `${cpa[9]}`, value: `${nobe[9]}` },
								{ name: `${cpa[10]}`, value: `${nobe[10]}` },
								{ name: `${cpa[11]}`, value: `${nobe[11]}` },
								{ name: `${cpa[12]}`, value: `${nobe[12]}` },
								{ name: `${cpa[13]}`, value: `${nobe[13]}` },
								{ name: `${cpa[14]}`, value: `${nobe[14]}` }
							)
							.setImage(topimage)
							.setFooter('Join the thread to play!');
					else if (a.length == 16)
						initial1 = new MessageEmbed()
							.setColor('#36393F')
							.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
							.setDescription(`${disp.join('\n')}`)
							.addFields(
								{ name: `${cpa[0]}`, value: `${nobe[0]}` },
								{ name: `${cpa[1]}`, value: `${nobe[1]}` },
								{ name: `${cpa[2]}`, value: `${nobe[2]}` },
								{ name: `${cpa[3]}`, value: `${nobe[3]}` },
								{ name: `${cpa[4]}`, value: `${nobe[4]}` },
								{ name: `${cpa[5]}`, value: `${nobe[5]}` },
								{ name: `${cpa[6]}`, value: `${nobe[6]}` },
								{ name: `${cpa[7]}`, value: `${nobe[7]}` },
								{ name: `${cpa[8]}`, value: `${nobe[8]}` },
								{ name: `${cpa[9]}`, value: `${nobe[9]}` },
								{ name: `${cpa[10]}`, value: `${nobe[10]}` },
								{ name: `${cpa[11]}`, value: `${nobe[11]}` },
								{ name: `${cpa[12]}`, value: `${nobe[12]}` },
								{ name: `${cpa[13]}`, value: `${nobe[13]}` },
								{ name: `${cpa[14]}`, value: `${nobe[14]}` },
								{ name: `${cpa[15]}`, value: `${nobe[15]}` }
							)
							.setImage(topimage)
							.setFooter('Join the thread to play!');
					else if (a.length == 17)
						initial1 = new MessageEmbed()
							.setColor('#36393F')
							.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
							.setDescription(`${disp.join('\n')}`)
							.addFields(
								{ name: `${cpa[0]}`, value: `${nobe[0]}` },
								{ name: `${cpa[1]}`, value: `${nobe[1]}` },
								{ name: `${cpa[2]}`, value: `${nobe[2]}` },
								{ name: `${cpa[3]}`, value: `${nobe[3]}` },
								{ name: `${cpa[4]}`, value: `${nobe[4]}` },
								{ name: `${cpa[5]}`, value: `${nobe[5]}` },
								{ name: `${cpa[6]}`, value: `${nobe[6]}` },
								{ name: `${cpa[7]}`, value: `${nobe[7]}` },
								{ name: `${cpa[8]}`, value: `${nobe[8]}` },
								{ name: `${cpa[9]}`, value: `${nobe[9]}` },
								{ name: `${cpa[10]}`, value: `${nobe[10]}` },
								{ name: `${cpa[11]}`, value: `${nobe[11]}` },
								{ name: `${cpa[12]}`, value: `${nobe[12]}` },
								{ name: `${cpa[13]}`, value: `${nobe[13]}` },
								{ name: `${cpa[14]}`, value: `${nobe[14]}` },
								{ name: `${cpa[15]}`, value: `${nobe[15]}` },
								{ name: `${cpa[16]}`, value: `${nobe[16]}` }
							)
							.setImage(topimage)
							.setFooter('Join the thread to play!');
					else if (a.length == 18)
						initial1 = new MessageEmbed()
							.setColor('#36393F')
							.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
							.setDescription(`${disp.join('\n')}`)
							.addFields(
								{ name: `${cpa[0]}`, value: `${nobe[0]}` },
								{ name: `${cpa[1]}`, value: `${nobe[1]}` },
								{ name: `${cpa[2]}`, value: `${nobe[2]}` },
								{ name: `${cpa[3]}`, value: `${nobe[3]}` },
								{ name: `${cpa[4]}`, value: `${nobe[4]}` },
								{ name: `${cpa[5]}`, value: `${nobe[5]}` },
								{ name: `${cpa[6]}`, value: `${nobe[6]}` },
								{ name: `${cpa[7]}`, value: `${nobe[7]}` },
								{ name: `${cpa[8]}`, value: `${nobe[8]}` },
								{ name: `${cpa[9]}`, value: `${nobe[9]}` },
								{ name: `${cpa[10]}`, value: `${nobe[10]}` },
								{ name: `${cpa[11]}`, value: `${nobe[11]}` },
								{ name: `${cpa[12]}`, value: `${nobe[12]}` },
								{ name: `${cpa[13]}`, value: `${nobe[13]}` },
								{ name: `${cpa[14]}`, value: `${nobe[14]}` },
								{ name: `${cpa[15]}`, value: `${nobe[15]}` },
								{ name: `${cpa[16]}`, value: `${nobe[16]}` },
								{ name: `${cpa[17]}`, value: `${nobe[17]}` }
							)
							.setImage(topimage)
							.setFooter('Join the thread to play!');
					else if (a.length == 19)
						initial1 = new MessageEmbed()
							.setColor('#36393F')
							.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
							.setDescription(`${disp.join('\n')}`)
							.addFields(
								{ name: `${cpa[0]}`, value: `${nobe[0]}` },
								{ name: `${cpa[1]}`, value: `${nobe[1]}` },
								{ name: `${cpa[2]}`, value: `${nobe[2]}` },
								{ name: `${cpa[3]}`, value: `${nobe[3]}` },
								{ name: `${cpa[4]}`, value: `${nobe[4]}` },
								{ name: `${cpa[5]}`, value: `${nobe[5]}` },
								{ name: `${cpa[6]}`, value: `${nobe[6]}` },
								{ name: `${cpa[7]}`, value: `${nobe[7]}` },
								{ name: `${cpa[8]}`, value: `${nobe[8]}` },
								{ name: `${cpa[9]}`, value: `${nobe[9]}` },
								{ name: `${cpa[10]}`, value: `${nobe[10]}` },
								{ name: `${cpa[11]}`, value: `${nobe[11]}` },
								{ name: `${cpa[12]}`, value: `${nobe[12]}` },
								{ name: `${cpa[13]}`, value: `${nobe[13]}` },
								{ name: `${cpa[14]}`, value: `${nobe[14]}` },
								{ name: `${cpa[15]}`, value: `${nobe[15]}` },
								{ name: `${cpa[16]}`, value: `${nobe[16]}` },
								{ name: `${cpa[17]}`, value: `${nobe[17]}` },
								{ name: `${cpa[18]}`, value: `${nobe[18]}` }
							)
							.setImage(topimage)
							.setFooter('Join the thread to play!');
					else if (a.length == 20)
						initial1 = new MessageEmbed()
							.setColor('#36393F')
							.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
							.setDescription(`${disp.join('\n')}`)
							.addFields(
								{ name: `${cpa[0]}`, value: `${nobe[0]}` },
								{ name: `${cpa[1]}`, value: `${nobe[1]}` },
								{ name: `${cpa[2]}`, value: `${nobe[2]}` },
								{ name: `${cpa[3]}`, value: `${nobe[3]}` },
								{ name: `${cpa[4]}`, value: `${nobe[4]}` },
								{ name: `${cpa[5]}`, value: `${nobe[5]}` },
								{ name: `${cpa[6]}`, value: `${nobe[6]}` },
								{ name: `${cpa[7]}`, value: `${nobe[7]}` },
								{ name: `${cpa[8]}`, value: `${nobe[8]}` },
								{ name: `${cpa[9]}`, value: `${nobe[9]}` },
								{ name: `${cpa[10]}`, value: `${nobe[10]}` },
								{ name: `${cpa[11]}`, value: `${nobe[11]}` },
								{ name: `${cpa[12]}`, value: `${nobe[12]}` },
								{ name: `${cpa[13]}`, value: `${nobe[13]}` },
								{ name: `${cpa[14]}`, value: `${nobe[14]}` },
								{ name: `${cpa[15]}`, value: `${nobe[15]}` },
								{ name: `${cpa[16]}`, value: `${nobe[16]}` },
								{ name: `${cpa[17]}`, value: `${nobe[17]}` },
								{ name: `${cpa[18]}`, value: `${nobe[18]}` },
								{ name: `${cpa[19]}`, value: `${nobe[19]}` }
							)
							.setImage(topimage)
							.setFooter('Join the thread to play!');
					else if (a.length == 21)
						initial1 = new MessageEmbed()
							.setColor('#36393F')
							.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
							.setDescription(`${disp.join('\n')}`)
							.addFields(
								{ name: `${cpa[0]}`, value: `${nobe[0]}` },
								{ name: `${cpa[1]}`, value: `${nobe[1]}` },
								{ name: `${cpa[2]}`, value: `${nobe[2]}` },
								{ name: `${cpa[3]}`, value: `${nobe[3]}` },
								{ name: `${cpa[4]}`, value: `${nobe[4]}` },
								{ name: `${cpa[5]}`, value: `${nobe[5]}` },
								{ name: `${cpa[6]}`, value: `${nobe[6]}` },
								{ name: `${cpa[7]}`, value: `${nobe[7]}` },
								{ name: `${cpa[8]}`, value: `${nobe[8]}` },
								{ name: `${cpa[9]}`, value: `${nobe[9]}` },
								{ name: `${cpa[10]}`, value: `${nobe[10]}` },
								{ name: `${cpa[11]}`, value: `${nobe[11]}` },
								{ name: `${cpa[12]}`, value: `${nobe[12]}` },
								{ name: `${cpa[13]}`, value: `${nobe[13]}` },
								{ name: `${cpa[14]}`, value: `${nobe[14]}` },
								{ name: `${cpa[15]}`, value: `${nobe[15]}` },
								{ name: `${cpa[16]}`, value: `${nobe[16]}` },
								{ name: `${cpa[17]}`, value: `${nobe[17]}` },
								{ name: `${cpa[18]}`, value: `${nobe[18]}` },
								{ name: `${cpa[19]}`, value: `${nobe[19]}` },
								{ name: `${cpa[20]}`, value: `${nobe[20]}` }
							)
							.setImage(topimage)
							.setFooter('Join the thread to play!');
					else if (a.length == 22)
						initial1 = new MessageEmbed()
							.setColor('#36393F')
							.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
							.setDescription(`${disp.join('\n')}`)
							.addFields(
								{ name: `${cpa[0]}`, value: `${nobe[0]}` },
								{ name: `${cpa[1]}`, value: `${nobe[1]}` },
								{ name: `${cpa[2]}`, value: `${nobe[2]}` },
								{ name: `${cpa[3]}`, value: `${nobe[3]}` },
								{ name: `${cpa[4]}`, value: `${nobe[4]}` },
								{ name: `${cpa[5]}`, value: `${nobe[5]}` },
								{ name: `${cpa[6]}`, value: `${nobe[6]}` },
								{ name: `${cpa[7]}`, value: `${nobe[7]}` },
								{ name: `${cpa[8]}`, value: `${nobe[8]}` },
								{ name: `${cpa[9]}`, value: `${nobe[9]}` },
								{ name: `${cpa[10]}`, value: `${nobe[10]}` },
								{ name: `${cpa[11]}`, value: `${nobe[11]}` },
								{ name: `${cpa[12]}`, value: `${nobe[12]}` },
								{ name: `${cpa[13]}`, value: `${nobe[13]}` },
								{ name: `${cpa[14]}`, value: `${nobe[14]}` },
								{ name: `${cpa[15]}`, value: `${nobe[15]}` },
								{ name: `${cpa[16]}`, value: `${nobe[16]}` },
								{ name: `${cpa[17]}`, value: `${nobe[17]}` },
								{ name: `${cpa[18]}`, value: `${nobe[18]}` },
								{ name: `${cpa[19]}`, value: `${nobe[19]}` },
								{ name: `${cpa[20]}`, value: `${nobe[20]}` },
								{ name: `${cpa[21]}`, value: `${nobe[21]}` }
							)
							.setImage(topimage)
							.setFooter('Join the thread to play!');
					else if (a.length == 23)
						initial1 = new MessageEmbed()
							.setColor('#36393F')
							.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
							.setDescription(`${disp.join('\n')}`)
							.addFields(
								{ name: `${cpa[0]}`, value: `${nobe[0]}` },
								{ name: `${cpa[1]}`, value: `${nobe[1]}` },
								{ name: `${cpa[2]}`, value: `${nobe[2]}` },
								{ name: `${cpa[3]}`, value: `${nobe[3]}` },
								{ name: `${cpa[4]}`, value: `${nobe[4]}` },
								{ name: `${cpa[5]}`, value: `${nobe[5]}` },
								{ name: `${cpa[6]}`, value: `${nobe[6]}` },
								{ name: `${cpa[7]}`, value: `${nobe[7]}` },
								{ name: `${cpa[8]}`, value: `${nobe[8]}` },
								{ name: `${cpa[9]}`, value: `${nobe[9]}` },
								{ name: `${cpa[10]}`, value: `${nobe[10]}` },
								{ name: `${cpa[11]}`, value: `${nobe[11]}` },
								{ name: `${cpa[12]}`, value: `${nobe[12]}` },
								{ name: `${cpa[13]}`, value: `${nobe[13]}` },
								{ name: `${cpa[14]}`, value: `${nobe[14]}` },
								{ name: `${cpa[15]}`, value: `${nobe[15]}` },
								{ name: `${cpa[16]}`, value: `${nobe[16]}` },
								{ name: `${cpa[17]}`, value: `${nobe[17]}` },
								{ name: `${cpa[18]}`, value: `${nobe[18]}` },
								{ name: `${cpa[19]}`, value: `${nobe[19]}` },
								{ name: `${cpa[20]}`, value: `${nobe[20]}` },
								{ name: `${cpa[21]}`, value: `${nobe[21]}` },
								{ name: `${cpa[22]}`, value: `${nobe[22]}` }
							)
							.setImage(topimage)
							.setFooter('Join the thread to play!');
					else if (a.length == 24)
						initial1 = new MessageEmbed()
							.setColor('#36393F')
							.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
							.setDescription(`${disp.join('\n')}`)
							.addFields(
								{ name: `${cpa[0]}`, value: `${nobe[0]}` },
								{ name: `${cpa[1]}`, value: `${nobe[1]}` },
								{ name: `${cpa[2]}`, value: `${nobe[2]}` },
								{ name: `${cpa[3]}`, value: `${nobe[3]}` },
								{ name: `${cpa[4]}`, value: `${nobe[4]}` },
								{ name: `${cpa[5]}`, value: `${nobe[5]}` },
								{ name: `${cpa[6]}`, value: `${nobe[6]}` },
								{ name: `${cpa[7]}`, value: `${nobe[7]}` },
								{ name: `${cpa[8]}`, value: `${nobe[8]}` },
								{ name: `${cpa[9]}`, value: `${nobe[9]}` },
								{ name: `${cpa[10]}`, value: `${nobe[10]}` },
								{ name: `${cpa[11]}`, value: `${nobe[11]}` },
								{ name: `${cpa[12]}`, value: `${nobe[12]}` },
								{ name: `${cpa[13]}`, value: `${nobe[13]}` },
								{ name: `${cpa[14]}`, value: `${nobe[14]}` },
								{ name: `${cpa[15]}`, value: `${nobe[15]}` },
								{ name: `${cpa[16]}`, value: `${nobe[16]}` },
								{ name: `${cpa[17]}`, value: `${nobe[17]}` },
								{ name: `${cpa[18]}`, value: `${nobe[18]}` },
								{ name: `${cpa[19]}`, value: `${nobe[19]}` },
								{ name: `${cpa[20]}`, value: `${nobe[20]}` },
								{ name: `${cpa[21]}`, value: `${nobe[21]}` },
								{ name: `${cpa[22]}`, value: `${nobe[22]}` },
								{ name: `${cpa[23]}`, value: `${nobe[23]}` }
							)
							.setImage(topimage)
							.setFooter('Join the thread to play!');
					else if (a.length == 25)
						initial1 = new MessageEmbed()
							.setColor('#36393F')
							.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
							.setDescription(`${disp.join('\n')}`)
							.addFields(
								{ name: `${cpa[0]}`, value: `${nobe[0]}` },
								{ name: `${cpa[1]}`, value: `${nobe[1]}` },
								{ name: `${cpa[2]}`, value: `${nobe[2]}` },
								{ name: `${cpa[3]}`, value: `${nobe[3]}` },
								{ name: `${cpa[4]}`, value: `${nobe[4]}` },
								{ name: `${cpa[5]}`, value: `${nobe[5]}` },
								{ name: `${cpa[6]}`, value: `${nobe[6]}` },
								{ name: `${cpa[7]}`, value: `${nobe[7]}` },
								{ name: `${cpa[8]}`, value: `${nobe[8]}` },
								{ name: `${cpa[9]}`, value: `${nobe[9]}` },
								{ name: `${cpa[10]}`, value: `${nobe[10]}` },
								{ name: `${cpa[11]}`, value: `${nobe[11]}` },
								{ name: `${cpa[12]}`, value: `${nobe[12]}` },
								{ name: `${cpa[13]}`, value: `${nobe[13]}` },
								{ name: `${cpa[14]}`, value: `${nobe[14]}` },
								{ name: `${cpa[15]}`, value: `${nobe[15]}` },
								{ name: `${cpa[16]}`, value: `${nobe[16]}` },
								{ name: `${cpa[17]}`, value: `${nobe[17]}` },
								{ name: `${cpa[18]}`, value: `${nobe[18]}` },
								{ name: `${cpa[19]}`, value: `${nobe[19]}` },
								{ name: `${cpa[20]}`, value: `${nobe[20]}` },
								{ name: `${cpa[21]}`, value: `${nobe[21]}` },
								{ name: `${cpa[22]}`, value: `${nobe[22]}` },
								{ name: `${cpa[23]}`, value: `${nobe[23]}` },
								{ name: `${cpa[24]}`, value: `${nobe[24]}` }

							)
							.setImage(topimage)
							.setFooter('Join the thread to play!');


					crbe = new MessageEmbed()
						.setColor('#36393F')
						.setTitle(`:green_circle: ${a[Args.user]}'s turn`)
						.setTimestamp();









					klm.edit({ embeds: [initial1, crbe] });






				} else {
					if (klmbutton.customId == "Reveal") {
if(noreveal[singh]>0){
	klmbutton.deferUpdate();
return ;
}
imp[singh] = [new MessageButton()
    .setCustomId(`${sups[singh][0]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[singh][0]}`)
    .setDisabled(`${supb[singh][0]}`)
    .setEmoji(`${supe[singh][0]}`)
    ,
new MessageButton()
    .setCustomId(`${sups[singh][1]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[singh][1]}`)
    .setDisabled(`${supb[singh][1]}`)
    .setEmoji(`${supe[singh][1]}`)
    ,
new MessageButton()
    .setCustomId(`${sups[singh][2]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[singh][2]}`)
    .setDisabled(`${supb[singh][2]}`)
    .setEmoji(`${supe[singh][2]}`),
new MessageButton()
    .setCustomId(`${sups[singh][3]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[singh][3]}`)
    .setDisabled(`${supb[singh][3]}`)
    .setEmoji(`${supe[singh][3]}`)
    ,
new MessageButton()
    .setCustomId(`${sups[singh][4]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[singh][4]}`)
    .setDisabled(`${supb[singh][4]}`)
    .setEmoji(`${supe[singh][4]}`),


new MessageButton()
    .setCustomId(`${sups[singh][5]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[singh][5]}`)
    .setDisabled(`${supb[singh][5]}`)
    .setEmoji(`${supe[singh][5]}`)
    ,
new MessageButton()
    .setCustomId(`${sups[singh][6]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[singh][6]}`)
    .setDisabled(`${supb[singh][6]}`)
    .setEmoji(`${supe[singh][6]}`),
new MessageButton()
    .setCustomId(`${sups[singh][7]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[singh][7]}`)
    .setDisabled(`${supb[singh][7]}`)
    .setEmoji(`${supe[singh][7]}`)
    ,
new MessageButton()
    .setCustomId(`${sups[singh][8]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[singh][8]}`)
    .setDisabled(`${supb[singh][8]}`)
    .setEmoji(`${supe[singh][8]}`)
    ,
new MessageButton()
    .setCustomId(`${sups[singh][9]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[singh][9]}`)
    .setDisabled(`${supb[singh][9]}`)
    .setEmoji(`${supe[singh][9]}`),
new MessageButton()
    .setCustomId(`${sups[singh][10]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[singh][10]}`)
    .setDisabled(`${supb[singh][10]}`)
    .setEmoji(`${supe[singh][10]}`)
    ,
new MessageButton()
    .setCustomId(`${sups[singh][11]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[singh][11]}`)
    .setDisabled(`${supb[singh][11]}`)
    .setEmoji(`${supe[singh][11]}`),


new MessageButton()
    .setCustomId(`${sups[singh][12]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[singh][12]}`)
    .setDisabled(`${supb[singh][12]}`)
    .setEmoji(`${supe[singh][12]}`)
    ,
new MessageButton()
    .setCustomId(`${sups[singh][13]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[singh][13]}`)
    .setDisabled(`${supb[singh][13]}`)
    .setEmoji(`${supe[singh][13]}`),
new MessageButton()
    .setCustomId(`${sups[singh][14]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[singh][14]}`)
    .setDisabled(`${supb[singh][14]}`)
    .setEmoji(`${supe[singh][14]}`)
    ,
new MessageButton()
    .setCustomId(`${sups[singh][15]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[singh][15]}`)
    .setDisabled(`${supb[singh][15]}`)
    .setEmoji(`${supe[singh][15]}`)
    ,
new MessageButton()
    .setCustomId(`${sups[singh][16]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[singh][16]}`)
    .setDisabled(`${supb[singh][16]}`)
    .setEmoji(`${supe[singh][16]}`),
new MessageButton()
    .setCustomId(`${sups[singh][17]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[singh][17]}`)
    .setDisabled(`${supb[singh][17]}`)
    .setEmoji(`${supe[singh][17]}`)
    ,
new MessageButton()
    .setCustomId(`${sups[singh][18]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[singh][18]}`)
    .setDisabled(`${supb[singh][18]}`)
    .setEmoji(`${supe[singh][18]}`),


new MessageButton()
    .setCustomId(`${sups[singh][19]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[singh][19]}`)
    .setDisabled(`${supb[singh][19]}`)
    .setEmoji(`${supe[singh][19]}`),

    new MessageButton()
    .setCustomId(`${sups[singh][20]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[singh][20]}`)
    .setDisabled(`${supb[singh][20]}`)
    .setEmoji(`${supe[singh][20]}`),

    new MessageButton()
    .setCustomId(`${sups[singh][21]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[singh][21]}`)
    .setDisabled(`${supb[singh][21]}`)
    .setEmoji(`${supe[singh][21]}`),

    new MessageButton()
    .setCustomId(`${sups[singh][22]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[singh][22]}`)
    .setDisabled(`${supb[singh][22]}`)
    .setEmoji(`${supe[singh][22]}`),

    new MessageButton()
    .setCustomId(`${sups[singh][23]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[singh][23]}`)
    .setDisabled(`${supb[singh][23]}`)
    .setEmoji(`${supe[singh][23]}`),

    new MessageButton()
    .setCustomId(`${sups[singh][24]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[singh][24]}`)
    .setDisabled(`${supb[singh][24]}`)
    .setEmoji(`${supe[singh][24]}`),,

    new MessageButton()
    .setCustomId(`${sups[singh][25]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[singh][25]}`)
    .setDisabled(`${supb[singh][25]}`)
    .setEmoji(`${supe[singh][25]}`),

    new MessageButton()
    .setCustomId(`${sups[singh][26]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[singh][26]}`)
    .setDisabled(`${supb[singh][26]}`)
    .setEmoji(`${supe[singh][26]}`),

    new MessageButton()
    .setCustomId(`${sups[singh][27]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[singh][27]}`)
    .setDisabled(`${supb[singh][27]}`)
    .setEmoji(`${supe[singh][27]}`),

    new MessageButton()
    .setCustomId(`${sups[singh][28]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[singh][28]}`)
    .setDisabled(`${supb[singh][28]}`)
    .setEmoji(`${supe[singh][28]}`),

    new MessageButton()
    .setCustomId(`${sups[singh][29]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[singh][29]}`)
    .setDisabled(`${supb[singh][29]}`)
    .setEmoji(`${supe[singh][29]}`),

    new MessageButton()
    .setCustomId(`${sups[singh][30]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[singh][30]}`)
    .setDisabled(`${supb[singh][30]}`)
    .setEmoji(`${supe[singh][30]}`),

    new MessageButton()
    .setCustomId(`${sups[singh][31]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[singh][31]}`)
    .setDisabled(`${supb[singh][31]}`)
    .setEmoji(`${supe[singh][31]}`),

    new MessageButton()
    .setCustomId(`${sups[singh][32]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[singh][32]}`)
    .setDisabled(`${supb[singh][32]}`)
    .setEmoji(`${supe[singh][32]}`),

    ,

    new MessageButton()
    .setCustomId(`${sups[singh][33]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[singh][33]}`)
    .setDisabled(`${supb[singh][33]}`)
    .setEmoji(`${supe[singh][33]}`),

    new MessageButton()
    .setCustomId(`${sups[singh][34]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[singh][34]}`)
    .setDisabled(`${supb[singh][34]}`)
    .setEmoji(`${supe[singh][34]}`),

    new MessageButton()
    .setCustomId(`${sups[singh][35]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[singh][35]}`)
    .setDisabled(`${supb[singh][35]}`)
    .setEmoji(`${supe[singh][35]}`),

    new MessageButton()
    .setCustomId(`${sups[singh][36]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[singh][36]}`)
    .setDisabled(`${supb[singh][36]}`)
    .setEmoji(`${supe[singh][36]}`),

    new MessageButton()
    .setCustomId(`${sups[singh][37]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[singh][37]}`)
    .setDisabled(`${supb[singh][37]}`)
    .setEmoji(`${supe[singh][37]}`),

    new MessageButton()
    .setCustomId(`${sups[singh][38]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[singh][38]}`)
    .setDisabled(`${supb[singh][38]}`)
    .setEmoji(`${supe[singh][38]}`),

    new MessageButton()
    .setCustomId(`${sups[singh][39]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[singh][39]}`)
    .setDisabled(`${supb[singh][39]}`)
    .setEmoji(`${supe[singh][39]}`),

    new MessageButton()
    .setCustomId(`${sups[singh][40]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[singh][40]}`)
    .setDisabled(`${supb[singh][40]}`)
    .setEmoji(`${supe[singh][40]}`),

    new MessageButton()
    .setCustomId(`${sups[singh][41]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[singh][41]}`)
    .setDisabled(`${supb[singh][41]}`)
    .setEmoji(`${supe[singh][41]}`),

    new MessageButton()
    .setCustomId(`${sups[singh][42]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[singh][42]}`)
    .setDisabled(`${supb[singh][42]}`)
    .setEmoji(`${supe[singh][42]}`),

    new MessageButton()
    .setCustomId(`${sups[singh][43]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[singh][43]}`)
    .setDisabled(`${supb[singh][43]}`)
    .setEmoji(`${supe[singh][43]}`),

    new MessageButton()
    .setCustomId(`${sups[singh][44]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[singh][44]}`)
    .setDisabled(`${supb[singh][44]}`)
    .setEmoji(`${supe[singh][44]}`),

    new MessageButton()
    .setCustomId(`${sups[singh][45]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[singh][45]}`)
    .setDisabled(`${supb[singh][45]}`)
    .setEmoji(`${supe[singh][45]}`),

    new MessageButton()
    .setCustomId(`${sups[singh][46]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[singh][46]}`)
    .setDisabled(`${supb[singh][46]}`)
    .setEmoji(`${supe[singh][46]}`),

    new MessageButton()
    .setCustomId(`${sups[singh][47]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[singh][47]}`)
    .setDisabled(`${supb[singh][47]}`)
    .setEmoji(`${supe[singh][47]}`),

    new MessageButton()
    .setCustomId(`${sups[singh][48]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[singh][48]}`)
    .setDisabled(`${supb[singh][48]}`)
    .setEmoji(`${supe[singh][48]}`),

    new MessageButton()
    .setCustomId(`${sups[singh][49]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[singh][49]}`)
    .setDisabled(`${supb[singh][49]}`)
    .setEmoji(`${supe[singh][49]}`)

]



						////////////////////////////////
						crb1[singh] = new MessageActionRow().addComponents(imp[singh].slice(0, 5));

						crb2[singh] = new MessageActionRow()
							.addComponents(imp[singh].slice(5, 7));
						centauri = new MessageActionRow().addComponents(
							new MessageButton()
								.setCustomId(`Draw`)
								.setLabel(`Draw`)
								.setStyle('DANGER')
						);


						klmbutton.reply({ content: 'Your Cards', components: [crb1[singh], crb2[singh], centauri], ephemeral: true, fetchReply: true });
						noreveal[singh] = noreveal[singh] + 1;

						lastr = await klmbutton.fetchReply();

					}

					const collector3 = lastr.createMessageComponentCollector({
						type: "BUTTON",
						time: 1200000
					});

					collector3.on("collect", async (lastbutton) => {
						tingh = aid.indexOf(`${lastbutton.user.id}`);

						if (tingh == -1) {
							klmbutton.editReply({ content: `You are not in the game lobby,now`, components: [], embeds: [], ephemeral: true })
						} else {
							if (lastbutton.customId == 'Draw' && cruelty[tingh] == 0) {
								cruelty[tingh] = 2;
								nob[tingh] = nob[tingh] + 2;
								nobe[tingh] = "<:UnoSlot:895311124399013888>".repeat(nob[tingh]);
								if (disp.length == 8) {
									disp.splice(0, 1);
									disp.push(`**${a[tingh]}** drawn 2 cards!`);

								}
								else {

									disp.push(`**${a[tingh]}** drawn 2 cards!`);


								}

								if (nob[tingh] <= 5) {
									crb1[tingh] = new MessageActionRow().addComponents(imp[tingh].slice(0, nob[tingh]));
									klmbutton.editReply({ components: [crb1[tingh], centauri], ephemeral: true, fetchReply: true });

								} else if (nob[tingh] > 5 && nob[tingh] <= 10) {

									crb1[tingh] = new MessageActionRow().addComponents(imp[tingh].slice(0, 5));

									crb2[tingh] = new MessageActionRow()
										.addComponents(imp[tingh].slice(5, nob[tingh]));
									klmbutton.editReply({ components: [crb1[tingh], crb2[tingh], centauri], ephemeral: true, fetchReply: true });
								} else if (nob[tingh] > 10 && nob[tingh] <= 15) {

									crb1[tingh] = new MessageActionRow().addComponents(imp[tingh].slice(0, 5));
									crb2[tingh] = new MessageActionRow()
										.addComponents(imp[tingh].slice(5, 10));
									crb3[tingh] = new MessageActionRow()
										.addComponents(imp[tingh].slice(10, nob[tingh]));

									klmbutton.editReply({ components: [crb1[tingh], crb2[tingh], crb3[tingh], centauri], ephemeral: true, fetchReply: true });
								} else if (nob[tingh] > 15 && nob[tingh] <= 20) {

									crb1[tingh] = new MessageActionRow().addComponents(imp[tingh].slice(0, 5));
									crb2[tingh] = new MessageActionRow()
										.addComponents(imp[tingh].slice(5, 10));
									crb3[tingh] = new MessageActionRow()
										.addComponents(imp[tingh].slice(10, 15));
									crb4[tingh] = new MessageActionRow()
										.addComponents(imp[tingh].slice(15, nob[tingh]));

									klmbutton.editReply({ components: [crb1[tingh], crb2[tingh], crb3[tingh], crb4[tingh], centauri], ephemeral: true, fetchReply: true });
								}
								return lastbutton.deferUpdate();




							}
							if (lastbutton.user.id != Args.userid) {
								return lastbutton.reply({content: 'It is not your turn', ephemeral: true});
							}

							if (lastbutton.user.id == Args.userid) {
								if (lastbutton.customId == 'Draw' && cruelty[Args.user] != 0) {
									if (neutr == 0) {
										kitt = nob[Args.user];
										kitp = 0;
										siska = [];
										for (shungi = 0; shungi < nob[Args.user]; shungi++) {
											if (topcard.value == supv[Args.user][shungi] || topcard.color == supc[Args.user][shungi] || topcard.name == supr[Args.user][shungi] || supv[Args.user][shungi] == 'Wild Draw Four' || supv[Args.user][shungi] == 'Wild' || supv[Args.user][shungi] == 'Wild Reverse' || topcard.value == 'Wild Reverse') {
												supst[Args.user][shungi] = 'SUCCESS';
												siska.push(`${supr[Args.user][shungi]}`);
												kitp = kitp + 1;

											}
										}
										if (kitp > 0) {
											lastbutton.reply({ content: `${siska} is matching`, ephemeral: true });
											imp[Args.user] = [new MessageButton()
    .setCustomId(`${sups[Args.user][0]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][0]}`)
    .setDisabled(`${supb[Args.user][0]}`)
    .setEmoji(`${supe[Args.user][0]}`)
    ,
new MessageButton()
    .setCustomId(`${sups[Args.user][1]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][1]}`)
    .setDisabled(`${supb[Args.user][1]}`)
    .setEmoji(`${supe[Args.user][1]}`)
    ,
new MessageButton()
    .setCustomId(`${sups[Args.user][2]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][2]}`)
    .setDisabled(`${supb[Args.user][2]}`)
    .setEmoji(`${supe[Args.user][2]}`),
new MessageButton()
    .setCustomId(`${sups[Args.user][3]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][3]}`)
    .setDisabled(`${supb[Args.user][3]}`)
    .setEmoji(`${supe[Args.user][3]}`)
    ,
new MessageButton()
    .setCustomId(`${sups[Args.user][4]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][4]}`)
    .setDisabled(`${supb[Args.user][4]}`)
    .setEmoji(`${supe[Args.user][4]}`),


new MessageButton()
    .setCustomId(`${sups[Args.user][5]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][5]}`)
    .setDisabled(`${supb[Args.user][5]}`)
    .setEmoji(`${supe[Args.user][5]}`)
    ,
new MessageButton()
    .setCustomId(`${sups[Args.user][6]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][6]}`)
    .setDisabled(`${supb[Args.user][6]}`)
    .setEmoji(`${supe[Args.user][6]}`),
new MessageButton()
    .setCustomId(`${sups[Args.user][7]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][7]}`)
    .setDisabled(`${supb[Args.user][7]}`)
    .setEmoji(`${supe[Args.user][7]}`)
    ,
new MessageButton()
    .setCustomId(`${sups[Args.user][8]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][8]}`)
    .setDisabled(`${supb[Args.user][8]}`)
    .setEmoji(`${supe[Args.user][8]}`)
    ,
new MessageButton()
    .setCustomId(`${sups[Args.user][9]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][9]}`)
    .setDisabled(`${supb[Args.user][9]}`)
    .setEmoji(`${supe[Args.user][9]}`),
new MessageButton()
    .setCustomId(`${sups[Args.user][10]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][10]}`)
    .setDisabled(`${supb[Args.user][10]}`)
    .setEmoji(`${supe[Args.user][10]}`)
    ,
new MessageButton()
    .setCustomId(`${sups[Args.user][11]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][11]}`)
    .setDisabled(`${supb[Args.user][11]}`)
    .setEmoji(`${supe[Args.user][11]}`),


new MessageButton()
    .setCustomId(`${sups[Args.user][12]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][12]}`)
    .setDisabled(`${supb[Args.user][12]}`)
    .setEmoji(`${supe[Args.user][12]}`)
    ,
new MessageButton()
    .setCustomId(`${sups[Args.user][13]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][13]}`)
    .setDisabled(`${supb[Args.user][13]}`)
    .setEmoji(`${supe[Args.user][13]}`),
new MessageButton()
    .setCustomId(`${sups[Args.user][14]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][14]}`)
    .setDisabled(`${supb[Args.user][14]}`)
    .setEmoji(`${supe[Args.user][14]}`)
    ,
new MessageButton()
    .setCustomId(`${sups[Args.user][15]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][15]}`)
    .setDisabled(`${supb[Args.user][15]}`)
    .setEmoji(`${supe[Args.user][15]}`)
    ,
new MessageButton()
    .setCustomId(`${sups[Args.user][16]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][16]}`)
    .setDisabled(`${supb[Args.user][16]}`)
    .setEmoji(`${supe[Args.user][16]}`),
new MessageButton()
    .setCustomId(`${sups[Args.user][17]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][17]}`)
    .setDisabled(`${supb[Args.user][17]}`)
    .setEmoji(`${supe[Args.user][17]}`)
    ,
new MessageButton()
    .setCustomId(`${sups[Args.user][18]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][18]}`)
    .setDisabled(`${supb[Args.user][18]}`)
    .setEmoji(`${supe[Args.user][18]}`),


new MessageButton()
    .setCustomId(`${sups[Args.user][19]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][19]}`)
    .setDisabled(`${supb[Args.user][19]}`)
    .setEmoji(`${supe[Args.user][19]}`),

    new MessageButton()
    .setCustomId(`${sups[Args.user][20]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][20]}`)
    .setDisabled(`${supb[Args.user][20]}`)
    .setEmoji(`${supe[Args.user][20]}`),

    new MessageButton()
    .setCustomId(`${sups[Args.user][21]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][21]}`)
    .setDisabled(`${supb[Args.user][21]}`)
    .setEmoji(`${supe[Args.user][21]}`),

    new MessageButton()
    .setCustomId(`${sups[Args.user][22]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][22]}`)
    .setDisabled(`${supb[Args.user][22]}`)
    .setEmoji(`${supe[Args.user][22]}`),

    new MessageButton()
    .setCustomId(`${sups[Args.user][23]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][23]}`)
    .setDisabled(`${supb[Args.user][23]}`)
    .setEmoji(`${supe[Args.user][23]}`),

    new MessageButton()
    .setCustomId(`${sups[Args.user][24]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][24]}`)
    .setDisabled(`${supb[Args.user][24]}`)
    .setEmoji(`${supe[Args.user][24]}`),,

    new MessageButton()
    .setCustomId(`${sups[Args.user][25]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][25]}`)
    .setDisabled(`${supb[Args.user][25]}`)
    .setEmoji(`${supe[Args.user][25]}`),

    new MessageButton()
    .setCustomId(`${sups[Args.user][26]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][26]}`)
    .setDisabled(`${supb[Args.user][26]}`)
    .setEmoji(`${supe[Args.user][26]}`),

    new MessageButton()
    .setCustomId(`${sups[Args.user][27]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][27]}`)
    .setDisabled(`${supb[Args.user][27]}`)
    .setEmoji(`${supe[Args.user][27]}`),

    new MessageButton()
    .setCustomId(`${sups[Args.user][28]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][28]}`)
    .setDisabled(`${supb[Args.user][28]}`)
    .setEmoji(`${supe[Args.user][28]}`),

    new MessageButton()
    .setCustomId(`${sups[Args.user][29]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][29]}`)
    .setDisabled(`${supb[Args.user][29]}`)
    .setEmoji(`${supe[Args.user][29]}`),

    new MessageButton()
    .setCustomId(`${sups[Args.user][30]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][30]}`)
    .setDisabled(`${supb[Args.user][30]}`)
    .setEmoji(`${supe[Args.user][30]}`),

    new MessageButton()
    .setCustomId(`${sups[Args.user][31]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][31]}`)
    .setDisabled(`${supb[Args.user][31]}`)
    .setEmoji(`${supe[Args.user][31]}`),

    new MessageButton()
    .setCustomId(`${sups[Args.user][32]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][32]}`)
    .setDisabled(`${supb[Args.user][32]}`)
    .setEmoji(`${supe[Args.user][32]}`),

    ,

    new MessageButton()
    .setCustomId(`${sups[Args.user][33]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][33]}`)
    .setDisabled(`${supb[Args.user][33]}`)
    .setEmoji(`${supe[Args.user][33]}`),

    new MessageButton()
    .setCustomId(`${sups[Args.user][34]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][34]}`)
    .setDisabled(`${supb[Args.user][34]}`)
    .setEmoji(`${supe[Args.user][34]}`),

    new MessageButton()
    .setCustomId(`${sups[Args.user][35]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][35]}`)
    .setDisabled(`${supb[Args.user][35]}`)
    .setEmoji(`${supe[Args.user][35]}`),

    new MessageButton()
    .setCustomId(`${sups[Args.user][36]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][36]}`)
    .setDisabled(`${supb[Args.user][36]}`)
    .setEmoji(`${supe[Args.user][36]}`),

    new MessageButton()
    .setCustomId(`${sups[Args.user][37]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][37]}`)
    .setDisabled(`${supb[Args.user][37]}`)
    .setEmoji(`${supe[Args.user][37]}`),

    new MessageButton()
    .setCustomId(`${sups[Args.user][38]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][38]}`)
    .setDisabled(`${supb[Args.user][38]}`)
    .setEmoji(`${supe[Args.user][38]}`),

    new MessageButton()
    .setCustomId(`${sups[Args.user][39]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][39]}`)
    .setDisabled(`${supb[Args.user][39]}`)
    .setEmoji(`${supe[Args.user][39]}`),

    new MessageButton()
    .setCustomId(`${sups[Args.user][40]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][40]}`)
    .setDisabled(`${supb[Args.user][40]}`)
    .setEmoji(`${supe[Args.user][40]}`),

    new MessageButton()
    .setCustomId(`${sups[Args.user][41]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][41]}`)
    .setDisabled(`${supb[Args.user][41]}`)
    .setEmoji(`${supe[Args.user][41]}`),

    new MessageButton()
    .setCustomId(`${sups[Args.user][42]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][42]}`)
    .setDisabled(`${supb[Args.user][42]}`)
    .setEmoji(`${supe[Args.user][42]}`),

    new MessageButton()
    .setCustomId(`${sups[Args.user][43]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][43]}`)
    .setDisabled(`${supb[Args.user][43]}`)
    .setEmoji(`${supe[Args.user][43]}`),

    new MessageButton()
    .setCustomId(`${sups[Args.user][44]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][44]}`)
    .setDisabled(`${supb[Args.user][44]}`)
    .setEmoji(`${supe[Args.user][44]}`),

    new MessageButton()
    .setCustomId(`${sups[Args.user][45]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][45]}`)
    .setDisabled(`${supb[Args.user][45]}`)
    .setEmoji(`${supe[Args.user][45]}`),

    new MessageButton()
    .setCustomId(`${sups[Args.user][46]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][46]}`)
    .setDisabled(`${supb[Args.user][46]}`)
    .setEmoji(`${supe[Args.user][46]}`),

    new MessageButton()
    .setCustomId(`${sups[Args.user][47]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][47]}`)
    .setDisabled(`${supb[Args.user][47]}`)
    .setEmoji(`${supe[Args.user][47]}`),

    new MessageButton()
    .setCustomId(`${sups[Args.user][48]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][48]}`)
    .setDisabled(`${supb[Args.user][48]}`)
    .setEmoji(`${supe[Args.user][48]}`),

    new MessageButton()
    .setCustomId(`${sups[Args.user][49]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][49]}`)
    .setDisabled(`${supb[Args.user][49]}`)
    .setEmoji(`${supe[Args.user][49]}`)

]
											if (nob[Args.user] <= 5) {
												crb1[Args.user] = new MessageActionRow().addComponents(imp[Args.user].slice(0, nob[Args.user]));
												klmbutton.editReply({ components: [crb1[Args.user], centauri], ephemeral: true, fetchReply: true });

											} else if (nob[Args.user] > 5 && nob[Args.user] <= 10) {

												crb1[Args.user] = new MessageActionRow().addComponents(imp[Args.user].slice(0, 5));

												crb2[Args.user] = new MessageActionRow()
													.addComponents(imp[Args.user].slice(5, nob[Args.user]));
												klmbutton.editReply({ components: [crb1[Args.user], crb2[Args.user], centauri], ephemeral: true, fetchReply: true });
											} else if (nob[Args.user] > 10 && nob[Args.user] <= 15) {

												crb1[Args.user] = new MessageActionRow().addComponents(imp[Args.user].slice(0, 5));
												crb2[Args.user] = new MessageActionRow()
													.addComponents(imp[Args.user].slice(5, 10));
												crb3[Args.user] = new MessageActionRow()
													.addComponents(imp[Args.user].slice(10, nob[Args.user]));

												klmbutton.editReply({ components: [crb1[Args.user], crb2[Args.user], crb3[Args.user], centauri], ephemeral: true, fetchReply: true });
											} else if (nob[Args.user] > 15 && nob[Args.user] <= 20) {

												crb1[Args.user] = new MessageActionRow().addComponents(imp[Args.user].slice(0, 5));
												crb2[Args.user] = new MessageActionRow()
													.addComponents(imp[Args.user].slice(5, 10));
												crb3[Args.user] = new MessageActionRow()
													.addComponents(imp[Args.user].slice(10, 15));
												crb4[Args.user] = new MessageActionRow()
													.addComponents(imp[Args.user].slice(15, nob[Args.user]));

												klmbutton.editReply({ components: [crb1[Args.user], crb2[Args.user], crb3[Args.user], crb4[Args.user], centauri], ephemeral: true, fetchReply: true });
											}
											supst[Args.user] = ['SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY'];

											////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////											////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
										}
										else {

											nob[Args.user] = nob[Args.user] + 1;
											nobe[Args.user] = "<:UnoSlot:895311124399013888>".repeat(nob[Args.user]);
											if (disp.length == 8) {
												disp.splice(0, 1);
												disp.push(`**${a[Args.user]}** drawn a card!`);

											}
											else {

												disp.push(`**${a[Args.user]}** drawn a card!`);


											}
											roundno = roundno + 1;
											if (nob[Args.user] <= 5) {
												crb1[Args.user] = new MessageActionRow().addComponents(imp[Args.user].slice(0, nob[Args.user]));
												klmbutton.editReply({ components: [crb1[Args.user], centauri], ephemeral: true, fetchReply: true });

											} else if (nob[Args.user] > 5 && nob[Args.user] <= 10) {

												crb1[Args.user] = new MessageActionRow().addComponents(imp[Args.user].slice(0, 5));

												crb2[Args.user] = new MessageActionRow()
													.addComponents(imp[Args.user].slice(5, nob[Args.user]));
												klmbutton.editReply({ components: [crb1[Args.user], crb2[Args.user], centauri], ephemeral: true, fetchReply: true });
											} else if (nob[Args.user] > 10 && nob[Args.user] <= 15) {

												crb1[Args.user] = new MessageActionRow().addComponents(imp[Args.user].slice(0, 5));
												crb2[Args.user] = new MessageActionRow()
													.addComponents(imp[Args.user].slice(5, 10));
												crb3[Args.user] = new MessageActionRow()
													.addComponents(imp[Args.user].slice(10, nob[Args.user]));

												klmbutton.editReply({ components: [crb1[Args.user], crb2[Args.user], crb3[Args.user], centauri], ephemeral: true, fetchReply: true });
											} else if (nob[Args.user] > 15 && nob[Args.user] <= 20) {

												crb1[Args.user] = new MessageActionRow().addComponents(imp[Args.user].slice(0, 5));
												crb2[Args.user] = new MessageActionRow()
													.addComponents(imp[Args.user].slice(5, 10));
												crb3[Args.user] = new MessageActionRow()
													.addComponents(imp[Args.user].slice(10, 15));
												crb4[Args.user] = new MessageActionRow()
													.addComponents(imp[Args.user].slice(15, nob[Args.user]));

												klmbutton.editReply({ components: [crb1[Args.user], crb2[Args.user], crb3[Args.user], crb4[Args.user], centauri], ephemeral: true, fetchReply: true });
											}

											if (lbf == 1 && Args.user == a.length - 1) {
												Args.user = 0;
											} else if (lbf == -1 && Args.user == 0) {
												Args.user = a.length - 1;
											} else {
												Args.user = Args.user + lbf;
											}
											Args.userid = aid[Args.user];
											for (sil = 0; sil <= a.length; sil++) {
												cpa[sil] = a[sil];
											}
											cpa[Args.user] = `__${a[Args.user]}__`;

											lastbutton.deferUpdate();
										}


									}
									else {

										kitt = nob[Args.user];
										kitp = 0;
										siska = [];
										for (shungi = 0; shungi < nob[Args.user]; shungi++) {
											if ((topcard.value == supv[Args.user][shungi] || supv[Args.user][shungi] == 'Wild Draw Four' || supv[Args.user][shungi] == 'Wild' || supv[Args.user][shungi] == 'Wild Reverse') && supv[Args.user][shungi] != 0) {
												supst[Args.user][shungi] = 'SUCCESS';
												siska.push(`${supr[Args.user][shungi]}`);
												kitp = kitp + 1;

											}
										}
										if (kitp > 0) {
											lastbutton.reply({ content: `${siska} is matching`, ephemeral: true });
											imp[Args.user] = [new MessageButton()
    .setCustomId(`${sups[Args.user][0]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][0]}`)
    .setDisabled(`${supb[Args.user][0]}`)
    .setEmoji(`${supe[Args.user][0]}`)
    ,
new MessageButton()
    .setCustomId(`${sups[Args.user][1]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][1]}`)
    .setDisabled(`${supb[Args.user][1]}`)
    .setEmoji(`${supe[Args.user][1]}`)
    ,
new MessageButton()
    .setCustomId(`${sups[Args.user][2]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][2]}`)
    .setDisabled(`${supb[Args.user][2]}`)
    .setEmoji(`${supe[Args.user][2]}`),
new MessageButton()
    .setCustomId(`${sups[Args.user][3]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][3]}`)
    .setDisabled(`${supb[Args.user][3]}`)
    .setEmoji(`${supe[Args.user][3]}`)
    ,
new MessageButton()
    .setCustomId(`${sups[Args.user][4]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][4]}`)
    .setDisabled(`${supb[Args.user][4]}`)
    .setEmoji(`${supe[Args.user][4]}`),


new MessageButton()
    .setCustomId(`${sups[Args.user][5]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][5]}`)
    .setDisabled(`${supb[Args.user][5]}`)
    .setEmoji(`${supe[Args.user][5]}`)
    ,
new MessageButton()
    .setCustomId(`${sups[Args.user][6]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][6]}`)
    .setDisabled(`${supb[Args.user][6]}`)
    .setEmoji(`${supe[Args.user][6]}`),
new MessageButton()
    .setCustomId(`${sups[Args.user][7]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][7]}`)
    .setDisabled(`${supb[Args.user][7]}`)
    .setEmoji(`${supe[Args.user][7]}`)
    ,
new MessageButton()
    .setCustomId(`${sups[Args.user][8]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][8]}`)
    .setDisabled(`${supb[Args.user][8]}`)
    .setEmoji(`${supe[Args.user][8]}`)
    ,
new MessageButton()
    .setCustomId(`${sups[Args.user][9]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][9]}`)
    .setDisabled(`${supb[Args.user][9]}`)
    .setEmoji(`${supe[Args.user][9]}`),
new MessageButton()
    .setCustomId(`${sups[Args.user][10]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][10]}`)
    .setDisabled(`${supb[Args.user][10]}`)
    .setEmoji(`${supe[Args.user][10]}`)
    ,
new MessageButton()
    .setCustomId(`${sups[Args.user][11]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][11]}`)
    .setDisabled(`${supb[Args.user][11]}`)
    .setEmoji(`${supe[Args.user][11]}`),


new MessageButton()
    .setCustomId(`${sups[Args.user][12]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][12]}`)
    .setDisabled(`${supb[Args.user][12]}`)
    .setEmoji(`${supe[Args.user][12]}`)
    ,
new MessageButton()
    .setCustomId(`${sups[Args.user][13]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][13]}`)
    .setDisabled(`${supb[Args.user][13]}`)
    .setEmoji(`${supe[Args.user][13]}`),
new MessageButton()
    .setCustomId(`${sups[Args.user][14]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][14]}`)
    .setDisabled(`${supb[Args.user][14]}`)
    .setEmoji(`${supe[Args.user][14]}`)
    ,
new MessageButton()
    .setCustomId(`${sups[Args.user][15]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][15]}`)
    .setDisabled(`${supb[Args.user][15]}`)
    .setEmoji(`${supe[Args.user][15]}`)
    ,
new MessageButton()
    .setCustomId(`${sups[Args.user][16]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][16]}`)
    .setDisabled(`${supb[Args.user][16]}`)
    .setEmoji(`${supe[Args.user][16]}`),
new MessageButton()
    .setCustomId(`${sups[Args.user][17]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][17]}`)
    .setDisabled(`${supb[Args.user][17]}`)
    .setEmoji(`${supe[Args.user][17]}`)
    ,
new MessageButton()
    .setCustomId(`${sups[Args.user][18]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][18]}`)
    .setDisabled(`${supb[Args.user][18]}`)
    .setEmoji(`${supe[Args.user][18]}`),


new MessageButton()
    .setCustomId(`${sups[Args.user][19]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][19]}`)
    .setDisabled(`${supb[Args.user][19]}`)
    .setEmoji(`${supe[Args.user][19]}`),

    new MessageButton()
    .setCustomId(`${sups[Args.user][20]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][20]}`)
    .setDisabled(`${supb[Args.user][20]}`)
    .setEmoji(`${supe[Args.user][20]}`),

    new MessageButton()
    .setCustomId(`${sups[Args.user][21]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][21]}`)
    .setDisabled(`${supb[Args.user][21]}`)
    .setEmoji(`${supe[Args.user][21]}`),

    new MessageButton()
    .setCustomId(`${sups[Args.user][22]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][22]}`)
    .setDisabled(`${supb[Args.user][22]}`)
    .setEmoji(`${supe[Args.user][22]}`),

    new MessageButton()
    .setCustomId(`${sups[Args.user][23]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][23]}`)
    .setDisabled(`${supb[Args.user][23]}`)
    .setEmoji(`${supe[Args.user][23]}`),

    new MessageButton()
    .setCustomId(`${sups[Args.user][24]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][24]}`)
    .setDisabled(`${supb[Args.user][24]}`)
    .setEmoji(`${supe[Args.user][24]}`),,

    new MessageButton()
    .setCustomId(`${sups[Args.user][25]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][25]}`)
    .setDisabled(`${supb[Args.user][25]}`)
    .setEmoji(`${supe[Args.user][25]}`),

    new MessageButton()
    .setCustomId(`${sups[Args.user][26]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][26]}`)
    .setDisabled(`${supb[Args.user][26]}`)
    .setEmoji(`${supe[Args.user][26]}`),

    new MessageButton()
    .setCustomId(`${sups[Args.user][27]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][27]}`)
    .setDisabled(`${supb[Args.user][27]}`)
    .setEmoji(`${supe[Args.user][27]}`),

    new MessageButton()
    .setCustomId(`${sups[Args.user][28]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][28]}`)
    .setDisabled(`${supb[Args.user][28]}`)
    .setEmoji(`${supe[Args.user][28]}`),

    new MessageButton()
    .setCustomId(`${sups[Args.user][29]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][29]}`)
    .setDisabled(`${supb[Args.user][29]}`)
    .setEmoji(`${supe[Args.user][29]}`),

    new MessageButton()
    .setCustomId(`${sups[Args.user][30]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][30]}`)
    .setDisabled(`${supb[Args.user][30]}`)
    .setEmoji(`${supe[Args.user][30]}`),

    new MessageButton()
    .setCustomId(`${sups[Args.user][31]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][31]}`)
    .setDisabled(`${supb[Args.user][31]}`)
    .setEmoji(`${supe[Args.user][31]}`),

    new MessageButton()
    .setCustomId(`${sups[Args.user][32]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][32]}`)
    .setDisabled(`${supb[Args.user][32]}`)
    .setEmoji(`${supe[Args.user][32]}`),

    ,

    new MessageButton()
    .setCustomId(`${sups[Args.user][33]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][33]}`)
    .setDisabled(`${supb[Args.user][33]}`)
    .setEmoji(`${supe[Args.user][33]}`),

    new MessageButton()
    .setCustomId(`${sups[Args.user][34]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][34]}`)
    .setDisabled(`${supb[Args.user][34]}`)
    .setEmoji(`${supe[Args.user][34]}`),

    new MessageButton()
    .setCustomId(`${sups[Args.user][35]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][35]}`)
    .setDisabled(`${supb[Args.user][35]}`)
    .setEmoji(`${supe[Args.user][35]}`),

    new MessageButton()
    .setCustomId(`${sups[Args.user][36]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][36]}`)
    .setDisabled(`${supb[Args.user][36]}`)
    .setEmoji(`${supe[Args.user][36]}`),

    new MessageButton()
    .setCustomId(`${sups[Args.user][37]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][37]}`)
    .setDisabled(`${supb[Args.user][37]}`)
    .setEmoji(`${supe[Args.user][37]}`),

    new MessageButton()
    .setCustomId(`${sups[Args.user][38]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][38]}`)
    .setDisabled(`${supb[Args.user][38]}`)
    .setEmoji(`${supe[Args.user][38]}`),

    new MessageButton()
    .setCustomId(`${sups[Args.user][39]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][39]}`)
    .setDisabled(`${supb[Args.user][39]}`)
    .setEmoji(`${supe[Args.user][39]}`),

    new MessageButton()
    .setCustomId(`${sups[Args.user][40]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][40]}`)
    .setDisabled(`${supb[Args.user][40]}`)
    .setEmoji(`${supe[Args.user][40]}`),

    new MessageButton()
    .setCustomId(`${sups[Args.user][41]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][41]}`)
    .setDisabled(`${supb[Args.user][41]}`)
    .setEmoji(`${supe[Args.user][41]}`),

    new MessageButton()
    .setCustomId(`${sups[Args.user][42]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][42]}`)
    .setDisabled(`${supb[Args.user][42]}`)
    .setEmoji(`${supe[Args.user][42]}`),

    new MessageButton()
    .setCustomId(`${sups[Args.user][43]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][43]}`)
    .setDisabled(`${supb[Args.user][43]}`)
    .setEmoji(`${supe[Args.user][43]}`),

    new MessageButton()
    .setCustomId(`${sups[Args.user][44]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][44]}`)
    .setDisabled(`${supb[Args.user][44]}`)
    .setEmoji(`${supe[Args.user][44]}`),

    new MessageButton()
    .setCustomId(`${sups[Args.user][45]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][45]}`)
    .setDisabled(`${supb[Args.user][45]}`)
    .setEmoji(`${supe[Args.user][45]}`),

    new MessageButton()
    .setCustomId(`${sups[Args.user][46]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][46]}`)
    .setDisabled(`${supb[Args.user][46]}`)
    .setEmoji(`${supe[Args.user][46]}`),

    new MessageButton()
    .setCustomId(`${sups[Args.user][47]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][47]}`)
    .setDisabled(`${supb[Args.user][47]}`)
    .setEmoji(`${supe[Args.user][47]}`),

    new MessageButton()
    .setCustomId(`${sups[Args.user][48]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][48]}`)
    .setDisabled(`${supb[Args.user][48]}`)
    .setEmoji(`${supe[Args.user][48]}`),

    new MessageButton()
    .setCustomId(`${sups[Args.user][49]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][49]}`)
    .setDisabled(`${supb[Args.user][49]}`)
    .setEmoji(`${supe[Args.user][49]}`)

]
											if (nob[Args.user] <= 5) {
												crb1[Args.user] = new MessageActionRow().addComponents(imp[Args.user].slice(0, nob[Args.user]));
												klmbutton.editReply({ components: [crb1[Args.user], centauri], ephemeral: true, fetchReply: true });

											} else if (nob[Args.user] > 5 && nob[Args.user] <= 10) {

												crb1[Args.user] = new MessageActionRow().addComponents(imp[Args.user].slice(0, 5));

												crb2[Args.user] = new MessageActionRow()
													.addComponents(imp[Args.user].slice(5, nob[Args.user]));
												klmbutton.editReply({ components: [crb1[Args.user], crb2[Args.user], centauri], ephemeral: true, fetchReply: true });
											} else if (nob[Args.user] > 10 && nob[Args.user] <= 15) {

												crb1[Args.user] = new MessageActionRow().addComponents(imp[Args.user].slice(0, 5));
												crb2[Args.user] = new MessageActionRow()
													.addComponents(imp[Args.user].slice(5, 10));
												crb3[Args.user] = new MessageActionRow()
													.addComponents(imp[Args.user].slice(10, nob[Args.user]));

												klmbutton.editReply({ components: [crb1[Args.user], crb2[Args.user], crb3[Args.user], centauri], ephemeral: true, fetchReply: true });
											} else if (nob[Args.user] > 15 && nob[Args.user] <= 20) {

												crb1[Args.user] = new MessageActionRow().addComponents(imp[Args.user].slice(0, 5));
												crb2[Args.user] = new MessageActionRow()
													.addComponents(imp[Args.user].slice(5, 10));
												crb3[Args.user] = new MessageActionRow()
													.addComponents(imp[Args.user].slice(10, 15));
												crb4[Args.user] = new MessageActionRow()
													.addComponents(imp[Args.user].slice(15, nob[Args.user]));

												klmbutton.editReply({ components: [crb1[Args.user], crb2[Args.user], crb3[Args.user], crb4[Args.user], centauri], ephemeral: true, fetchReply: true });
											}
											supst[Args.user] = ['SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY', 'SECONDARY'];

											////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////											////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
										}
										else {

											nob[Args.user] = nob[Args.user] + neutr;
											nobe[Args.user] = "<:UnoSlot:895311124399013888>".repeat(nob[Args.user]);
											if (disp.length == 8) {
												disp.splice(0, 1);
												disp.push(`**${a[Args.user]}** drawn ${neutr} cards!`);

											}
											else {
												disp.push(`**${a[Args.user]}** drawn ${neutr} cards!`);


											}
											neutr = 0;


											roundno = roundno + 1;
											if (nob[Args.user] <= 5) {
												crb1[Args.user] = new MessageActionRow().addComponents(imp[Args.user].slice(0, nob[Args.user]));
												klmbutton.editReply({ components: [crb1[Args.user], centauri], ephemeral: true, fetchReply: true });

											} else if (nob[Args.user] > 5 && nob[Args.user] <= 10) {

												crb1[Args.user] = new MessageActionRow().addComponents(imp[Args.user].slice(0, 5));

												crb2[Args.user] = new MessageActionRow()
													.addComponents(imp[Args.user].slice(5, nob[Args.user]));
												klmbutton.editReply({ components: [crb1[Args.user], crb2[Args.user], centauri], ephemeral: true, fetchReply: true });
											} else if (nob[Args.user] > 10 && nob[Args.user] <= 15) {

												crb1[Args.user] = new MessageActionRow().addComponents(imp[Args.user].slice(0, 5));
												crb2[Args.user] = new MessageActionRow()
													.addComponents(imp[Args.user].slice(5, 10));
												crb3[Args.user] = new MessageActionRow()
													.addComponents(imp[Args.user].slice(10, nob[Args.user]));

												klmbutton.editReply({ components: [crb1[Args.user], crb2[Args.user], crb3[Args.user], centauri], ephemeral: true, fetchReply: true });
											} else if (nob[Args.user] > 15 && nob[Args.user] <= 20) {

												crb1[Args.user] = new MessageActionRow().addComponents(imp[Args.user].slice(0, 5));
												crb2[Args.user] = new MessageActionRow()
													.addComponents(imp[Args.user].slice(5, 10));
												crb3[Args.user] = new MessageActionRow()
													.addComponents(imp[Args.user].slice(10, 15));
												crb4[Args.user] = new MessageActionRow()
													.addComponents(imp[Args.user].slice(15, nob[Args.user]));

												klmbutton.editReply({ components: [crb1[Args.user], crb2[Args.user], crb3[Args.user], crb4[Args.user], centauri], ephemeral: true, fetchReply: true });
											}
											if (drem == ':green_circle:') {
												if (lbf == 1 && Args.user == a.length - 1) {
													Args.user = 0;
												} else if (lbf == -1 && Args.user == 0) {
													Args.user = a.length - 1;
												} else {
													Args.user = Args.user + lbf;
												}
											}
											Args.userid = aid[Args.user];
											for (sil = 0; sil <= a.length; sil++) {
												cpa[sil] = a[sil];
											}
											cpa[Args.user] = `__${a[Args.user]}__`;

											lastbutton.deferUpdate();


										}
									}

								} else if (lastbutton.customId == 'red' || lastbutton.customId == 'yellow' || lastbutton.customId == 'green' || lastbutton.customId == 'blue') {



									if (lastbutton.customId == `red`) {
										car = cards.filter(card => card.name == `Red Zero`);
										topcard = car[0];


									}
									else if (lastbutton.customId == `yellow`) {
										car = cards.filter(card => card.name == `Yellow Zero`);
										topcard = car[0];

									} else if (lastbutton.customId == `green`) {
										car = cards.filter(card => card.name == `Green Zero`);
										topcard = car[0];

									} else if (lastbutton.customId == `blue`) {
										car = cards.filter(card => card.name == `Blue Zero`);
										topcard = car[0];

									}
									imp[Args.user] = [new MessageButton()
										.setCustomId(`${sups[Args.user][0]}`)
										.setLabel('\u200B')
										.setStyle(`${supst[Args.user][0]}`)
										.setDisabled(`${supb[Args.user][0]}`)
										.setEmoji(`${supe[Args.user][0]}`)
										,
									new MessageButton()
										.setCustomId(`${sups[Args.user][1]}`)
										.setLabel('\u200B')
										.setStyle(`${supst[Args.user][1]}`)
										.setDisabled(`${supb[Args.user][1]}`)
										.setEmoji(`${supe[Args.user][1]}`)
										,
									new MessageButton()
										.setCustomId(`${sups[Args.user][2]}`)
										.setLabel('\u200B')
										.setStyle(`${supst[Args.user][2]}`)
										.setDisabled(`${supb[Args.user][2]}`)
										.setEmoji(`${supe[Args.user][2]}`),
									new MessageButton()
										.setCustomId(`${sups[Args.user][3]}`)
										.setLabel('\u200B')
										.setStyle(`${supst[Args.user][3]}`)
										.setDisabled(`${supb[Args.user][3]}`)
										.setEmoji(`${supe[Args.user][3]}`)
										,
									new MessageButton()
										.setCustomId(`${sups[Args.user][4]}`)
										.setLabel('\u200B')
										.setStyle(`${supst[Args.user][4]}`)
										.setDisabled(`${supb[Args.user][4]}`)
										.setEmoji(`${supe[Args.user][4]}`),
									
									
									new MessageButton()
										.setCustomId(`${sups[Args.user][5]}`)
										.setLabel('\u200B')
										.setStyle(`${supst[Args.user][5]}`)
										.setDisabled(`${supb[Args.user][5]}`)
										.setEmoji(`${supe[Args.user][5]}`)
										,
									new MessageButton()
										.setCustomId(`${sups[Args.user][6]}`)
										.setLabel('\u200B')
										.setStyle(`${supst[Args.user][6]}`)
										.setDisabled(`${supb[Args.user][6]}`)
										.setEmoji(`${supe[Args.user][6]}`),
									new MessageButton()
										.setCustomId(`${sups[Args.user][7]}`)
										.setLabel('\u200B')
										.setStyle(`${supst[Args.user][7]}`)
										.setDisabled(`${supb[Args.user][7]}`)
										.setEmoji(`${supe[Args.user][7]}`)
										,
									new MessageButton()
										.setCustomId(`${sups[Args.user][8]}`)
										.setLabel('\u200B')
										.setStyle(`${supst[Args.user][8]}`)
										.setDisabled(`${supb[Args.user][8]}`)
										.setEmoji(`${supe[Args.user][8]}`)
										,
									new MessageButton()
										.setCustomId(`${sups[Args.user][9]}`)
										.setLabel('\u200B')
										.setStyle(`${supst[Args.user][9]}`)
										.setDisabled(`${supb[Args.user][9]}`)
										.setEmoji(`${supe[Args.user][9]}`),
									new MessageButton()
										.setCustomId(`${sups[Args.user][10]}`)
										.setLabel('\u200B')
										.setStyle(`${supst[Args.user][10]}`)
										.setDisabled(`${supb[Args.user][10]}`)
										.setEmoji(`${supe[Args.user][10]}`)
										,
									new MessageButton()
										.setCustomId(`${sups[Args.user][11]}`)
										.setLabel('\u200B')
										.setStyle(`${supst[Args.user][11]}`)
										.setDisabled(`${supb[Args.user][11]}`)
										.setEmoji(`${supe[Args.user][11]}`),
									
									
									new MessageButton()
										.setCustomId(`${sups[Args.user][12]}`)
										.setLabel('\u200B')
										.setStyle(`${supst[Args.user][12]}`)
										.setDisabled(`${supb[Args.user][12]}`)
										.setEmoji(`${supe[Args.user][12]}`)
										,
									new MessageButton()
										.setCustomId(`${sups[Args.user][13]}`)
										.setLabel('\u200B')
										.setStyle(`${supst[Args.user][13]}`)
										.setDisabled(`${supb[Args.user][13]}`)
										.setEmoji(`${supe[Args.user][13]}`),
									new MessageButton()
										.setCustomId(`${sups[Args.user][14]}`)
										.setLabel('\u200B')
										.setStyle(`${supst[Args.user][14]}`)
										.setDisabled(`${supb[Args.user][14]}`)
										.setEmoji(`${supe[Args.user][14]}`)
										,
									new MessageButton()
										.setCustomId(`${sups[Args.user][15]}`)
										.setLabel('\u200B')
										.setStyle(`${supst[Args.user][15]}`)
										.setDisabled(`${supb[Args.user][15]}`)
										.setEmoji(`${supe[Args.user][15]}`)
										,
									new MessageButton()
										.setCustomId(`${sups[Args.user][16]}`)
										.setLabel('\u200B')
										.setStyle(`${supst[Args.user][16]}`)
										.setDisabled(`${supb[Args.user][16]}`)
										.setEmoji(`${supe[Args.user][16]}`),
									new MessageButton()
										.setCustomId(`${sups[Args.user][17]}`)
										.setLabel('\u200B')
										.setStyle(`${supst[Args.user][17]}`)
										.setDisabled(`${supb[Args.user][17]}`)
										.setEmoji(`${supe[Args.user][17]}`)
										,
									new MessageButton()
										.setCustomId(`${sups[Args.user][18]}`)
										.setLabel('\u200B')
										.setStyle(`${supst[Args.user][18]}`)
										.setDisabled(`${supb[Args.user][18]}`)
										.setEmoji(`${supe[Args.user][18]}`),
									
									
									new MessageButton()
										.setCustomId(`${sups[Args.user][19]}`)
										.setLabel('\u200B')
										.setStyle(`${supst[Args.user][19]}`)
										.setDisabled(`${supb[Args.user][19]}`)
										.setEmoji(`${supe[Args.user][19]}`),
									
										new MessageButton()
										.setCustomId(`${sups[Args.user][20]}`)
										.setLabel('\u200B')
										.setStyle(`${supst[Args.user][20]}`)
										.setDisabled(`${supb[Args.user][20]}`)
										.setEmoji(`${supe[Args.user][20]}`),
									
										new MessageButton()
										.setCustomId(`${sups[Args.user][21]}`)
										.setLabel('\u200B')
										.setStyle(`${supst[Args.user][21]}`)
										.setDisabled(`${supb[Args.user][21]}`)
										.setEmoji(`${supe[Args.user][21]}`),
									
										new MessageButton()
										.setCustomId(`${sups[Args.user][22]}`)
										.setLabel('\u200B')
										.setStyle(`${supst[Args.user][22]}`)
										.setDisabled(`${supb[Args.user][22]}`)
										.setEmoji(`${supe[Args.user][22]}`),
									
										new MessageButton()
										.setCustomId(`${sups[Args.user][23]}`)
										.setLabel('\u200B')
										.setStyle(`${supst[Args.user][23]}`)
										.setDisabled(`${supb[Args.user][23]}`)
										.setEmoji(`${supe[Args.user][23]}`),
									
										new MessageButton()
										.setCustomId(`${sups[Args.user][24]}`)
										.setLabel('\u200B')
										.setStyle(`${supst[Args.user][24]}`)
										.setDisabled(`${supb[Args.user][24]}`)
										.setEmoji(`${supe[Args.user][24]}`),,
									
										new MessageButton()
										.setCustomId(`${sups[Args.user][25]}`)
										.setLabel('\u200B')
										.setStyle(`${supst[Args.user][25]}`)
										.setDisabled(`${supb[Args.user][25]}`)
										.setEmoji(`${supe[Args.user][25]}`),
									
										new MessageButton()
										.setCustomId(`${sups[Args.user][26]}`)
										.setLabel('\u200B')
										.setStyle(`${supst[Args.user][26]}`)
										.setDisabled(`${supb[Args.user][26]}`)
										.setEmoji(`${supe[Args.user][26]}`),
									
										new MessageButton()
										.setCustomId(`${sups[Args.user][27]}`)
										.setLabel('\u200B')
										.setStyle(`${supst[Args.user][27]}`)
										.setDisabled(`${supb[Args.user][27]}`)
										.setEmoji(`${supe[Args.user][27]}`),
									
										new MessageButton()
										.setCustomId(`${sups[Args.user][28]}`)
										.setLabel('\u200B')
										.setStyle(`${supst[Args.user][28]}`)
										.setDisabled(`${supb[Args.user][28]}`)
										.setEmoji(`${supe[Args.user][28]}`),
									
										new MessageButton()
										.setCustomId(`${sups[Args.user][29]}`)
										.setLabel('\u200B')
										.setStyle(`${supst[Args.user][29]}`)
										.setDisabled(`${supb[Args.user][29]}`)
										.setEmoji(`${supe[Args.user][29]}`),
									
										new MessageButton()
										.setCustomId(`${sups[Args.user][30]}`)
										.setLabel('\u200B')
										.setStyle(`${supst[Args.user][30]}`)
										.setDisabled(`${supb[Args.user][30]}`)
										.setEmoji(`${supe[Args.user][30]}`),
									
										new MessageButton()
										.setCustomId(`${sups[Args.user][31]}`)
										.setLabel('\u200B')
										.setStyle(`${supst[Args.user][31]}`)
										.setDisabled(`${supb[Args.user][31]}`)
										.setEmoji(`${supe[Args.user][31]}`),
									
										new MessageButton()
										.setCustomId(`${sups[Args.user][32]}`)
										.setLabel('\u200B')
										.setStyle(`${supst[Args.user][32]}`)
										.setDisabled(`${supb[Args.user][32]}`)
										.setEmoji(`${supe[Args.user][32]}`),
									
										,
									
										new MessageButton()
										.setCustomId(`${sups[Args.user][33]}`)
										.setLabel('\u200B')
										.setStyle(`${supst[Args.user][33]}`)
										.setDisabled(`${supb[Args.user][33]}`)
										.setEmoji(`${supe[Args.user][33]}`),
									
										new MessageButton()
										.setCustomId(`${sups[Args.user][34]}`)
										.setLabel('\u200B')
										.setStyle(`${supst[Args.user][34]}`)
										.setDisabled(`${supb[Args.user][34]}`)
										.setEmoji(`${supe[Args.user][34]}`),
									
										new MessageButton()
										.setCustomId(`${sups[Args.user][35]}`)
										.setLabel('\u200B')
										.setStyle(`${supst[Args.user][35]}`)
										.setDisabled(`${supb[Args.user][35]}`)
										.setEmoji(`${supe[Args.user][35]}`),
									
										new MessageButton()
										.setCustomId(`${sups[Args.user][36]}`)
										.setLabel('\u200B')
										.setStyle(`${supst[Args.user][36]}`)
										.setDisabled(`${supb[Args.user][36]}`)
										.setEmoji(`${supe[Args.user][36]}`),
									
										new MessageButton()
										.setCustomId(`${sups[Args.user][37]}`)
										.setLabel('\u200B')
										.setStyle(`${supst[Args.user][37]}`)
										.setDisabled(`${supb[Args.user][37]}`)
										.setEmoji(`${supe[Args.user][37]}`),
									
										new MessageButton()
										.setCustomId(`${sups[Args.user][38]}`)
										.setLabel('\u200B')
										.setStyle(`${supst[Args.user][38]}`)
										.setDisabled(`${supb[Args.user][38]}`)
										.setEmoji(`${supe[Args.user][38]}`),
									
										new MessageButton()
										.setCustomId(`${sups[Args.user][39]}`)
										.setLabel('\u200B')
										.setStyle(`${supst[Args.user][39]}`)
										.setDisabled(`${supb[Args.user][39]}`)
										.setEmoji(`${supe[Args.user][39]}`),
									
										new MessageButton()
										.setCustomId(`${sups[Args.user][40]}`)
										.setLabel('\u200B')
										.setStyle(`${supst[Args.user][40]}`)
										.setDisabled(`${supb[Args.user][40]}`)
										.setEmoji(`${supe[Args.user][40]}`),
									
										new MessageButton()
										.setCustomId(`${sups[Args.user][41]}`)
										.setLabel('\u200B')
										.setStyle(`${supst[Args.user][41]}`)
										.setDisabled(`${supb[Args.user][41]}`)
										.setEmoji(`${supe[Args.user][41]}`),
									
										new MessageButton()
										.setCustomId(`${sups[Args.user][42]}`)
										.setLabel('\u200B')
										.setStyle(`${supst[Args.user][42]}`)
										.setDisabled(`${supb[Args.user][42]}`)
										.setEmoji(`${supe[Args.user][42]}`),
									
										new MessageButton()
										.setCustomId(`${sups[Args.user][43]}`)
										.setLabel('\u200B')
										.setStyle(`${supst[Args.user][43]}`)
										.setDisabled(`${supb[Args.user][43]}`)
										.setEmoji(`${supe[Args.user][43]}`),
									
										new MessageButton()
										.setCustomId(`${sups[Args.user][44]}`)
										.setLabel('\u200B')
										.setStyle(`${supst[Args.user][44]}`)
										.setDisabled(`${supb[Args.user][44]}`)
										.setEmoji(`${supe[Args.user][44]}`),
									
										new MessageButton()
										.setCustomId(`${sups[Args.user][45]}`)
										.setLabel('\u200B')
										.setStyle(`${supst[Args.user][45]}`)
										.setDisabled(`${supb[Args.user][45]}`)
										.setEmoji(`${supe[Args.user][45]}`),
									
										new MessageButton()
										.setCustomId(`${sups[Args.user][46]}`)
										.setLabel('\u200B')
										.setStyle(`${supst[Args.user][46]}`)
										.setDisabled(`${supb[Args.user][46]}`)
										.setEmoji(`${supe[Args.user][46]}`),
									
										new MessageButton()
										.setCustomId(`${sups[Args.user][47]}`)
										.setLabel('\u200B')
										.setStyle(`${supst[Args.user][47]}`)
										.setDisabled(`${supb[Args.user][47]}`)
										.setEmoji(`${supe[Args.user][47]}`),
									
										new MessageButton()
										.setCustomId(`${sups[Args.user][48]}`)
										.setLabel('\u200B')
										.setStyle(`${supst[Args.user][48]}`)
										.setDisabled(`${supb[Args.user][48]}`)
										.setEmoji(`${supe[Args.user][48]}`),
									
										new MessageButton()
										.setCustomId(`${sups[Args.user][49]}`)
										.setLabel('\u200B')
										.setStyle(`${supst[Args.user][49]}`)
										.setDisabled(`${supb[Args.user][49]}`)
										.setEmoji(`${supe[Args.user][49]}`)
									
									]
									if (nob[Args.user] == 0) {
										crbe = new MessageEmbed()
											.setColor('#00FF00')
											.setTitle(`:tada: You won this game of UNO!`);
										klmbutton.editReply({ embeds: [crbe], components: [], ephemeral: true, fetchReply: true });
										const tagi1 = await Tags.findOne({ where: { id: aid[Args.user] } });
										if (tagi1) {
											if (party_limit == 0) {
												tagi1.increment({ 'partygamescore': 30 });
											} else {
												temppartycheck = tagi1.get('partygamescorewlim');
												if (temppartycheck <= party_limit_value) {
													tagi1.increment({ 'partygamescore': 30 });
													tagi1.increment({ 'partygamescorewlim': 30 });

												}
											}
										}
										nobe[Args.user] = `:tada: Winner`;
										thread.delete();
										return winc(m);


									}
									else if (nob[Args.user] <= 5) {
										crb1[Args.user] = new MessageActionRow().addComponents(imp[Args.user].slice(0, nob[Args.user]));


										klmbutton.editReply({ embeds: [crbe], components: [crb1[Args.user], centauri], ephemeral: true, fetchReply: true });


									} else if (nob[Args.user] > 5 && nob[Args.user] <= 10) {

										crb1[Args.user] = new MessageActionRow().addComponents(imp[Args.user].slice(0, 5));

										crb2[Args.user] = new MessageActionRow()
											.addComponents(imp[Args.user].slice(5, nob[Args.user]));
										klmbutton.editReply({ embeds: [crbe], components: [crb1[Args.user], crb2[Args.user], centauri], ephemeral: true, fetchReply: true });
									} else if (nob[Args.user] > 10 && nob[Args.user] <= 15) {

										crb1[Args.user] = new MessageActionRow().addComponents(imp[Args.user].slice(0, 5));
										crb2[Args.user] = new MessageActionRow()
											.addComponents(imp[Args.user].slice(5, 10));
										crb3[Args.user] = new MessageActionRow()
											.addComponents(imp[Args.user].slice(10, nob[Args.user]));

										klmbutton.editReply({ embeds: [crbe], components: [crb1[Args.user], crb2[Args.user], crb3[Args.user], centauri], ephemeral: true, fetchReply: true });
									} else if (nob[Args.user] > 15 && nob[Args.user] <= 20) {

										crb1[Args.user] = new MessageActionRow().addComponents(imp[Args.user].slice(0, 5));
										crb2[Args.user] = new MessageActionRow()
											.addComponents(imp[Args.user].slice(5, 10));
										crb3[Args.user] = new MessageActionRow()
											.addComponents(imp[Args.user].slice(10, 15));
										crb4[Args.user] = new MessageActionRow()
											.addComponents(imp[Args.user].slice(15, nob[Args.user]));

										klmbutton.editReply({ embeds: [crbe], components: [crb1[Args.user], crb2[Args.user], crb3[Args.user], crb4[Args.user], centauri], ephemeral: true, fetchReply: true });
									}



									topimage = topcard.image;

									roundno = roundno + 1;

									if (lbf == 1 && Args.user == a.length - 1) {
										Args.user = 0;
									} else if (lbf == -1 && Args.user == 0) {
										Args.user = a.length - 1;
									} else {
										Args.user = Args.user + lbf;
									}
									Args.userid = aid[Args.user];
									for (sil = 0; sil <= a.length; sil++) {
										cpa[sil] = a[sil];
									}
									cpa[Args.user] = `__${a[Args.user]}__`;
									lastbutton.deferUpdate();

								} else {
									checking = cards[`${lastbutton.customId}`];
									car = cards.filter(card => card.sn == `${lastbutton.customId}`);

								//	console.log(ran);
								//	console.log(car);
								/////	console.log(checking);
								//	console.log(topcard);
									if (neutr == 0 && cruelty[Args.user] != 0) {
										if (car[0].value == 'Wild Draw Four' || car[0].value == 'Wild') {
											if (car[0].value == 'Wild Draw Four') {
												neutr = neutr + 4;
											}
											if (`${sups[Args.user][0]}` == `${lastbutton.customId}`) {
												jk = 0;
											} else if (`${sups[Args.user][1]}` == `${lastbutton.customId}`) {
												jk = 1;
											} else if (`${sups[Args.user][2]}` == `${lastbutton.customId}`) {
												jk = 2;
											} else if (`${sups[Args.user][3]}` == `${lastbutton.customId}`) {
												jk = 3;
											} else if (`${sups[Args.user][4]}` == `${lastbutton.customId}`) {
												jk = 4;
											} else if (`${sups[Args.user][5]}` == `${lastbutton.customId}`) {
												jk = 5;
											} else if (`${sups[Args.user][6]}` == `${lastbutton.customId}`) {
												jk = 6;
											} else if (`${sups[Args.user][7]}` == `${lastbutton.customId}`) {
												jk = 7;
											} else if (`${sups[Args.user][8]}` == `${lastbutton.customId}`) {
												jk = 8;
											} else if (`${sups[Args.user][9]}` == `${lastbutton.customId}`) {
												jk = 9;
											} else if (`${sups[Args.user][10]}` == `${lastbutton.customId}`) {
												jk = 10;
											} else if (`${sups[Args.user][11]}` == `${lastbutton.customId}`) {
												jk = 11;
											} else if (`${sups[Args.user][12]}` == `${lastbutton.customId}`) {
												jk = 12;
											} else if (`${sups[Args.user][13]}` == `${lastbutton.customId}`) {
												jk = 13;
											} else if (`${sups[Args.user][14]}` == `${lastbutton.customId}`) {
												jk = 14;
											} else if (`${sups[Args.user][15]}` == `${lastbutton.customId}`) {
												jk = 15;
											} else if (`${sups[Args.user][16]}` == `${lastbutton.customId}`) {
												jk = 16;
											} else if (`${sups[Args.user][17]}` == `${lastbutton.customId}`) {
												jk = 17;
											} else if (`${sups[Args.user][18]}` == `${lastbutton.customId}`) {
												jk = 18;
											} else if (`${sups[Args.user][19]}` == `${lastbutton.customId}`) {
												jk = 19;
											}
											console.log(jk)

											if (disp.length == 8) {
												disp.splice(0, 1);
												disp.push(`**${a[Args.user]}** played ${supr[Args.user][jk]}!`);

											}
											else {
												disp.push(`**${a[Args.user]}** played ${supr[Args.user][jk]}!`);


											}

											imp[Args.user].splice(jk, 1);
											sups[Args.user].splice(jk, 1);
											supe[Args.user].splice(jk, 1);
											supr[Args.user].splice(jk, 1);
											supc[Args.user].splice(jk, 1);
											supv[Args.user].splice(jk, 1);
											nob[Args.user] = nob[Args.user] - 1;
											nobe[Args.user] = "<:UnoSlot:895311124399013888>".repeat(nob[Args.user]);
											nr = 0;
											ny = 0;
											ng = 0;
											nb = 0;
											for (shungi = 0; shungi < nob[Args.user]; shungi++) {
												if (supc[Args.user][shungi] == 'red') {
													nr = nr + 1;
												} else if (supc[Args.user][shungi] == 'yellow') {
													ny = ny + 1;
												} else if (supc[Args.user][shungi] == 'green') {
													ng = ng + 1;
												} else if (supc[Args.user][shungi] == 'blue') {
													nb = nb + 1;
												}
											}
											intrkallu = new MessageEmbed()
												.setColor('#36393F')
												.setTitle(`Your Hand`)
												.addFields(

													{ name: 'Red', value: `${nr} cards`, inline: true },
													{ name: 'Yellow', value: `${ny} cards`, inline: true },
													{ name: 'Green', value: `${ng} cards`, inline: true },
													{ name: 'Blue', value: `${nb} cards`, inline: true },
												);

											intrbut = [
												new MessageButton()
													.setCustomId(`red`)
													.setLabel(`Red`)
													.setStyle(`SECONDARY`)

												,
												new MessageButton()
													.setCustomId(`yellow`)
													.setLabel(`Yellow`)
													.setStyle(`SECONDARY`),

												new MessageButton()
													.setCustomId(`green`)
													.setLabel(`Green`)
													.setStyle(`SECONDARY`)
												,
												new MessageButton()
													.setCustomId(`blue`)
													.setLabel(`Blue`)
													.setStyle(`SECONDARY`)]
											intrcurb = new MessageActionRow().addComponents(intrbut);

											klmbutton.editReply({ embeds: [intrkallu], components: [intrcurb], ephemeral: true, fetchReply: true });



											lastbutton.deferUpdate();


										}
										else if (topcard.color == car[0].color || topcard.value == car[0].value || topcard.name == car[0].name || car[0].value == 'Wild Reverse' || topcard.value == 'Wild Reverse') {

											if (`${sups[Args.user][0]}` == `${lastbutton.customId}`) {
												jk = 0;
											} else if (`${sups[Args.user][1]}` == `${lastbutton.customId}`) {
												jk = 1;
											} else if (`${sups[Args.user][2]}` == `${lastbutton.customId}`) {
												jk = 2;
											} else if (`${sups[Args.user][3]}` == `${lastbutton.customId}`) {
												jk = 3;
											} else if (`${sups[Args.user][4]}` == `${lastbutton.customId}`) {
												jk = 4;
											} else if (`${sups[Args.user][5]}` == `${lastbutton.customId}`) {
												jk = 5;
											} else if (`${sups[Args.user][6]}` == `${lastbutton.customId}`) {
												jk = 6;
											} else if (`${sups[Args.user][7]}` == `${lastbutton.customId}`) {
												jk = 7;
											} else if (`${sups[Args.user][8]}` == `${lastbutton.customId}`) {
												jk = 8;
											} else if (`${sups[Args.user][9]}` == `${lastbutton.customId}`) {
												jk = 9;
											} else if (`${sups[Args.user][10]}` == `${lastbutton.customId}`) {
												jk = 10;
											} else if (`${sups[Args.user][11]}` == `${lastbutton.customId}`) {
												jk = 11;
											} else if (`${sups[Args.user][12]}` == `${lastbutton.customId}`) {
												jk = 12;
											} else if (`${sups[Args.user][13]}` == `${lastbutton.customId}`) {
												jk = 13;
											} else if (`${sups[Args.user][14]}` == `${lastbutton.customId}`) {
												jk = 14;
											} else if (`${sups[Args.user][15]}` == `${lastbutton.customId}`) {
												jk = 15;
											} else if (`${sups[Args.user][16]}` == `${lastbutton.customId}`) {
												jk = 16;
											} else if (`${sups[Args.user][17]}` == `${lastbutton.customId}`) {
												jk = 17;
											} else if (`${sups[Args.user][18]}` == `${lastbutton.customId}`) {
												jk = 18;
											} else if (`${sups[Args.user][19]}` == `${lastbutton.customId}`) {
												jk = 19;
											}
											console.log(jk)

											if (disp.length == 8) {
												disp.splice(0, 1);
												disp.push(`**${a[Args.user]}** played ${supr[Args.user][jk]}!`);

											}
											else {
												disp.push(`**${a[Args.user]}** played ${supr[Args.user][jk]}!`);


											}

											imp[Args.user].splice(jk, 1);
											supe[Args.user].splice(jk, 1);
											sups[Args.user].splice(jk, 1);
											supr[Args.user].splice(jk, 1);
											supc[Args.user].splice(jk, 1);
											supv[Args.user].splice(jk, 1);
											nob[Args.user] = nob[Args.user] - 1;
											nobe[Args.user] = "<:UnoSlot:895311124399013888>".repeat(nob[Args.user]);
											imp[Args.user] = [new MessageButton()
    .setCustomId(`${sups[Args.user][0]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][0]}`)
    .setDisabled(`${supb[Args.user][0]}`)
    .setEmoji(`${supe[Args.user][0]}`)
    ,
new MessageButton()
    .setCustomId(`${sups[Args.user][1]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][1]}`)
    .setDisabled(`${supb[Args.user][1]}`)
    .setEmoji(`${supe[Args.user][1]}`)
    ,
new MessageButton()
    .setCustomId(`${sups[Args.user][2]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][2]}`)
    .setDisabled(`${supb[Args.user][2]}`)
    .setEmoji(`${supe[Args.user][2]}`),
new MessageButton()
    .setCustomId(`${sups[Args.user][3]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][3]}`)
    .setDisabled(`${supb[Args.user][3]}`)
    .setEmoji(`${supe[Args.user][3]}`)
    ,
new MessageButton()
    .setCustomId(`${sups[Args.user][4]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][4]}`)
    .setDisabled(`${supb[Args.user][4]}`)
    .setEmoji(`${supe[Args.user][4]}`),


new MessageButton()
    .setCustomId(`${sups[Args.user][5]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][5]}`)
    .setDisabled(`${supb[Args.user][5]}`)
    .setEmoji(`${supe[Args.user][5]}`)
    ,
new MessageButton()
    .setCustomId(`${sups[Args.user][6]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][6]}`)
    .setDisabled(`${supb[Args.user][6]}`)
    .setEmoji(`${supe[Args.user][6]}`),
new MessageButton()
    .setCustomId(`${sups[Args.user][7]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][7]}`)
    .setDisabled(`${supb[Args.user][7]}`)
    .setEmoji(`${supe[Args.user][7]}`)
    ,
new MessageButton()
    .setCustomId(`${sups[Args.user][8]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][8]}`)
    .setDisabled(`${supb[Args.user][8]}`)
    .setEmoji(`${supe[Args.user][8]}`)
    ,
new MessageButton()
    .setCustomId(`${sups[Args.user][9]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][9]}`)
    .setDisabled(`${supb[Args.user][9]}`)
    .setEmoji(`${supe[Args.user][9]}`),
new MessageButton()
    .setCustomId(`${sups[Args.user][10]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][10]}`)
    .setDisabled(`${supb[Args.user][10]}`)
    .setEmoji(`${supe[Args.user][10]}`)
    ,
new MessageButton()
    .setCustomId(`${sups[Args.user][11]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][11]}`)
    .setDisabled(`${supb[Args.user][11]}`)
    .setEmoji(`${supe[Args.user][11]}`),


new MessageButton()
    .setCustomId(`${sups[Args.user][12]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][12]}`)
    .setDisabled(`${supb[Args.user][12]}`)
    .setEmoji(`${supe[Args.user][12]}`)
    ,
new MessageButton()
    .setCustomId(`${sups[Args.user][13]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][13]}`)
    .setDisabled(`${supb[Args.user][13]}`)
    .setEmoji(`${supe[Args.user][13]}`),
new MessageButton()
    .setCustomId(`${sups[Args.user][14]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][14]}`)
    .setDisabled(`${supb[Args.user][14]}`)
    .setEmoji(`${supe[Args.user][14]}`)
    ,
new MessageButton()
    .setCustomId(`${sups[Args.user][15]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][15]}`)
    .setDisabled(`${supb[Args.user][15]}`)
    .setEmoji(`${supe[Args.user][15]}`)
    ,
new MessageButton()
    .setCustomId(`${sups[Args.user][16]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][16]}`)
    .setDisabled(`${supb[Args.user][16]}`)
    .setEmoji(`${supe[Args.user][16]}`),
new MessageButton()
    .setCustomId(`${sups[Args.user][17]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][17]}`)
    .setDisabled(`${supb[Args.user][17]}`)
    .setEmoji(`${supe[Args.user][17]}`)
    ,
new MessageButton()
    .setCustomId(`${sups[Args.user][18]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][18]}`)
    .setDisabled(`${supb[Args.user][18]}`)
    .setEmoji(`${supe[Args.user][18]}`),


new MessageButton()
    .setCustomId(`${sups[Args.user][19]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][19]}`)
    .setDisabled(`${supb[Args.user][19]}`)
    .setEmoji(`${supe[Args.user][19]}`),

    new MessageButton()
    .setCustomId(`${sups[Args.user][20]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][20]}`)
    .setDisabled(`${supb[Args.user][20]}`)
    .setEmoji(`${supe[Args.user][20]}`),

    new MessageButton()
    .setCustomId(`${sups[Args.user][21]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][21]}`)
    .setDisabled(`${supb[Args.user][21]}`)
    .setEmoji(`${supe[Args.user][21]}`),

    new MessageButton()
    .setCustomId(`${sups[Args.user][22]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][22]}`)
    .setDisabled(`${supb[Args.user][22]}`)
    .setEmoji(`${supe[Args.user][22]}`),

    new MessageButton()
    .setCustomId(`${sups[Args.user][23]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][23]}`)
    .setDisabled(`${supb[Args.user][23]}`)
    .setEmoji(`${supe[Args.user][23]}`),

    new MessageButton()
    .setCustomId(`${sups[Args.user][24]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][24]}`)
    .setDisabled(`${supb[Args.user][24]}`)
    .setEmoji(`${supe[Args.user][24]}`),,

    new MessageButton()
    .setCustomId(`${sups[Args.user][25]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][25]}`)
    .setDisabled(`${supb[Args.user][25]}`)
    .setEmoji(`${supe[Args.user][25]}`),

    new MessageButton()
    .setCustomId(`${sups[Args.user][26]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][26]}`)
    .setDisabled(`${supb[Args.user][26]}`)
    .setEmoji(`${supe[Args.user][26]}`),

    new MessageButton()
    .setCustomId(`${sups[Args.user][27]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][27]}`)
    .setDisabled(`${supb[Args.user][27]}`)
    .setEmoji(`${supe[Args.user][27]}`),

    new MessageButton()
    .setCustomId(`${sups[Args.user][28]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][28]}`)
    .setDisabled(`${supb[Args.user][28]}`)
    .setEmoji(`${supe[Args.user][28]}`),

    new MessageButton()
    .setCustomId(`${sups[Args.user][29]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][29]}`)
    .setDisabled(`${supb[Args.user][29]}`)
    .setEmoji(`${supe[Args.user][29]}`),

    new MessageButton()
    .setCustomId(`${sups[Args.user][30]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][30]}`)
    .setDisabled(`${supb[Args.user][30]}`)
    .setEmoji(`${supe[Args.user][30]}`),

    new MessageButton()
    .setCustomId(`${sups[Args.user][31]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][31]}`)
    .setDisabled(`${supb[Args.user][31]}`)
    .setEmoji(`${supe[Args.user][31]}`),

    new MessageButton()
    .setCustomId(`${sups[Args.user][32]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][32]}`)
    .setDisabled(`${supb[Args.user][32]}`)
    .setEmoji(`${supe[Args.user][32]}`),

    ,

    new MessageButton()
    .setCustomId(`${sups[Args.user][33]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][33]}`)
    .setDisabled(`${supb[Args.user][33]}`)
    .setEmoji(`${supe[Args.user][33]}`),

    new MessageButton()
    .setCustomId(`${sups[Args.user][34]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][34]}`)
    .setDisabled(`${supb[Args.user][34]}`)
    .setEmoji(`${supe[Args.user][34]}`),

    new MessageButton()
    .setCustomId(`${sups[Args.user][35]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][35]}`)
    .setDisabled(`${supb[Args.user][35]}`)
    .setEmoji(`${supe[Args.user][35]}`),

    new MessageButton()
    .setCustomId(`${sups[Args.user][36]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][36]}`)
    .setDisabled(`${supb[Args.user][36]}`)
    .setEmoji(`${supe[Args.user][36]}`),

    new MessageButton()
    .setCustomId(`${sups[Args.user][37]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][37]}`)
    .setDisabled(`${supb[Args.user][37]}`)
    .setEmoji(`${supe[Args.user][37]}`),

    new MessageButton()
    .setCustomId(`${sups[Args.user][38]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][38]}`)
    .setDisabled(`${supb[Args.user][38]}`)
    .setEmoji(`${supe[Args.user][38]}`),

    new MessageButton()
    .setCustomId(`${sups[Args.user][39]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][39]}`)
    .setDisabled(`${supb[Args.user][39]}`)
    .setEmoji(`${supe[Args.user][39]}`),

    new MessageButton()
    .setCustomId(`${sups[Args.user][40]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][40]}`)
    .setDisabled(`${supb[Args.user][40]}`)
    .setEmoji(`${supe[Args.user][40]}`),

    new MessageButton()
    .setCustomId(`${sups[Args.user][41]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][41]}`)
    .setDisabled(`${supb[Args.user][41]}`)
    .setEmoji(`${supe[Args.user][41]}`),

    new MessageButton()
    .setCustomId(`${sups[Args.user][42]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][42]}`)
    .setDisabled(`${supb[Args.user][42]}`)
    .setEmoji(`${supe[Args.user][42]}`),

    new MessageButton()
    .setCustomId(`${sups[Args.user][43]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][43]}`)
    .setDisabled(`${supb[Args.user][43]}`)
    .setEmoji(`${supe[Args.user][43]}`),

    new MessageButton()
    .setCustomId(`${sups[Args.user][44]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][44]}`)
    .setDisabled(`${supb[Args.user][44]}`)
    .setEmoji(`${supe[Args.user][44]}`),

    new MessageButton()
    .setCustomId(`${sups[Args.user][45]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][45]}`)
    .setDisabled(`${supb[Args.user][45]}`)
    .setEmoji(`${supe[Args.user][45]}`),

    new MessageButton()
    .setCustomId(`${sups[Args.user][46]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][46]}`)
    .setDisabled(`${supb[Args.user][46]}`)
    .setEmoji(`${supe[Args.user][46]}`),

    new MessageButton()
    .setCustomId(`${sups[Args.user][47]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][47]}`)
    .setDisabled(`${supb[Args.user][47]}`)
    .setEmoji(`${supe[Args.user][47]}`),

    new MessageButton()
    .setCustomId(`${sups[Args.user][48]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][48]}`)
    .setDisabled(`${supb[Args.user][48]}`)
    .setEmoji(`${supe[Args.user][48]}`),

    new MessageButton()
    .setCustomId(`${sups[Args.user][49]}`)
    .setLabel('\u200B')
    .setStyle(`${supst[Args.user][49]}`)
    .setDisabled(`${supb[Args.user][49]}`)
    .setEmoji(`${supe[Args.user][49]}`)

]
											///////////////////////////////////////
											if (nob[Args.user] == 0) {
												crbe = new MessageEmbed()
													.setColor('#00FF00')
													.setTitle(`:tada: You won this game of UNO!`);
												klmbutton.editReply({ embeds: [crbe], components: [], ephemeral: true, fetchReply: true });
												nobe[Args.user] = `:tada: Winner`;
												const tagi1 = await Tags.findOne({ where: { id: aid[Args.user] } });
												if (tagi1) {
													if (party_limit == 0) {
														tagi1.increment({ 'partygamescore': 30 });
													} else {
														temppartycheck = tagi1.get('partygamescorewlim');
														if (temppartycheck <= party_limit_value) {
															tagi1.increment({ 'partygamescore': 30 });
															tagi1.increment({ 'partygamescorewlim': 30 });

														}
													}
												}
												thread.delete();
												return winc(m);
											}
											else if (nob[Args.user] <= 5) {
												crb1[Args.user] = new MessageActionRow().addComponents(imp[Args.user].slice(0, nob[Args.user]));


												klmbutton.editReply({ components: [crb1[Args.user], centauri], ephemeral: true, fetchReply: true });


											} else if (nob[Args.user] > 5 && nob[Args.user] <= 10) {

												crb1[Args.user] = new MessageActionRow().addComponents(imp[Args.user].slice(0, 5));

												crb2[Args.user] = new MessageActionRow()
													.addComponents(imp[Args.user].slice(5, nob[Args.user]));
												klmbutton.editReply({ components: [crb1[Args.user], crb2[Args.user], centauri], ephemeral: true, fetchReply: true });
											} else if (nob[Args.user] > 10 && nob[Args.user] <= 15) {

												crb1[Args.user] = new MessageActionRow().addComponents(imp[Args.user].slice(0, 5));
												crb2[Args.user] = new MessageActionRow()
													.addComponents(imp[Args.user].slice(5, 10));
												crb3[Args.user] = new MessageActionRow()
													.addComponents(imp[Args.user].slice(10, nob[Args.user]));

												klmbutton.editReply({ components: [crb1[Args.user], crb2[Args.user], crb3[Args.user], centauri], ephemeral: true, fetchReply: true });
											} else if (nob[Args.user] > 15 && nob[Args.user] <= 20) {

												crb1[Args.user] = new MessageActionRow().addComponents(imp[Args.user].slice(0, 5));
												crb2[Args.user] = new MessageActionRow()
													.addComponents(imp[Args.user].slice(5, 10));
												crb3[Args.user] = new MessageActionRow()
													.addComponents(imp[Args.user].slice(10, 15));
												crb4[Args.user] = new MessageActionRow()
													.addComponents(imp[Args.user].slice(15, nob[Args.user]));

												klmbutton.editReply({ components: [crb1[Args.user], crb2[Args.user], crb3[Args.user], crb4[Args.user], centauri], ephemeral: true, fetchReply: true });
											}

											topcard = car[0];
											topimage = topcard.image;
											if (topcard.value == 'Wild Draw Four') {
												if (stem == ':red_circle:') {
												neutr = 4;}else{
													neutr = neutr+ 4;
												}
											} else if (topcard.value == 'Draw Two') {if (stem == ':red_circle:') {
												neutr = 2;}else{
													neutr = neutr+ 2;
												}
												
											} else { neutr = 0; }
											roundno = roundno + 1;
											if (topcard.value == 'Reverse' || topcard.value == 'Wild Reverse') {
												if (paem == ':green_circle:') {
													lbf = lbf * -1;
												}
												//lbf = lbf * -1;
											}
											if (topcard.value == 'Skip') {
												if (lbf == 1 && Args.user == a.length - 1) {
													Args.user = 0;
												} else if (lbf == -1 && Args.user == 0) {
													Args.user = a.length - 1;
												} else {
													Args.user = Args.user + lbf;
												}
												if (disp.length == 8) {
													disp.splice(0, 1);
													disp.push(`**${a[Args.user]}** was skipped!`);

												}
												else {
													disp.push(`**${a[Args.user]}** was skipped!`);


												}
											}  /*else if(topcard.value == 'Skip'){
										lbf = 1;
										Args.user = Args.user+1;
										Args.userid = aid[Args.user];
									}*/


											if (lbf == 1 && Args.user == a.length - 1) {
												Args.user = 0;
											} else if (lbf == -1 && Args.user == 0) {
												Args.user = a.length - 1;
											} else {
												Args.user = Args.user + lbf;
											}
											Args.userid = aid[Args.user];
											for (sil = 0; sil <= a.length; sil++) {
												cpa[sil] = a[sil];
											}
											cpa[Args.user] = `__${a[Args.user]}__`;

											lastbutton.deferUpdate();




										}
										else {
											notyt = new MessageEmbed()
												.setColor('#36393F')
												.setTitle(':red_circle: Not this one');
											lastbutton.reply({ embeds: [notyt], ephemeral: true });

										}
									} else if (neutr > 0 && cruelty[Args.user] != 0) {
										if (car[0].value == 'Wild Draw Four' || car[0].value == 'Wild') {
											if (`${sups[Args.user][0]}` == `${lastbutton.customId}`) {
												jk = 0;
											} else if (`${sups[Args.user][1]}` == `${lastbutton.customId}`) {
												jk = 1;
											} else if (`${sups[Args.user][2]}` == `${lastbutton.customId}`) {
												jk = 2;
											} else if (`${sups[Args.user][3]}` == `${lastbutton.customId}`) {
												jk = 3;
											} else if (`${sups[Args.user][4]}` == `${lastbutton.customId}`) {
												jk = 4;
											} else if (`${sups[Args.user][5]}` == `${lastbutton.customId}`) {
												jk = 5;
											} else if (`${sups[Args.user][6]}` == `${lastbutton.customId}`) {
												jk = 6;
											} else if (`${sups[Args.user][7]}` == `${lastbutton.customId}`) {
												jk = 7;
											} else if (`${sups[Args.user][8]}` == `${lastbutton.customId}`) {
												jk = 8;
											} else if (`${sups[Args.user][9]}` == `${lastbutton.customId}`) {
												jk = 9;
											} else if (`${sups[Args.user][10]}` == `${lastbutton.customId}`) {
												jk = 10;
											} else if (`${sups[Args.user][11]}` == `${lastbutton.customId}`) {
												jk = 11;
											} else if (`${sups[Args.user][12]}` == `${lastbutton.customId}`) {
												jk = 12;
											} else if (`${sups[Args.user][13]}` == `${lastbutton.customId}`) {
												jk = 13;
											} else if (`${sups[Args.user][14]}` == `${lastbutton.customId}`) {
												jk = 14;
											} else if (`${sups[Args.user][15]}` == `${lastbutton.customId}`) {
												jk = 15;
											} else if (`${sups[Args.user][16]}` == `${lastbutton.customId}`) {
												jk = 16;
											} else if (`${sups[Args.user][17]}` == `${lastbutton.customId}`) {
												jk = 17;
											} else if (`${sups[Args.user][18]}` == `${lastbutton.customId}`) {
												jk = 18;
											} else if (`${sups[Args.user][19]}` == `${lastbutton.customId}`) {
												jk = 19;
											}
											console.log(jk)

											if (disp.length == 8) {
												disp.splice(0, 1);
												disp.push(`**${a[Args.user]}** played ${supr[Args.user][jk]}!`);

											}
											else {
												disp.push(`**${a[Args.user]}** played ${supr[Args.user][jk]}!`);


											}

											imp[Args.user].splice(jk, 1);
											supe[Args.user].splice(jk, 1);
											sups[Args.user].splice(jk, 1);
											supr[Args.user].splice(jk, 1);
											supc[Args.user].splice(jk, 1);
											supv[Args.user].splice(jk, 1);
											nob[Args.user] = nob[Args.user] - 1;
											nobe[Args.user] = "<:UnoSlot:895311124399013888>".repeat(nob[Args.user]);
											nr = 0;
											ny = 0;
											ng = 0;
											nb = 0;
											for (shungi = 0; shungi < nob[Args.user]; shungi++) {
												if (supc[Args.user][shungi] == 'red') {
													nr = nr + 1;
												} else if (supc[Args.user][shungi] == 'yellow') {
													ny = ny + 1;
												} else if (supc[Args.user][shungi] == 'green') {
													ng = ng + 1;
												} else if (supc[Args.user][shungi] == 'blue') {
													nb = nb + 1;
												}
											}
											intrkallu = new MessageEmbed()
												.setColor('#36393F')
												.setTitle(`Your Hand`)
												.addFields(

													{ name: 'Red', value: `${nr} cards`, inline: true },
													{ name: 'Yellow', value: `${ny} cards`, inline: true },
													{ name: 'Green', value: `${ng} cards`, inline: true },
													{ name: 'Blue', value: `${nb} cards`, inline: true },
												);

											intrbut = [
												new MessageButton()
													.setCustomId(`red`)
													.setLabel(`Red`)
													.setStyle(`SECONDARY`)

												,
												new MessageButton()
													.setCustomId(`yellow`)
													.setLabel(`Yellow`)
													.setStyle(`SECONDARY`),

												new MessageButton()
													.setCustomId(`green`)
													.setLabel(`Green`)
													.setStyle(`SECONDARY`)
												,
												new MessageButton()
													.setCustomId(`blue`)
													.setLabel(`Blue`)
													.setStyle(`SECONDARY`)]
											intrcurb = new MessageActionRow().addComponents(intrbut);

											klmbutton.editReply({ embeds: [intrkallu], components: [intrcurb], ephemeral: true, fetchReply: true });




											lastbutton.deferUpdate();

										}
										else if ((topcard.value == car[0].value || car[0].value == 'Wild Reverse') && car[0].value != 0) {

											if (`${sups[Args.user][0]}` == `${lastbutton.customId}`) {
												jk = 0;
											} else if (`${sups[Args.user][1]}` == `${lastbutton.customId}`) {
												jk = 1;
											} else if (`${sups[Args.user][2]}` == `${lastbutton.customId}`) {
												jk = 2;
											} else if (`${sups[Args.user][3]}` == `${lastbutton.customId}`) {
												jk = 3;
											} else if (`${sups[Args.user][4]}` == `${lastbutton.customId}`) {
												jk = 4;
											} else if (`${sups[Args.user][5]}` == `${lastbutton.customId}`) {
												jk = 5;
											} else if (`${sups[Args.user][6]}` == `${lastbutton.customId}`) {
												jk = 6;
											} else if (`${sups[Args.user][7]}` == `${lastbutton.customId}`) {
												jk = 7;
											} else if (`${sups[Args.user][8]}` == `${lastbutton.customId}`) {
												jk = 8;
											} else if (`${sups[Args.user][9]}` == `${lastbutton.customId}`) {
												jk = 9;
											} else if (`${sups[Args.user][10]}` == `${lastbutton.customId}`) {
												jk = 10;
											} else if (`${sups[Args.user][11]}` == `${lastbutton.customId}`) {
												jk = 11;
											} else if (`${sups[Args.user][12]}` == `${lastbutton.customId}`) {
												jk = 12;
											} else if (`${sups[Args.user][13]}` == `${lastbutton.customId}`) {
												jk = 13;
											} else if (`${sups[Args.user][14]}` == `${lastbutton.customId}`) {
												jk = 14;
											} else if (`${sups[Args.user][15]}` == `${lastbutton.customId}`) {
												jk = 15;
											} else if (`${sups[Args.user][16]}` == `${lastbutton.customId}`) {
												jk = 16;
											} else if (`${sups[Args.user][17]}` == `${lastbutton.customId}`) {
												jk = 17;
											} else if (`${sups[Args.user][18]}` == `${lastbutton.customId}`) {
												jk = 18;
											} else if (`${sups[Args.user][19]}` == `${lastbutton.customId}`) {
												jk = 19;
											}
											console.log(jk)

											if (disp.length == 8) {
												disp.splice(0, 1);
												disp.push(`**${a[Args.user]}** played ${supr[Args.user][jk]}!`);

											}
											else {
												disp.push(`**${a[Args.user]}** played ${supr[Args.user][jk]}!`);


											}

											imp[Args.user].splice(jk, 1);
											supe[Args.user].splice(jk, 1);
											sups[Args.user].splice(jk, 1);
											supr[Args.user].splice(jk, 1);
											supc[Args.user].splice(jk, 1);
											supv[Args.user].splice(jk, 1);

											nob[Args.user] = nob[Args.user] - 1;
											nobe[Args.user] = "<:UnoSlot:895311124399013888>".repeat(nob[Args.user]);
											if (nob[Args.user] == 0) {
												crbe = new MessageEmbed()
													.setColor('#00FF00')
													.setTitle(`:tada: You won this game of UNO!`);
												klmbutton.editReply({ embeds: [crbe], components: [], ephemeral: true, fetchReply: true });
												nobe[Args.user] = `:tada: Winner`;
												const tagi1 = await Tags.findOne({ where: { id: aid[Args.user] } });
												if (tagi1) {
													if (party_limit == 0) {
														tagi1.increment({ 'partygamescore': 30 });
													} else {
														temppartycheck = tagi1.get('partygamescorewlim');
														if (temppartycheck <= party_limit_value) {
															tagi1.increment({ 'partygamescore': 30 });
															tagi1.increment({ 'partygamescorewlim': 30 });

														}
													}
												}
												thread.delete();
												return winc(m);

											}
											else if (nob[Args.user] <= 5) {
												crb1[Args.user] = new MessageActionRow().addComponents(imp[Args.user].slice(0, nob[Args.user]));


												klmbutton.editReply({ components: [crb1[Args.user], centauri], ephemeral: true, fetchReply: true });


											} else if (nob[Args.user] > 5 && nob[Args.user] <= 10) {

												crb1[Args.user] = new MessageActionRow().addComponents(imp[Args.user].slice(0, 5));

												crb2[Args.user] = new MessageActionRow()
													.addComponents(imp[Args.user].slice(5, nob[Args.user]));
												klmbutton.editReply({ components: [crb1[Args.user], crb2[Args.user], centauri], ephemeral: true, fetchReply: true });
											} else if (nob[Args.user] > 10 && nob[Args.user] <= 15) {

												crb1[Args.user] = new MessageActionRow().addComponents(imp[Args.user].slice(0, 5));
												crb2[Args.user] = new MessageActionRow()
													.addComponents(imp[Args.user].slice(5, 10));
												crb3[Args.user] = new MessageActionRow()
													.addComponents(imp[Args.user].slice(10, nob[Args.user]));

												klmbutton.editReply({ components: [crb1[Args.user], crb2[Args.user], crb3[Args.user], centauri], ephemeral: true, fetchReply: true });
											} else if (nob[Args.user] > 15 && nob[Args.user] <= 20) {

												crb1[Args.user] = new MessageActionRow().addComponents(imp[Args.user].slice(0, 5));
												crb2[Args.user] = new MessageActionRow()
													.addComponents(imp[Args.user].slice(5, 10));
												crb3[Args.user] = new MessageActionRow()
													.addComponents(imp[Args.user].slice(10, 15));
												crb4[Args.user] = new MessageActionRow()
													.addComponents(imp[Args.user].slice(15, nob[Args.user]));

												klmbutton.editReply({ components: [crb1[Args.user], crb2[Args.user], crb3[Args.user], crb4[Args.user], centauri], ephemeral: true, fetchReply: true });
											}


											topcard = car[0];
											topimage = topcard.image;
											if (topcard.value == 'Wild Draw Four') {
												if (stem == ':red_circle:') {
													neutr = 4;
												}
												else {
													neutr = neutr + 4;
												}
											} else if (topcard.value == 'Draw Two') {
												if (stem == ':red_circle:') {
													neutr = 2;
												} else {
													neutr = neutr + 2;
												}
											}
											roundno = roundno + 1;

											if (topcard.value == 'Reverse' || topcard.value == 'Wild Reverse') {
												if (paem == ':green_circle:') {
													lbf = lbf * -1;
												}
												//lbf = lbf * -1;
											}


											if (lbf == 1 && Args.user == a.length - 1) {
												Args.user = 0;
											} else if (lbf == -1 && Args.user == 0) {
												Args.user = a.length - 1;
											} else {
												Args.user = Args.user + lbf;
											}
											Args.userid = aid[Args.user];
											for (sil = 0; sil <= a.length; sil++) {
												cpa[sil] = a[sil];
											}
											cpa[Args.user] = `__${a[Args.user]}__`;

											lastbutton.deferUpdate();
										}


										else {
											notyt = new MessageEmbed()
												.setColor('#36393F')
												.setTitle(':red_circle: Please draw a card');
											lastbutton.reply({ embeds: [notyt], ephemeral: true });

										}

									} else {
										notyt = new MessageEmbed()
											.setColor('#36393F')
											.setTitle(':red_circle: Please draw a card, You did not sat UNO');
										lastbutton.reply({ embeds: [notyt], ephemeral: true });

									}
								}


							}
							else {
								notyt = new MessageEmbed()
									.setColor('#36393F')
									.setTitle(':red_circle: Not your turn');
								lastbutton.reply({ embeds: [notyt], ephemeral: true });

							}



							if (a.length == 1)
								initial1 = new MessageEmbed()
									.setColor('#36393F')
									.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
									.setDescription(`${disp.join('\n')}`)
									.addFields(
										{ name: `${cpa[0]}`, value: `${nobe[0]}` }
									)

									.setImage(topimage)
									.setFooter('Join the thread to play!');
							else if (a.length == 2)
								initial1 = new MessageEmbed()
									.setColor('#36393F')
									.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
									.setDescription(`${disp.join('\n')}`)
									.addFields(
										{ name: `${cpa[0]}`, value: `${nobe[0]}` },
										{ name: `${cpa[1]}`, value: `${nobe[1]}` }
									)

									.setImage(topimage)
									.setFooter('Join the thread to play!');
							else if (a.length == 3)
								initial1 = new MessageEmbed()
									.setColor('#36393F')
									.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
									.setDescription(`${disp.join('\n')}`)
									.addFields(
										{ name: `${cpa[0]}`, value: `${nobe[0]}` },
										{ name: `${cpa[1]}`, value: `${nobe[1]}` },
										{ name: `${cpa[2]}`, value: `${nobe[2]}` }
									)
									.setImage(topimage)
									.setFooter('Join the thread to play!');
							else if (a.length == 4)
								initial1 = new MessageEmbed()
									.setColor('#36393F')
									.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
									.setDescription(`${disp.join('\n')}`)
									.addFields(
										{ name: `${cpa[0]}`, value: `${nobe[0]}` },
										{ name: `${cpa[1]}`, value: `${nobe[1]}` },
										{ name: `${cpa[2]}`, value: `${nobe[2]}` },
										{ name: `${cpa[3]}`, value: `${nobe[3]}` }
									)
									.setImage(topimage)
									.setFooter('Join the thread to play!');
							else if (a.length == 5)
								initial1 = new MessageEmbed()
									.setColor('#36393F')
									.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
									.setDescription(`${disp.join('\n')}`)
									.addFields(
										{ name: `${cpa[0]}`, value: `${nobe[0]}` },
										{ name: `${cpa[1]}`, value: `${nobe[1]}` },
										{ name: `${cpa[2]}`, value: `${nobe[2]}` },
										{ name: `${cpa[3]}`, value: `${nobe[3]}` },
										{ name: `${cpa[4]}`, value: `${nobe[4]}` }
									)
									.setImage(topimage)
									.setFooter('Join the thread to play!');
							else if (a.length == 6)
								initial1 = new MessageEmbed()
									.setColor('#36393F')
									.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
									.setDescription(`${disp.join('\n')}`)
									.addFields(
										{ name: `${cpa[0]}`, value: `${nobe[0]}` },
										{ name: `${cpa[1]}`, value: `${nobe[1]}` },
										{ name: `${cpa[2]}`, value: `${nobe[2]}` },
										{ name: `${cpa[3]}`, value: `${nobe[3]}` },
										{ name: `${cpa[4]}`, value: `${nobe[4]}` },
										{ name: `${cpa[5]}`, value: `${nobe[5]}` }
									)
									.setImage(topimage)
									.setFooter('Join the thread to play!');
							else if (a.length == 7)
								initial1 = new MessageEmbed()
									.setColor('#36393F')
									.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
									.setDescription(`${disp.join('\n')}`)
									.addFields(
										{ name: `${cpa[0]}`, value: `${nobe[0]}` },
										{ name: `${cpa[1]}`, value: `${nobe[1]}` },
										{ name: `${cpa[2]}`, value: `${nobe[2]}` },
										{ name: `${cpa[3]}`, value: `${nobe[3]}` },
										{ name: `${cpa[4]}`, value: `${nobe[4]}` },
										{ name: `${cpa[5]}`, value: `${nobe[5]}` },
										{ name: `${cpa[6]}`, value: `${nobe[6]}` }
									)
									.setImage(topimage)
									.setFooter('Join the thread to play!');
							else if (a.length == 8)
								initial1 = new MessageEmbed()
									.setColor('#36393F')
									.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
									.setDescription(`${disp.join('\n')}`)
									.addFields(
										{ name: `${cpa[0]}`, value: `${nobe[0]}` },
										{ name: `${cpa[1]}`, value: `${nobe[1]}` },
										{ name: `${cpa[2]}`, value: `${nobe[2]}` },
										{ name: `${cpa[3]}`, value: `${nobe[3]}` },
										{ name: `${cpa[4]}`, value: `${nobe[4]}` },
										{ name: `${cpa[5]}`, value: `${nobe[5]}` },
										{ name: `${cpa[6]}`, value: `${nobe[6]}` },
										{ name: `${cpa[7]}`, value: `${nobe[7]}` }
									)
									.setImage(topimage)
									.setFooter('Join the thread to play!');
							else if (a.length == 9)
								initial1 = new MessageEmbed()
									.setColor('#36393F')
									.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
									.setDescription(`${disp.join('\n')}`)
									.addFields(
										{ name: `${cpa[0]}`, value: `${nobe[0]}` },
										{ name: `${cpa[1]}`, value: `${nobe[1]}` },
										{ name: `${cpa[2]}`, value: `${nobe[2]}` },
										{ name: `${cpa[3]}`, value: `${nobe[3]}` },
										{ name: `${cpa[4]}`, value: `${nobe[4]}` },
										{ name: `${cpa[5]}`, value: `${nobe[5]}` },
										{ name: `${cpa[6]}`, value: `${nobe[6]}` },
										{ name: `${cpa[7]}`, value: `${nobe[7]}` },
										{ name: `${cpa[8]}`, value: `${nobe[8]}` }
									)
									.setImage(topimage)
									.setFooter('Join the thread to play!');
							else if (a.length == 10)
								initial1 = new MessageEmbed()
									.setColor('#36393F')
									.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
									.setDescription(`${disp.join('\n')}`)
									.addFields(
										{ name: `${cpa[0]}`, value: `${nobe[0]}` },
										{ name: `${cpa[1]}`, value: `${nobe[1]}` },
										{ name: `${cpa[2]}`, value: `${nobe[2]}` },
										{ name: `${cpa[3]}`, value: `${nobe[3]}` },
										{ name: `${cpa[4]}`, value: `${nobe[4]}` },
										{ name: `${cpa[5]}`, value: `${nobe[5]}` },
										{ name: `${cpa[6]}`, value: `${nobe[6]}` },
										{ name: `${cpa[7]}`, value: `${nobe[7]}` },
										{ name: `${cpa[8]}`, value: `${nobe[8]}` },
										{ name: `${cpa[9]}`, value: `${nobe[9]}` }
									)
									.setImage(topimage)
									.setFooter('Join the thread to play!');
							else if (a.length == 11)
								initial1 = new MessageEmbed()
									.setColor('#36393F')
									.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
									.setDescription(`${disp.join('\n')}`)
									.addFields(
										{ name: `${cpa[0]}`, value: `${nobe[0]}` },
										{ name: `${cpa[1]}`, value: `${nobe[1]}` },
										{ name: `${cpa[2]}`, value: `${nobe[2]}` },
										{ name: `${cpa[3]}`, value: `${nobe[3]}` },
										{ name: `${cpa[4]}`, value: `${nobe[4]}` },
										{ name: `${cpa[5]}`, value: `${nobe[5]}` },
										{ name: `${cpa[6]}`, value: `${nobe[6]}` },
										{ name: `${cpa[7]}`, value: `${nobe[7]}` },
										{ name: `${cpa[8]}`, value: `${nobe[8]}` },
										{ name: `${cpa[9]}`, value: `${nobe[9]}` },
										{ name: `${cpa[10]}`, value: `${nobe[10]}` }
									)
									.setImage(topimage)
									.setFooter('Join the thread to play!');
							else if (a.length == 12)
								initial1 = new MessageEmbed()
									.setColor('#36393F')
									.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
									.setDescription(`${disp.join('\n')}`)
									.addFields(
										{ name: `${cpa[0]}`, value: `${nobe[0]}` },
										{ name: `${cpa[1]}`, value: `${nobe[1]}` },
										{ name: `${cpa[2]}`, value: `${nobe[2]}` },
										{ name: `${cpa[3]}`, value: `${nobe[3]}` },
										{ name: `${cpa[4]}`, value: `${nobe[4]}` },
										{ name: `${cpa[5]}`, value: `${nobe[5]}` },
										{ name: `${cpa[6]}`, value: `${nobe[6]}` },
										{ name: `${cpa[7]}`, value: `${nobe[7]}` },
										{ name: `${cpa[8]}`, value: `${nobe[8]}` },
										{ name: `${cpa[9]}`, value: `${nobe[9]}` },
										{ name: `${cpa[10]}`, value: `${nobe[10]}` },
										{ name: `${cpa[11]}`, value: `${nobe[11]}` }
									)
									.setImage(topimage)
									.setFooter('Join the thread to play!');
							else if (a.length == 13)
								initial1 = new MessageEmbed()
									.setColor('#36393F')
									.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
									.setDescription(`${disp.join('\n')}`)
									.addFields(
										{ name: `${cpa[0]}`, value: `${nobe[0]}` },
										{ name: `${cpa[1]}`, value: `${nobe[1]}` },
										{ name: `${cpa[2]}`, value: `${nobe[2]}` },
										{ name: `${cpa[3]}`, value: `${nobe[3]}` },
										{ name: `${cpa[4]}`, value: `${nobe[4]}` },
										{ name: `${cpa[5]}`, value: `${nobe[5]}` },
										{ name: `${cpa[6]}`, value: `${nobe[6]}` },
										{ name: `${cpa[7]}`, value: `${nobe[7]}` },
										{ name: `${cpa[8]}`, value: `${nobe[8]}` },
										{ name: `${cpa[9]}`, value: `${nobe[9]}` },
										{ name: `${cpa[10]}`, value: `${nobe[10]}` },
										{ name: `${cpa[11]}`, value: `${nobe[11]}` },
										{ name: `${cpa[12]}`, value: `${nobe[12]}` }
									)
									.setImage(topimage)
									.setFooter('Join the thread to play!');
							else if (a.length == 14)
								initial1 = new MessageEmbed()
									.setColor('#36393F')
									.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
									.setDescription(`${disp.join('\n')}`)
									.addFields(
										{ name: `${cpa[0]}`, value: `${nobe[0]}` },
										{ name: `${cpa[1]}`, value: `${nobe[1]}` },
										{ name: `${cpa[2]}`, value: `${nobe[2]}` },
										{ name: `${cpa[3]}`, value: `${nobe[3]}` },
										{ name: `${cpa[4]}`, value: `${nobe[4]}` },
										{ name: `${cpa[5]}`, value: `${nobe[5]}` },
										{ name: `${cpa[6]}`, value: `${nobe[6]}` },
										{ name: `${cpa[7]}`, value: `${nobe[7]}` },
										{ name: `${cpa[8]}`, value: `${nobe[8]}` },
										{ name: `${cpa[9]}`, value: `${nobe[9]}` },
										{ name: `${cpa[10]}`, value: `${nobe[10]}` },
										{ name: `${cpa[11]}`, value: `${nobe[11]}` },
										{ name: `${cpa[12]}`, value: `${nobe[12]}` },
										{ name: `${cpa[13]}`, value: `${nobe[13]}` }
									)
									.setImage(topimage)
									.setFooter('Join the thread to play!');
							else if (a.length == 15)
								initial1 = new MessageEmbed()
									.setColor('#36393F')
									.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
									.setDescription(`${disp.join('\n')}`)
									.addFields(
										{ name: `${cpa[0]}`, value: `${nobe[0]}` },
										{ name: `${cpa[1]}`, value: `${nobe[1]}` },
										{ name: `${cpa[2]}`, value: `${nobe[2]}` },
										{ name: `${cpa[3]}`, value: `${nobe[3]}` },
										{ name: `${cpa[4]}`, value: `${nobe[4]}` },
										{ name: `${cpa[5]}`, value: `${nobe[5]}` },
										{ name: `${cpa[6]}`, value: `${nobe[6]}` },
										{ name: `${cpa[7]}`, value: `${nobe[7]}` },
										{ name: `${cpa[8]}`, value: `${nobe[8]}` },
										{ name: `${cpa[9]}`, value: `${nobe[9]}` },
										{ name: `${cpa[10]}`, value: `${nobe[10]}` },
										{ name: `${cpa[11]}`, value: `${nobe[11]}` },
										{ name: `${cpa[12]}`, value: `${nobe[12]}` },
										{ name: `${cpa[13]}`, value: `${nobe[13]}` },
										{ name: `${cpa[14]}`, value: `${nobe[14]}` }
									)
									.setImage(topimage)
									.setFooter('Join the thread to play!');
							else if (a.length == 16)
								initial1 = new MessageEmbed()
									.setColor('#36393F')
									.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
									.setDescription(`${disp.join('\n')}`)
									.addFields(
										{ name: `${cpa[0]}`, value: `${nobe[0]}` },
										{ name: `${cpa[1]}`, value: `${nobe[1]}` },
										{ name: `${cpa[2]}`, value: `${nobe[2]}` },
										{ name: `${cpa[3]}`, value: `${nobe[3]}` },
										{ name: `${cpa[4]}`, value: `${nobe[4]}` },
										{ name: `${cpa[5]}`, value: `${nobe[5]}` },
										{ name: `${cpa[6]}`, value: `${nobe[6]}` },
										{ name: `${cpa[7]}`, value: `${nobe[7]}` },
										{ name: `${cpa[8]}`, value: `${nobe[8]}` },
										{ name: `${cpa[9]}`, value: `${nobe[9]}` },
										{ name: `${cpa[10]}`, value: `${nobe[10]}` },
										{ name: `${cpa[11]}`, value: `${nobe[11]}` },
										{ name: `${cpa[12]}`, value: `${nobe[12]}` },
										{ name: `${cpa[13]}`, value: `${nobe[13]}` },
										{ name: `${cpa[14]}`, value: `${nobe[14]}` },
										{ name: `${cpa[15]}`, value: `${nobe[15]}` }
									)
									.setImage(topimage)
									.setFooter('Join the thread to play!');
							else if (a.length == 17)
								initial1 = new MessageEmbed()
									.setColor('#36393F')
									.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
									.setDescription(`${disp.join('\n')}`)
									.addFields(
										{ name: `${cpa[0]}`, value: `${nobe[0]}` },
										{ name: `${cpa[1]}`, value: `${nobe[1]}` },
										{ name: `${cpa[2]}`, value: `${nobe[2]}` },
										{ name: `${cpa[3]}`, value: `${nobe[3]}` },
										{ name: `${cpa[4]}`, value: `${nobe[4]}` },
										{ name: `${cpa[5]}`, value: `${nobe[5]}` },
										{ name: `${cpa[6]}`, value: `${nobe[6]}` },
										{ name: `${cpa[7]}`, value: `${nobe[7]}` },
										{ name: `${cpa[8]}`, value: `${nobe[8]}` },
										{ name: `${cpa[9]}`, value: `${nobe[9]}` },
										{ name: `${cpa[10]}`, value: `${nobe[10]}` },
										{ name: `${cpa[11]}`, value: `${nobe[11]}` },
										{ name: `${cpa[12]}`, value: `${nobe[12]}` },
										{ name: `${cpa[13]}`, value: `${nobe[13]}` },
										{ name: `${cpa[14]}`, value: `${nobe[14]}` },
										{ name: `${cpa[15]}`, value: `${nobe[15]}` },
										{ name: `${cpa[16]}`, value: `${nobe[16]}` }
									)
									.setImage(topimage)
									.setFooter('Join the thread to play!');
							else if (a.length == 18)
								initial1 = new MessageEmbed()
									.setColor('#36393F')
									.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
									.setDescription(`${disp.join('\n')}`)
									.addFields(
										{ name: `${cpa[0]}`, value: `${nobe[0]}` },
										{ name: `${cpa[1]}`, value: `${nobe[1]}` },
										{ name: `${cpa[2]}`, value: `${nobe[2]}` },
										{ name: `${cpa[3]}`, value: `${nobe[3]}` },
										{ name: `${cpa[4]}`, value: `${nobe[4]}` },
										{ name: `${cpa[5]}`, value: `${nobe[5]}` },
										{ name: `${cpa[6]}`, value: `${nobe[6]}` },
										{ name: `${cpa[7]}`, value: `${nobe[7]}` },
										{ name: `${cpa[8]}`, value: `${nobe[8]}` },
										{ name: `${cpa[9]}`, value: `${nobe[9]}` },
										{ name: `${cpa[10]}`, value: `${nobe[10]}` },
										{ name: `${cpa[11]}`, value: `${nobe[11]}` },
										{ name: `${cpa[12]}`, value: `${nobe[12]}` },
										{ name: `${cpa[13]}`, value: `${nobe[13]}` },
										{ name: `${cpa[14]}`, value: `${nobe[14]}` },
										{ name: `${cpa[15]}`, value: `${nobe[15]}` },
										{ name: `${cpa[16]}`, value: `${nobe[16]}` },
										{ name: `${cpa[17]}`, value: `${nobe[17]}` }
									)
									.setImage(topimage)
									.setFooter('Join the thread to play!');
							else if (a.length == 19)
								initial1 = new MessageEmbed()
									.setColor('#36393F')
									.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
									.setDescription(`${disp.join('\n')}`)
									.addFields(
										{ name: `${cpa[0]}`, value: `${nobe[0]}` },
										{ name: `${cpa[1]}`, value: `${nobe[1]}` },
										{ name: `${cpa[2]}`, value: `${nobe[2]}` },
										{ name: `${cpa[3]}`, value: `${nobe[3]}` },
										{ name: `${cpa[4]}`, value: `${nobe[4]}` },
										{ name: `${cpa[5]}`, value: `${nobe[5]}` },
										{ name: `${cpa[6]}`, value: `${nobe[6]}` },
										{ name: `${cpa[7]}`, value: `${nobe[7]}` },
										{ name: `${cpa[8]}`, value: `${nobe[8]}` },
										{ name: `${cpa[9]}`, value: `${nobe[9]}` },
										{ name: `${cpa[10]}`, value: `${nobe[10]}` },
										{ name: `${cpa[11]}`, value: `${nobe[11]}` },
										{ name: `${cpa[12]}`, value: `${nobe[12]}` },
										{ name: `${cpa[13]}`, value: `${nobe[13]}` },
										{ name: `${cpa[14]}`, value: `${nobe[14]}` },
										{ name: `${cpa[15]}`, value: `${nobe[15]}` },
										{ name: `${cpa[16]}`, value: `${nobe[16]}` },
										{ name: `${cpa[17]}`, value: `${nobe[17]}` },
										{ name: `${cpa[18]}`, value: `${nobe[18]}` }
									)
									.setImage(topimage)
									.setFooter('Join the thread to play!');
							else if (a.length == 20)
								initial1 = new MessageEmbed()
									.setColor('#36393F')
									.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
									.setDescription(`${disp.join('\n')}`)
									.addFields(
										{ name: `${cpa[0]}`, value: `${nobe[0]}` },
										{ name: `${cpa[1]}`, value: `${nobe[1]}` },
										{ name: `${cpa[2]}`, value: `${nobe[2]}` },
										{ name: `${cpa[3]}`, value: `${nobe[3]}` },
										{ name: `${cpa[4]}`, value: `${nobe[4]}` },
										{ name: `${cpa[5]}`, value: `${nobe[5]}` },
										{ name: `${cpa[6]}`, value: `${nobe[6]}` },
										{ name: `${cpa[7]}`, value: `${nobe[7]}` },
										{ name: `${cpa[8]}`, value: `${nobe[8]}` },
										{ name: `${cpa[9]}`, value: `${nobe[9]}` },
										{ name: `${cpa[10]}`, value: `${nobe[10]}` },
										{ name: `${cpa[11]}`, value: `${nobe[11]}` },
										{ name: `${cpa[12]}`, value: `${nobe[12]}` },
										{ name: `${cpa[13]}`, value: `${nobe[13]}` },
										{ name: `${cpa[14]}`, value: `${nobe[14]}` },
										{ name: `${cpa[15]}`, value: `${nobe[15]}` },
										{ name: `${cpa[16]}`, value: `${nobe[16]}` },
										{ name: `${cpa[17]}`, value: `${nobe[17]}` },
										{ name: `${cpa[18]}`, value: `${nobe[18]}` },
										{ name: `${cpa[19]}`, value: `${nobe[19]}` }
									)
									.setImage(topimage)
									.setFooter('Join the thread to play!');
							else if (a.length == 21)
								initial1 = new MessageEmbed()
									.setColor('#36393F')
									.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
									.setDescription(`${disp.join('\n')}`)
									.addFields(
										{ name: `${cpa[0]}`, value: `${nobe[0]}` },
										{ name: `${cpa[1]}`, value: `${nobe[1]}` },
										{ name: `${cpa[2]}`, value: `${nobe[2]}` },
										{ name: `${cpa[3]}`, value: `${nobe[3]}` },
										{ name: `${cpa[4]}`, value: `${nobe[4]}` },
										{ name: `${cpa[5]}`, value: `${nobe[5]}` },
										{ name: `${cpa[6]}`, value: `${nobe[6]}` },
										{ name: `${cpa[7]}`, value: `${nobe[7]}` },
										{ name: `${cpa[8]}`, value: `${nobe[8]}` },
										{ name: `${cpa[9]}`, value: `${nobe[9]}` },
										{ name: `${cpa[10]}`, value: `${nobe[10]}` },
										{ name: `${cpa[11]}`, value: `${nobe[11]}` },
										{ name: `${cpa[12]}`, value: `${nobe[12]}` },
										{ name: `${cpa[13]}`, value: `${nobe[13]}` },
										{ name: `${cpa[14]}`, value: `${nobe[14]}` },
										{ name: `${cpa[15]}`, value: `${nobe[15]}` },
										{ name: `${cpa[16]}`, value: `${nobe[16]}` },
										{ name: `${cpa[17]}`, value: `${nobe[17]}` },
										{ name: `${cpa[18]}`, value: `${nobe[18]}` },
										{ name: `${cpa[19]}`, value: `${nobe[19]}` },
										{ name: `${cpa[20]}`, value: `${nobe[20]}` }
									)
									.setImage(topimage)
									.setFooter('Join the thread to play!');
							else if (a.length == 22)
								initial1 = new MessageEmbed()
									.setColor('#36393F')
									.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
									.setDescription(`${disp.join('\n')}`)
									.addFields(
										{ name: `${cpa[0]}`, value: `${nobe[0]}` },
										{ name: `${cpa[1]}`, value: `${nobe[1]}` },
										{ name: `${cpa[2]}`, value: `${nobe[2]}` },
										{ name: `${cpa[3]}`, value: `${nobe[3]}` },
										{ name: `${cpa[4]}`, value: `${nobe[4]}` },
										{ name: `${cpa[5]}`, value: `${nobe[5]}` },
										{ name: `${cpa[6]}`, value: `${nobe[6]}` },
										{ name: `${cpa[7]}`, value: `${nobe[7]}` },
										{ name: `${cpa[8]}`, value: `${nobe[8]}` },
										{ name: `${cpa[9]}`, value: `${nobe[9]}` },
										{ name: `${cpa[10]}`, value: `${nobe[10]}` },
										{ name: `${cpa[11]}`, value: `${nobe[11]}` },
										{ name: `${cpa[12]}`, value: `${nobe[12]}` },
										{ name: `${cpa[13]}`, value: `${nobe[13]}` },
										{ name: `${cpa[14]}`, value: `${nobe[14]}` },
										{ name: `${cpa[15]}`, value: `${nobe[15]}` },
										{ name: `${cpa[16]}`, value: `${nobe[16]}` },
										{ name: `${cpa[17]}`, value: `${nobe[17]}` },
										{ name: `${cpa[18]}`, value: `${nobe[18]}` },
										{ name: `${cpa[19]}`, value: `${nobe[19]}` },
										{ name: `${cpa[20]}`, value: `${nobe[20]}` },
										{ name: `${cpa[21]}`, value: `${nobe[21]}` }
									)
									.setImage(topimage)
									.setFooter('Join the thread to play!');
							else if (a.length == 23)
								initial1 = new MessageEmbed()
									.setColor('#36393F')
									.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
									.setDescription(`${disp.join('\n')}`)
									.addFields(
										{ name: `${cpa[0]}`, value: `${nobe[0]}` },
										{ name: `${cpa[1]}`, value: `${nobe[1]}` },
										{ name: `${cpa[2]}`, value: `${nobe[2]}` },
										{ name: `${cpa[3]}`, value: `${nobe[3]}` },
										{ name: `${cpa[4]}`, value: `${nobe[4]}` },
										{ name: `${cpa[5]}`, value: `${nobe[5]}` },
										{ name: `${cpa[6]}`, value: `${nobe[6]}` },
										{ name: `${cpa[7]}`, value: `${nobe[7]}` },
										{ name: `${cpa[8]}`, value: `${nobe[8]}` },
										{ name: `${cpa[9]}`, value: `${nobe[9]}` },
										{ name: `${cpa[10]}`, value: `${nobe[10]}` },
										{ name: `${cpa[11]}`, value: `${nobe[11]}` },
										{ name: `${cpa[12]}`, value: `${nobe[12]}` },
										{ name: `${cpa[13]}`, value: `${nobe[13]}` },
										{ name: `${cpa[14]}`, value: `${nobe[14]}` },
										{ name: `${cpa[15]}`, value: `${nobe[15]}` },
										{ name: `${cpa[16]}`, value: `${nobe[16]}` },
										{ name: `${cpa[17]}`, value: `${nobe[17]}` },
										{ name: `${cpa[18]}`, value: `${nobe[18]}` },
										{ name: `${cpa[19]}`, value: `${nobe[19]}` },
										{ name: `${cpa[20]}`, value: `${nobe[20]}` },
										{ name: `${cpa[21]}`, value: `${nobe[21]}` },
										{ name: `${cpa[22]}`, value: `${nobe[22]}` }
									)
									.setImage(topimage)
									.setFooter('Join the thread to play!');
							else if (a.length == 24)
								initial1 = new MessageEmbed()
									.setColor('#36393F')
									.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
									.setDescription(`${disp.join('\n')}`)
									.addFields(
										{ name: `${cpa[0]}`, value: `${nobe[0]}` },
										{ name: `${cpa[1]}`, value: `${nobe[1]}` },
										{ name: `${cpa[2]}`, value: `${nobe[2]}` },
										{ name: `${cpa[3]}`, value: `${nobe[3]}` },
										{ name: `${cpa[4]}`, value: `${nobe[4]}` },
										{ name: `${cpa[5]}`, value: `${nobe[5]}` },
										{ name: `${cpa[6]}`, value: `${nobe[6]}` },
										{ name: `${cpa[7]}`, value: `${nobe[7]}` },
										{ name: `${cpa[8]}`, value: `${nobe[8]}` },
										{ name: `${cpa[9]}`, value: `${nobe[9]}` },
										{ name: `${cpa[10]}`, value: `${nobe[10]}` },
										{ name: `${cpa[11]}`, value: `${nobe[11]}` },
										{ name: `${cpa[12]}`, value: `${nobe[12]}` },
										{ name: `${cpa[13]}`, value: `${nobe[13]}` },
										{ name: `${cpa[14]}`, value: `${nobe[14]}` },
										{ name: `${cpa[15]}`, value: `${nobe[15]}` },
										{ name: `${cpa[16]}`, value: `${nobe[16]}` },
										{ name: `${cpa[17]}`, value: `${nobe[17]}` },
										{ name: `${cpa[18]}`, value: `${nobe[18]}` },
										{ name: `${cpa[19]}`, value: `${nobe[19]}` },
										{ name: `${cpa[20]}`, value: `${nobe[20]}` },
										{ name: `${cpa[21]}`, value: `${nobe[21]}` },
										{ name: `${cpa[22]}`, value: `${nobe[22]}` },
										{ name: `${cpa[23]}`, value: `${nobe[23]}` }
									)
									.setImage(topimage)
									.setFooter('Join the thread to play!');
							else if (a.length == 25)
								initial1 = new MessageEmbed()
									.setColor('#36393F')
									.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
									.setDescription(`${disp.join('\n')}`)
									.addFields(
										{ name: `${cpa[0]}`, value: `${nobe[0]}` },
										{ name: `${cpa[1]}`, value: `${nobe[1]}` },
										{ name: `${cpa[2]}`, value: `${nobe[2]}` },
										{ name: `${cpa[3]}`, value: `${nobe[3]}` },
										{ name: `${cpa[4]}`, value: `${nobe[4]}` },
										{ name: `${cpa[5]}`, value: `${nobe[5]}` },
										{ name: `${cpa[6]}`, value: `${nobe[6]}` },
										{ name: `${cpa[7]}`, value: `${nobe[7]}` },
										{ name: `${cpa[8]}`, value: `${nobe[8]}` },
										{ name: `${cpa[9]}`, value: `${nobe[9]}` },
										{ name: `${cpa[10]}`, value: `${nobe[10]}` },
										{ name: `${cpa[11]}`, value: `${nobe[11]}` },
										{ name: `${cpa[12]}`, value: `${nobe[12]}` },
										{ name: `${cpa[13]}`, value: `${nobe[13]}` },
										{ name: `${cpa[14]}`, value: `${nobe[14]}` },
										{ name: `${cpa[15]}`, value: `${nobe[15]}` },
										{ name: `${cpa[16]}`, value: `${nobe[16]}` },
										{ name: `${cpa[17]}`, value: `${nobe[17]}` },
										{ name: `${cpa[18]}`, value: `${nobe[18]}` },
										{ name: `${cpa[19]}`, value: `${nobe[19]}` },
										{ name: `${cpa[20]}`, value: `${nobe[20]}` },
										{ name: `${cpa[21]}`, value: `${nobe[21]}` },
										{ name: `${cpa[22]}`, value: `${nobe[22]}` },
										{ name: `${cpa[23]}`, value: `${nobe[23]}` },
										{ name: `${cpa[24]}`, value: `${nobe[24]}` }

									)
									.setImage(topimage)
									.setFooter('Join the thread to play!');

							crbe = new MessageEmbed()
								.setColor('#36393F')
								.setTitle(`:green_circle: ${a[Args.user]}'s turn`)
								.setTimestamp();







							console.log(`${lastbutton.customId}`)

							klm.edit({ embeds: [initial1, crbe] });
							if (aid[Args.user] == 'bot') {
								return unobot(klm);
							}

						}
					})

					collector3.on("end", (collected, reason) => {

						/*if (reason == "time") {

							thread.send({
								content: "Didnt accept in time"

							});
						}*/

					})



				}
			})


			collector1.on("end", (collected, reason) => {
				/*if (reason == "time") {

					klm.edit({
						content: "Didnt accept in time"

					});
				}*/

			})

			/////////////////////////////////////////////////////unobot function////////////////////////////////////////////////////////////////////////////////////
			async function unobot(klm) {
				await wait(5000);
				//said uno
				randuno = Math.floor(0 + (Math.random() * 10))
				if (randuno == 5 || randuno == 3 || randuno == 7 || randuno == 9 || randuno == 1) {
					chsukki = 0;
					for (sukki = 0; sukki < a.length; sukki++) {
						if (nob[sukki] == 1 && cruelty[sukki] != 1) {
							nso.push(a[sukki]);
							cruelty[sukki] = 0;
							chsukki = chsukki + 1;
						}
					}
					if (chsukki > 0) {
						if (disp.length == 8) {
							disp.splice(0, 1);
							disp.push(`**${a[Args.user]}** said Uno before ${nso}!`);

						}
						else {
							disp.push(`**${a[Args.user]}** said Uno before ${nso}!`);


						}
						for (konkani = 0; konkani < nso.length; konkani++) {
							if (disp.length == 8) {
								disp.splice(0, 1);
								disp.push(`**${nso[konkani]}** have to draw  cards!`);

							}
							else {
								disp.push(`**${nso[konkani]}** have to draw  cards!`);


							}

						}
						nso = [];
					} else {

					}
				}
				if (cruelty[Args.user] == 0) {
					cruelty[Args.user] = 2;
					nob[Args.user] = nob[Args.user] + 2;
					nobe[Args.user] = "<:UnoSlot:895311124399013888>".repeat(nob[Args.user]);
					if (disp.length == 8) {
						disp.splice(0, 1);
						disp.push(`**${a[Args.user]}** drawn 2 cards!`);

					}
					else {

						disp.push(`**${a[Args.user]}** drawn 2 cards!`);


					}


				}
				// draw 
				if (cruelty[Args.user] != 0) {
					if (neutr == 0) {
						kitt = nob[Args.user];
						kitp = 0;
						siska = [];
						for (shungi = 0; shungi < nob[Args.user]; shungi++) {
							if (topcard.value == supv[Args.user][shungi] || topcard.color == supc[Args.user][shungi] || topcard.name == supr[Args.user][shungi] || supv[Args.user][shungi] == 'Wild Draw Four' || supv[Args.user][shungi] == 'Wild' || supv[Args.user][shungi] == 'Wild Reverse' || topcard.value == 'Wild Reverse') {
								//supst[Args.user][shungi] = 'SUCCESS';
								siska.push(`${supr[Args.user][shungi]}`);
								kitp = kitp + 1;
								if (disp.length == 8) {
									disp.splice(0, 1);
									disp.push(`**${a[Args.user]}** played ${supr[Args.user][shungi]}!`);

								}
								else {
									disp.push(`**${a[Args.user]}** played ${supr[Args.user][shungi]}!`);


								}
								car = cards.filter(card => card.name == `${supr[Args.user][shungi]}`);
								topcard = car[0];
								topimage = topcard.image;
								if (topcard.value == 'Wild Draw Four') {
									if (stem == ':red_circle:') {
									neutr = 4;}else{
										neutr = neutr+ 4;
									}
								} else if (topcard.value == 'Draw Two') {if (stem == ':red_circle:') {
									neutr = 2;}else{
										neutr = neutr+ 2;
									}
									
								} else { neutr = 0; }
								roundno = roundno + 1;
								if (topcard.value == 'Reverse' || topcard.value == 'Wild Reverse') {
									if (paem == ':green_circle:') {
										lbf = lbf * -1;
									}
									//lbf = lbf * -1;
								}
								if (topcard.value == 'Wild Draw Four' || topcard.value == 'Wild') {
									nr = 0;
									ny = 0;
									ng = 0;
									nb = 0;
									for (pungi = 0; pungi < nob[Args.user]; pungi++) {
										if (supc[Args.user][pungi] == 'red') {
											nr = nr + 1;
										} else if (supc[Args.user][pungi] == 'yellow') {
											ny = ny + 1;
										} else if (supc[Args.user][pungi] == 'green') {
											ng = ng + 1;
										} else if (supc[Args.user][pungi] == 'blue') {
											nb = nb + 1;
										}
									}
									if (nr > ny && nr > ng && nr > nb) {
										car = cards.filter(card => card.name == `Red Zero`);
										topcard = car[0];
										topimage = topcard.image;

									} else if (ny > nr && ny > ng && ny > nb) {
										car = cards.filter(card => card.name == `Yellow Zero`);
										topcard = car[0];
										topimage = topcard.image;
									} else if (ng > nr && ng > nr && ng > nb) {
										car = cards.filter(card => card.name == `Green Zero`);
										topcard = car[0];
										topimage = topcard.image;

									} else if (nb > nr && nb > ng && nb > ny) {
										car = cards.filter(card => card.name == `Blue Zero`);
										topcard = car[0];
										topimage = topcard.image;
									} else {
										car = cards.filter(card => card.name == `Red Zero`);
										topcard = car[0];
										topimage = topcard.image;

									}
								}
								/*else if(topcard.value == 'Skip'){
												   lbf = 1;
												   Args.user = Args.user+1;
												   Args.userid = aid[Args.user];
											   }*/

								supe[Args.user].splice(shungi, 1);
								sups[Args.user].splice(shungi, 1);
								supr[Args.user].splice(shungi, 1);
								supc[Args.user].splice(shungi, 1);
								supv[Args.user].splice(shungi, 1);
								nob[Args.user] = nob[Args.user] - 1;
								nobe[Args.user] = "<:UnoSlot:895311124399013888>".repeat(nob[Args.user]);
								if (nob[Args.user] == 0) {
									nobe[Args.user] = `:tada: Winner`;
									thread.delete();
									return winc(m);


								}
								randuno = Math.floor(0 + (Math.random() * 10))
								if (randuno == 5 || randuno == 3 || randuno == 7 || randuno == 9 || randuno == 1) {
									if (nob[Args.user] == 1) {
										if (disp.length == 8) {
											disp.splice(0, 1);
											disp.push(`**${a[Args.user]}** said Uno!`);

										}
										else {
											disp.push(`**${a[Args.user]}** said Uno!`);


										}
										cruelty[Args.user] = 1;//safe


									}
								}

								if (topcard.value == 'Skip') {
									if (lbf == 1 && Args.user == a.length - 1) {
										Args.user = 0;
									} else if (lbf == -1 && Args.user == 0) {
										Args.user = a.length - 1;
									} else {
										Args.user = Args.user + lbf;
									}
									if (disp.length == 8) {
										disp.splice(0, 1);
										disp.push(`**${a[Args.user]}** was skipped!`);

									}
									else {
										disp.push(`**${a[Args.user]}** was skipped!`);


									}
								}

								if (lbf == 1 && Args.user == a.length - 1) {
									Args.user = 0;
								} else if (lbf == -1 && Args.user == 0) {
									Args.user = a.length - 1;
								} else {
									Args.user = Args.user + lbf;
								}
								Args.userid = aid[Args.user];
								for (sil = 0; sil <= a.length; sil++) {
									cpa[sil] = a[sil];
								}
								cpa[Args.user] = `__${a[Args.user]}__`;



								return klmupd(klm);

							}
						}
						if (kitp == 0) {
							nob[Args.user] = nob[Args.user] + 1;
							nobe[Args.user] = "<:UnoSlot:895311124399013888>".repeat(nob[Args.user]);
							if (disp.length == 8) {
								disp.splice(0, 1);
								disp.push(`**${a[Args.user]}** drawn a card!`);

							}
							else {

								disp.push(`**${a[Args.user]}** drawn a card!`);


							}
							roundno = roundno + 1;
							if (lbf == 1 && Args.user == a.length - 1) {
								Args.user = 0;
							} else if (lbf == -1 && Args.user == 0) {
								Args.user = a.length - 1;
							} else {
								Args.user = Args.user + lbf;
							}
							Args.userid = aid[Args.user];
							for (sil = 0; sil <= a.length; sil++) {
								cpa[sil] = a[sil];
							}
							cpa[Args.user] = `__${a[Args.user]}__`;
							return klmupd(klm);
						}
					}
					//neutr properties
					else {
						kitt = nob[Args.user];
						kitp = 0;
						siska = [];
						for (shungi = 0; shungi < nob[Args.user]; shungi++) {
							if ((topcard.value == supv[Args.user][shungi] || supv[Args.user][shungi] == 'Wild Draw Four' || supv[Args.user][shungi] == 'Wild' || supv[Args.user][shungi] == 'Wild Reverse') && supv[Args.user][shungi] != 0) {
								//supst[Args.user][shungi] = 'SUCCESS';
								siska.push(`${supr[Args.user][shungi]}`);
								kitp = kitp + 1;
								if (disp.length == 8) {
									disp.splice(0, 1);
									disp.push(`**${a[Args.user]}** played ${supr[Args.user][shungi]}!`);

								}
								else {
									disp.push(`**${a[Args.user]}** played ${supr[Args.user][shungi]}!`);


								}
								car = cards.filter(card => card.name == `${supr[Args.user][shungi]}`);
								topcard = car[0];
								topimage = topcard.image;
								if (topcard.value == 'Wild Draw Four') {
									if (stem == ':red_circle:') {
										neutr = 4;
									}
									else {
										neutr = neutr + 4;
									}
								} else if (topcard.value == 'Draw Two') {
									if (stem == ':red_circle:') {
										neutr = 2;
									} else {
										neutr = neutr + 2;
									}
								}
								roundno = roundno + 1;

								if (topcard.value == 'Reverse' || topcard.value == 'Wild Reverse') {
									if (paem == ':green_circle:') {
										lbf = lbf * -1;
									}
									//lbf = lbf * -1;
								}
								if (topcard.value == 'Wild Draw Four' || topcard.value == 'Wild') {
									nr = 0;
									ny = 0;
									ng = 0;
									nb = 0;
									for (pungi = 0; pungi < nob[Args.user]; pungi++) {
										if (supc[Args.user][pungi] == 'red') {
											nr = nr + 1;
										} else if (supc[Args.user][pungi] == 'yellow') {
											ny = ny + 1;
										} else if (supc[Args.user][pungi] == 'green') {
											ng = ng + 1;
										} else if (supc[Args.user][pungi] == 'blue') {
											nb = nb + 1;
										}
									}
									if (nr > ny && nr > ng && nr > nb) {
										car = cards.filter(card => card.name == `Red Zero`);
										topcard = car[0];
										topimage = topcard.image;

									} else if (ny > nr && ny > ng && ny > nb) {
										car = cards.filter(card => card.name == `Yellow Zero`);
										topcard = car[0];
										topimage = topcard.image;
									} else if (ng > nr && ng > nr && ng > nb) {
										car = cards.filter(card => card.name == `Green Zero`);
										topcard = car[0];
										topimage = topcard.image;

									} else if (nb > nr && nb > ng && nb > ny) {
										car = cards.filter(card => card.name == `Blue Zero`);
										topcard = car[0];
										topimage = topcard.image;
									} else {
										car = cards.filter(card => card.name == `Red Zero`);
										topcard = car[0];
										topimage = topcard.image;

									}
								}

								supe[Args.user].splice(shungi, 1);
								sups[Args.user].splice(shungi, 1);
								supr[Args.user].splice(shungi, 1);
								supc[Args.user].splice(shungi, 1);
								supv[Args.user].splice(shungi, 1);
								nob[Args.user] = nob[Args.user] - 1;
								nobe[Args.user] = "<:UnoSlot:895311124399013888>".repeat(nob[Args.user]);
								if (nob[Args.user] == 0) {
									nobe[Args.user] = `:tada: Winner`;
									thread.delete();
									return winc(m);


								}
								randuno = Math.floor(0 + (Math.random() * 10))
								if (randuno == 5 || randuno == 3 || randuno == 7 || randuno == 9 || randuno == 1) {
									if (nob[Args.user] == 1) {
										if (disp.length == 8) {
											disp.splice(0, 1);
											disp.push(`**${a[Args.user]}** said Uno!`);

										}
										else {
											disp.push(`**${a[Args.user]}** said Uno!`);


										}
										cruelty[Args.user] = 1;//safe


									}
								}


								if (lbf == 1 && Args.user == a.length - 1) {
									Args.user = 0;
								} else if (lbf == -1 && Args.user == 0) {
									Args.user = a.length - 1;
								} else {
									Args.user = Args.user + lbf;
								}
								Args.userid = aid[Args.user];
								for (sil = 0; sil <= a.length; sil++) {
									cpa[sil] = a[sil];
								}
								cpa[Args.user] = `__${a[Args.user]}__`;



								return klmupd(klm);

							}
						}
						if (kitp == 0) {
							nob[Args.user] = nob[Args.user] + neutr;
							nobe[Args.user] = "<:UnoSlot:895311124399013888>".repeat(nob[Args.user]);
							if (disp.length == 8) {
								disp.splice(0, 1);
								disp.push(`**${a[Args.user]}** drawn ${neutr} cards!`);

							}
							else {
								disp.push(`**${a[Args.user]}** drawn ${neutr} cards!`);


							}
							neutr = 0;


							roundno = roundno + 1;
							if (drem == ':green_circle:') {
								if (lbf == 1 && Args.user == a.length - 1) {
									Args.user = 0;
								} else if (lbf == -1 && Args.user == 0) {
									Args.user = a.length - 1;
								} else {
									Args.user = Args.user + lbf;
								}
							}
							Args.userid = aid[Args.user];
							for (sil = 0; sil <= a.length; sil++) {
								cpa[sil] = a[sil];
							}
							cpa[Args.user] = `__${a[Args.user]}__`;
							return klmupd(klm);
						}
					}




				}

				async function klmupd(klm) {
					if (a.length == 1)
						initial1 = new MessageEmbed()
							.setColor('#36393F')
							.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
							.setDescription(`${disp.join('\n')}`)
							.addFields(
								{ name: `${cpa[0]}`, value: `${nobe[0]}` }
							)

							.setImage(topimage)
							.setFooter('Join the thread to play!');
					else if (a.length == 2)
						initial1 = new MessageEmbed()
							.setColor('#36393F')
							.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
							.setDescription(`${disp.join('\n')}`)
							.addFields(
								{ name: `${cpa[0]}`, value: `${nobe[0]}` },
								{ name: `${cpa[1]}`, value: `${nobe[1]}` }
							)

							.setImage(topimage)
							.setFooter('Join the thread to play!');
					else if (a.length == 3)
						initial1 = new MessageEmbed()
							.setColor('#36393F')
							.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
							.setDescription(`${disp.join('\n')}`)
							.addFields(
								{ name: `${cpa[0]}`, value: `${nobe[0]}` },
								{ name: `${cpa[1]}`, value: `${nobe[1]}` },
								{ name: `${cpa[2]}`, value: `${nobe[2]}` }
							)
							.setImage(topimage)
							.setFooter('Join the thread to play!');
					else if (a.length == 4)
						initial1 = new MessageEmbed()
							.setColor('#36393F')
							.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
							.setDescription(`${disp.join('\n')}`)
							.addFields(
								{ name: `${cpa[0]}`, value: `${nobe[0]}` },
								{ name: `${cpa[1]}`, value: `${nobe[1]}` },
								{ name: `${cpa[2]}`, value: `${nobe[2]}` },
								{ name: `${cpa[3]}`, value: `${nobe[3]}` }
							)
							.setImage(topimage)
							.setFooter('Join the thread to play!');
					else if (a.length == 5)
						initial1 = new MessageEmbed()
							.setColor('#36393F')
							.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
							.setDescription(`${disp.join('\n')}`)
							.addFields(
								{ name: `${cpa[0]}`, value: `${nobe[0]}` },
								{ name: `${cpa[1]}`, value: `${nobe[1]}` },
								{ name: `${cpa[2]}`, value: `${nobe[2]}` },
								{ name: `${cpa[3]}`, value: `${nobe[3]}` },
								{ name: `${cpa[4]}`, value: `${nobe[4]}` }
							)
							.setImage(topimage)
							.setFooter('Join the thread to play!');
					else if (a.length == 6)
						initial1 = new MessageEmbed()
							.setColor('#36393F')
							.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
							.setDescription(`${disp.join('\n')}`)
							.addFields(
								{ name: `${cpa[0]}`, value: `${nobe[0]}` },
								{ name: `${cpa[1]}`, value: `${nobe[1]}` },
								{ name: `${cpa[2]}`, value: `${nobe[2]}` },
								{ name: `${cpa[3]}`, value: `${nobe[3]}` },
								{ name: `${cpa[4]}`, value: `${nobe[4]}` },
								{ name: `${cpa[5]}`, value: `${nobe[5]}` }
							)
							.setImage(topimage)
							.setFooter('Join the thread to play!');
					else if (a.length == 7)
						initial1 = new MessageEmbed()
							.setColor('#36393F')
							.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
							.setDescription(`${disp.join('\n')}`)
							.addFields(
								{ name: `${cpa[0]}`, value: `${nobe[0]}` },
								{ name: `${cpa[1]}`, value: `${nobe[1]}` },
								{ name: `${cpa[2]}`, value: `${nobe[2]}` },
								{ name: `${cpa[3]}`, value: `${nobe[3]}` },
								{ name: `${cpa[4]}`, value: `${nobe[4]}` },
								{ name: `${cpa[5]}`, value: `${nobe[5]}` },
								{ name: `${cpa[6]}`, value: `${nobe[6]}` }
							)
							.setImage(topimage)
							.setFooter('Join the thread to play!');
					else if (a.length == 8)
						initial1 = new MessageEmbed()
							.setColor('#36393F')
							.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
							.setDescription(`${disp.join('\n')}`)
							.addFields(
								{ name: `${cpa[0]}`, value: `${nobe[0]}` },
								{ name: `${cpa[1]}`, value: `${nobe[1]}` },
								{ name: `${cpa[2]}`, value: `${nobe[2]}` },
								{ name: `${cpa[3]}`, value: `${nobe[3]}` },
								{ name: `${cpa[4]}`, value: `${nobe[4]}` },
								{ name: `${cpa[5]}`, value: `${nobe[5]}` },
								{ name: `${cpa[6]}`, value: `${nobe[6]}` },
								{ name: `${cpa[7]}`, value: `${nobe[7]}` }
							)
							.setImage(topimage)
							.setFooter('Join the thread to play!');
					else if (a.length == 9)
						initial1 = new MessageEmbed()
							.setColor('#36393F')
							.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
							.setDescription(`${disp.join('\n')}`)
							.addFields(
								{ name: `${cpa[0]}`, value: `${nobe[0]}` },
								{ name: `${cpa[1]}`, value: `${nobe[1]}` },
								{ name: `${cpa[2]}`, value: `${nobe[2]}` },
								{ name: `${cpa[3]}`, value: `${nobe[3]}` },
								{ name: `${cpa[4]}`, value: `${nobe[4]}` },
								{ name: `${cpa[5]}`, value: `${nobe[5]}` },
								{ name: `${cpa[6]}`, value: `${nobe[6]}` },
								{ name: `${cpa[7]}`, value: `${nobe[7]}` },
								{ name: `${cpa[8]}`, value: `${nobe[8]}` }
							)
							.setImage(topimage)
							.setFooter('Join the thread to play!');
					else if (a.length == 10)
						initial1 = new MessageEmbed()
							.setColor('#36393F')
							.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
							.setDescription(`${disp.join('\n')}`)
							.addFields(
								{ name: `${cpa[0]}`, value: `${nobe[0]}` },
								{ name: `${cpa[1]}`, value: `${nobe[1]}` },
								{ name: `${cpa[2]}`, value: `${nobe[2]}` },
								{ name: `${cpa[3]}`, value: `${nobe[3]}` },
								{ name: `${cpa[4]}`, value: `${nobe[4]}` },
								{ name: `${cpa[5]}`, value: `${nobe[5]}` },
								{ name: `${cpa[6]}`, value: `${nobe[6]}` },
								{ name: `${cpa[7]}`, value: `${nobe[7]}` },
								{ name: `${cpa[8]}`, value: `${nobe[8]}` },
								{ name: `${cpa[9]}`, value: `${nobe[9]}` }
							)
							.setImage(topimage)
							.setFooter('Join the thread to play!');
					else if (a.length == 11)
						initial1 = new MessageEmbed()
							.setColor('#36393F')
							.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
							.setDescription(`${disp.join('\n')}`)
							.addFields(
								{ name: `${cpa[0]}`, value: `${nobe[0]}` },
								{ name: `${cpa[1]}`, value: `${nobe[1]}` },
								{ name: `${cpa[2]}`, value: `${nobe[2]}` },
								{ name: `${cpa[3]}`, value: `${nobe[3]}` },
								{ name: `${cpa[4]}`, value: `${nobe[4]}` },
								{ name: `${cpa[5]}`, value: `${nobe[5]}` },
								{ name: `${cpa[6]}`, value: `${nobe[6]}` },
								{ name: `${cpa[7]}`, value: `${nobe[7]}` },
								{ name: `${cpa[8]}`, value: `${nobe[8]}` },
								{ name: `${cpa[9]}`, value: `${nobe[9]}` },
								{ name: `${cpa[10]}`, value: `${nobe[10]}` }
							)
							.setImage(topimage)
							.setFooter('Join the thread to play!');
					else if (a.length == 12)
						initial1 = new MessageEmbed()
							.setColor('#36393F')
							.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
							.setDescription(`${disp.join('\n')}`)
							.addFields(
								{ name: `${cpa[0]}`, value: `${nobe[0]}` },
								{ name: `${cpa[1]}`, value: `${nobe[1]}` },
								{ name: `${cpa[2]}`, value: `${nobe[2]}` },
								{ name: `${cpa[3]}`, value: `${nobe[3]}` },
								{ name: `${cpa[4]}`, value: `${nobe[4]}` },
								{ name: `${cpa[5]}`, value: `${nobe[5]}` },
								{ name: `${cpa[6]}`, value: `${nobe[6]}` },
								{ name: `${cpa[7]}`, value: `${nobe[7]}` },
								{ name: `${cpa[8]}`, value: `${nobe[8]}` },
								{ name: `${cpa[9]}`, value: `${nobe[9]}` },
								{ name: `${cpa[10]}`, value: `${nobe[10]}` },
								{ name: `${cpa[11]}`, value: `${nobe[11]}` }
							)
							.setImage(topimage)
							.setFooter('Join the thread to play!');
					else if (a.length == 13)
						initial1 = new MessageEmbed()
							.setColor('#36393F')
							.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
							.setDescription(`${disp.join('\n')}`)
							.addFields(
								{ name: `${cpa[0]}`, value: `${nobe[0]}` },
								{ name: `${cpa[1]}`, value: `${nobe[1]}` },
								{ name: `${cpa[2]}`, value: `${nobe[2]}` },
								{ name: `${cpa[3]}`, value: `${nobe[3]}` },
								{ name: `${cpa[4]}`, value: `${nobe[4]}` },
								{ name: `${cpa[5]}`, value: `${nobe[5]}` },
								{ name: `${cpa[6]}`, value: `${nobe[6]}` },
								{ name: `${cpa[7]}`, value: `${nobe[7]}` },
								{ name: `${cpa[8]}`, value: `${nobe[8]}` },
								{ name: `${cpa[9]}`, value: `${nobe[9]}` },
								{ name: `${cpa[10]}`, value: `${nobe[10]}` },
								{ name: `${cpa[11]}`, value: `${nobe[11]}` },
								{ name: `${cpa[12]}`, value: `${nobe[12]}` }
							)
							.setImage(topimage)
							.setFooter('Join the thread to play!');
					else if (a.length == 14)
						initial1 = new MessageEmbed()
							.setColor('#36393F')
							.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
							.setDescription(`${disp.join('\n')}`)
							.addFields(
								{ name: `${cpa[0]}`, value: `${nobe[0]}` },
								{ name: `${cpa[1]}`, value: `${nobe[1]}` },
								{ name: `${cpa[2]}`, value: `${nobe[2]}` },
								{ name: `${cpa[3]}`, value: `${nobe[3]}` },
								{ name: `${cpa[4]}`, value: `${nobe[4]}` },
								{ name: `${cpa[5]}`, value: `${nobe[5]}` },
								{ name: `${cpa[6]}`, value: `${nobe[6]}` },
								{ name: `${cpa[7]}`, value: `${nobe[7]}` },
								{ name: `${cpa[8]}`, value: `${nobe[8]}` },
								{ name: `${cpa[9]}`, value: `${nobe[9]}` },
								{ name: `${cpa[10]}`, value: `${nobe[10]}` },
								{ name: `${cpa[11]}`, value: `${nobe[11]}` },
								{ name: `${cpa[12]}`, value: `${nobe[12]}` },
								{ name: `${cpa[13]}`, value: `${nobe[13]}` }
							)
							.setImage(topimage)
							.setFooter('Join the thread to play!');
					else if (a.length == 15)
						initial1 = new MessageEmbed()
							.setColor('#36393F')
							.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
							.setDescription(`${disp.join('\n')}`)
							.addFields(
								{ name: `${cpa[0]}`, value: `${nobe[0]}` },
								{ name: `${cpa[1]}`, value: `${nobe[1]}` },
								{ name: `${cpa[2]}`, value: `${nobe[2]}` },
								{ name: `${cpa[3]}`, value: `${nobe[3]}` },
								{ name: `${cpa[4]}`, value: `${nobe[4]}` },
								{ name: `${cpa[5]}`, value: `${nobe[5]}` },
								{ name: `${cpa[6]}`, value: `${nobe[6]}` },
								{ name: `${cpa[7]}`, value: `${nobe[7]}` },
								{ name: `${cpa[8]}`, value: `${nobe[8]}` },
								{ name: `${cpa[9]}`, value: `${nobe[9]}` },
								{ name: `${cpa[10]}`, value: `${nobe[10]}` },
								{ name: `${cpa[11]}`, value: `${nobe[11]}` },
								{ name: `${cpa[12]}`, value: `${nobe[12]}` },
								{ name: `${cpa[13]}`, value: `${nobe[13]}` },
								{ name: `${cpa[14]}`, value: `${nobe[14]}` }
							)
							.setImage(topimage)
							.setFooter('Join the thread to play!');
					else if (a.length == 16)
						initial1 = new MessageEmbed()
							.setColor('#36393F')
							.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
							.setDescription(`${disp.join('\n')}`)
							.addFields(
								{ name: `${cpa[0]}`, value: `${nobe[0]}` },
								{ name: `${cpa[1]}`, value: `${nobe[1]}` },
								{ name: `${cpa[2]}`, value: `${nobe[2]}` },
								{ name: `${cpa[3]}`, value: `${nobe[3]}` },
								{ name: `${cpa[4]}`, value: `${nobe[4]}` },
								{ name: `${cpa[5]}`, value: `${nobe[5]}` },
								{ name: `${cpa[6]}`, value: `${nobe[6]}` },
								{ name: `${cpa[7]}`, value: `${nobe[7]}` },
								{ name: `${cpa[8]}`, value: `${nobe[8]}` },
								{ name: `${cpa[9]}`, value: `${nobe[9]}` },
								{ name: `${cpa[10]}`, value: `${nobe[10]}` },
								{ name: `${cpa[11]}`, value: `${nobe[11]}` },
								{ name: `${cpa[12]}`, value: `${nobe[12]}` },
								{ name: `${cpa[13]}`, value: `${nobe[13]}` },
								{ name: `${cpa[14]}`, value: `${nobe[14]}` },
								{ name: `${cpa[15]}`, value: `${nobe[15]}` }
							)
							.setImage(topimage)
							.setFooter('Join the thread to play!');
					else if (a.length == 17)
						initial1 = new MessageEmbed()
							.setColor('#36393F')
							.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
							.setDescription(`${disp.join('\n')}`)
							.addFields(
								{ name: `${cpa[0]}`, value: `${nobe[0]}` },
								{ name: `${cpa[1]}`, value: `${nobe[1]}` },
								{ name: `${cpa[2]}`, value: `${nobe[2]}` },
								{ name: `${cpa[3]}`, value: `${nobe[3]}` },
								{ name: `${cpa[4]}`, value: `${nobe[4]}` },
								{ name: `${cpa[5]}`, value: `${nobe[5]}` },
								{ name: `${cpa[6]}`, value: `${nobe[6]}` },
								{ name: `${cpa[7]}`, value: `${nobe[7]}` },
								{ name: `${cpa[8]}`, value: `${nobe[8]}` },
								{ name: `${cpa[9]}`, value: `${nobe[9]}` },
								{ name: `${cpa[10]}`, value: `${nobe[10]}` },
								{ name: `${cpa[11]}`, value: `${nobe[11]}` },
								{ name: `${cpa[12]}`, value: `${nobe[12]}` },
								{ name: `${cpa[13]}`, value: `${nobe[13]}` },
								{ name: `${cpa[14]}`, value: `${nobe[14]}` },
								{ name: `${cpa[15]}`, value: `${nobe[15]}` },
								{ name: `${cpa[16]}`, value: `${nobe[16]}` }
							)
							.setImage(topimage)
							.setFooter('Join the thread to play!');
					else if (a.length == 18)
						initial1 = new MessageEmbed()
							.setColor('#36393F')
							.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
							.setDescription(`${disp.join('\n')}`)
							.addFields(
								{ name: `${cpa[0]}`, value: `${nobe[0]}` },
								{ name: `${cpa[1]}`, value: `${nobe[1]}` },
								{ name: `${cpa[2]}`, value: `${nobe[2]}` },
								{ name: `${cpa[3]}`, value: `${nobe[3]}` },
								{ name: `${cpa[4]}`, value: `${nobe[4]}` },
								{ name: `${cpa[5]}`, value: `${nobe[5]}` },
								{ name: `${cpa[6]}`, value: `${nobe[6]}` },
								{ name: `${cpa[7]}`, value: `${nobe[7]}` },
								{ name: `${cpa[8]}`, value: `${nobe[8]}` },
								{ name: `${cpa[9]}`, value: `${nobe[9]}` },
								{ name: `${cpa[10]}`, value: `${nobe[10]}` },
								{ name: `${cpa[11]}`, value: `${nobe[11]}` },
								{ name: `${cpa[12]}`, value: `${nobe[12]}` },
								{ name: `${cpa[13]}`, value: `${nobe[13]}` },
								{ name: `${cpa[14]}`, value: `${nobe[14]}` },
								{ name: `${cpa[15]}`, value: `${nobe[15]}` },
								{ name: `${cpa[16]}`, value: `${nobe[16]}` },
								{ name: `${cpa[17]}`, value: `${nobe[17]}` }
							)
							.setImage(topimage)
							.setFooter('Join the thread to play!');
					else if (a.length == 19)
						initial1 = new MessageEmbed()
							.setColor('#36393F')
							.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
							.setDescription(`${disp.join('\n')}`)
							.addFields(
								{ name: `${cpa[0]}`, value: `${nobe[0]}` },
								{ name: `${cpa[1]}`, value: `${nobe[1]}` },
								{ name: `${cpa[2]}`, value: `${nobe[2]}` },
								{ name: `${cpa[3]}`, value: `${nobe[3]}` },
								{ name: `${cpa[4]}`, value: `${nobe[4]}` },
								{ name: `${cpa[5]}`, value: `${nobe[5]}` },
								{ name: `${cpa[6]}`, value: `${nobe[6]}` },
								{ name: `${cpa[7]}`, value: `${nobe[7]}` },
								{ name: `${cpa[8]}`, value: `${nobe[8]}` },
								{ name: `${cpa[9]}`, value: `${nobe[9]}` },
								{ name: `${cpa[10]}`, value: `${nobe[10]}` },
								{ name: `${cpa[11]}`, value: `${nobe[11]}` },
								{ name: `${cpa[12]}`, value: `${nobe[12]}` },
								{ name: `${cpa[13]}`, value: `${nobe[13]}` },
								{ name: `${cpa[14]}`, value: `${nobe[14]}` },
								{ name: `${cpa[15]}`, value: `${nobe[15]}` },
								{ name: `${cpa[16]}`, value: `${nobe[16]}` },
								{ name: `${cpa[17]}`, value: `${nobe[17]}` },
								{ name: `${cpa[18]}`, value: `${nobe[18]}` }
							)
							.setImage(topimage)
							.setFooter('Join the thread to play!');
					else if (a.length == 20)
						initial1 = new MessageEmbed()
							.setColor('#36393F')
							.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
							.setDescription(`${disp.join('\n')}`)
							.addFields(
								{ name: `${cpa[0]}`, value: `${nobe[0]}` },
								{ name: `${cpa[1]}`, value: `${nobe[1]}` },
								{ name: `${cpa[2]}`, value: `${nobe[2]}` },
								{ name: `${cpa[3]}`, value: `${nobe[3]}` },
								{ name: `${cpa[4]}`, value: `${nobe[4]}` },
								{ name: `${cpa[5]}`, value: `${nobe[5]}` },
								{ name: `${cpa[6]}`, value: `${nobe[6]}` },
								{ name: `${cpa[7]}`, value: `${nobe[7]}` },
								{ name: `${cpa[8]}`, value: `${nobe[8]}` },
								{ name: `${cpa[9]}`, value: `${nobe[9]}` },
								{ name: `${cpa[10]}`, value: `${nobe[10]}` },
								{ name: `${cpa[11]}`, value: `${nobe[11]}` },
								{ name: `${cpa[12]}`, value: `${nobe[12]}` },
								{ name: `${cpa[13]}`, value: `${nobe[13]}` },
								{ name: `${cpa[14]}`, value: `${nobe[14]}` },
								{ name: `${cpa[15]}`, value: `${nobe[15]}` },
								{ name: `${cpa[16]}`, value: `${nobe[16]}` },
								{ name: `${cpa[17]}`, value: `${nobe[17]}` },
								{ name: `${cpa[18]}`, value: `${nobe[18]}` },
								{ name: `${cpa[19]}`, value: `${nobe[19]}` }
							)
							.setImage(topimage)
							.setFooter('Join the thread to play!');
					else if (a.length == 21)
						initial1 = new MessageEmbed()
							.setColor('#36393F')
							.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
							.setDescription(`${disp.join('\n')}`)
							.addFields(
								{ name: `${cpa[0]}`, value: `${nobe[0]}` },
								{ name: `${cpa[1]}`, value: `${nobe[1]}` },
								{ name: `${cpa[2]}`, value: `${nobe[2]}` },
								{ name: `${cpa[3]}`, value: `${nobe[3]}` },
								{ name: `${cpa[4]}`, value: `${nobe[4]}` },
								{ name: `${cpa[5]}`, value: `${nobe[5]}` },
								{ name: `${cpa[6]}`, value: `${nobe[6]}` },
								{ name: `${cpa[7]}`, value: `${nobe[7]}` },
								{ name: `${cpa[8]}`, value: `${nobe[8]}` },
								{ name: `${cpa[9]}`, value: `${nobe[9]}` },
								{ name: `${cpa[10]}`, value: `${nobe[10]}` },
								{ name: `${cpa[11]}`, value: `${nobe[11]}` },
								{ name: `${cpa[12]}`, value: `${nobe[12]}` },
								{ name: `${cpa[13]}`, value: `${nobe[13]}` },
								{ name: `${cpa[14]}`, value: `${nobe[14]}` },
								{ name: `${cpa[15]}`, value: `${nobe[15]}` },
								{ name: `${cpa[16]}`, value: `${nobe[16]}` },
								{ name: `${cpa[17]}`, value: `${nobe[17]}` },
								{ name: `${cpa[18]}`, value: `${nobe[18]}` },
								{ name: `${cpa[19]}`, value: `${nobe[19]}` },
								{ name: `${cpa[20]}`, value: `${nobe[20]}` }
							)
							.setImage(topimage)
							.setFooter('Join the thread to play!');
					else if (a.length == 22)
						initial1 = new MessageEmbed()
							.setColor('#36393F')
							.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
							.setDescription(`${disp.join('\n')}`)
							.addFields(
								{ name: `${cpa[0]}`, value: `${nobe[0]}` },
								{ name: `${cpa[1]}`, value: `${nobe[1]}` },
								{ name: `${cpa[2]}`, value: `${nobe[2]}` },
								{ name: `${cpa[3]}`, value: `${nobe[3]}` },
								{ name: `${cpa[4]}`, value: `${nobe[4]}` },
								{ name: `${cpa[5]}`, value: `${nobe[5]}` },
								{ name: `${cpa[6]}`, value: `${nobe[6]}` },
								{ name: `${cpa[7]}`, value: `${nobe[7]}` },
								{ name: `${cpa[8]}`, value: `${nobe[8]}` },
								{ name: `${cpa[9]}`, value: `${nobe[9]}` },
								{ name: `${cpa[10]}`, value: `${nobe[10]}` },
								{ name: `${cpa[11]}`, value: `${nobe[11]}` },
								{ name: `${cpa[12]}`, value: `${nobe[12]}` },
								{ name: `${cpa[13]}`, value: `${nobe[13]}` },
								{ name: `${cpa[14]}`, value: `${nobe[14]}` },
								{ name: `${cpa[15]}`, value: `${nobe[15]}` },
								{ name: `${cpa[16]}`, value: `${nobe[16]}` },
								{ name: `${cpa[17]}`, value: `${nobe[17]}` },
								{ name: `${cpa[18]}`, value: `${nobe[18]}` },
								{ name: `${cpa[19]}`, value: `${nobe[19]}` },
								{ name: `${cpa[20]}`, value: `${nobe[20]}` },
								{ name: `${cpa[21]}`, value: `${nobe[21]}` }
							)
							.setImage(topimage)
							.setFooter('Join the thread to play!');
					else if (a.length == 23)
						initial1 = new MessageEmbed()
							.setColor('#36393F')
							.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
							.setDescription(`${disp.join('\n')}`)
							.addFields(
								{ name: `${cpa[0]}`, value: `${nobe[0]}` },
								{ name: `${cpa[1]}`, value: `${nobe[1]}` },
								{ name: `${cpa[2]}`, value: `${nobe[2]}` },
								{ name: `${cpa[3]}`, value: `${nobe[3]}` },
								{ name: `${cpa[4]}`, value: `${nobe[4]}` },
								{ name: `${cpa[5]}`, value: `${nobe[5]}` },
								{ name: `${cpa[6]}`, value: `${nobe[6]}` },
								{ name: `${cpa[7]}`, value: `${nobe[7]}` },
								{ name: `${cpa[8]}`, value: `${nobe[8]}` },
								{ name: `${cpa[9]}`, value: `${nobe[9]}` },
								{ name: `${cpa[10]}`, value: `${nobe[10]}` },
								{ name: `${cpa[11]}`, value: `${nobe[11]}` },
								{ name: `${cpa[12]}`, value: `${nobe[12]}` },
								{ name: `${cpa[13]}`, value: `${nobe[13]}` },
								{ name: `${cpa[14]}`, value: `${nobe[14]}` },
								{ name: `${cpa[15]}`, value: `${nobe[15]}` },
								{ name: `${cpa[16]}`, value: `${nobe[16]}` },
								{ name: `${cpa[17]}`, value: `${nobe[17]}` },
								{ name: `${cpa[18]}`, value: `${nobe[18]}` },
								{ name: `${cpa[19]}`, value: `${nobe[19]}` },
								{ name: `${cpa[20]}`, value: `${nobe[20]}` },
								{ name: `${cpa[21]}`, value: `${nobe[21]}` },
								{ name: `${cpa[22]}`, value: `${nobe[22]}` }
							)
							.setImage(topimage)
							.setFooter('Join the thread to play!');
					else if (a.length == 24)
						initial1 = new MessageEmbed()
							.setColor('#36393F')
							.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
							.setDescription(`${disp.join('\n')}`)
							.addFields(
								{ name: `${cpa[0]}`, value: `${nobe[0]}` },
								{ name: `${cpa[1]}`, value: `${nobe[1]}` },
								{ name: `${cpa[2]}`, value: `${nobe[2]}` },
								{ name: `${cpa[3]}`, value: `${nobe[3]}` },
								{ name: `${cpa[4]}`, value: `${nobe[4]}` },
								{ name: `${cpa[5]}`, value: `${nobe[5]}` },
								{ name: `${cpa[6]}`, value: `${nobe[6]}` },
								{ name: `${cpa[7]}`, value: `${nobe[7]}` },
								{ name: `${cpa[8]}`, value: `${nobe[8]}` },
								{ name: `${cpa[9]}`, value: `${nobe[9]}` },
								{ name: `${cpa[10]}`, value: `${nobe[10]}` },
								{ name: `${cpa[11]}`, value: `${nobe[11]}` },
								{ name: `${cpa[12]}`, value: `${nobe[12]}` },
								{ name: `${cpa[13]}`, value: `${nobe[13]}` },
								{ name: `${cpa[14]}`, value: `${nobe[14]}` },
								{ name: `${cpa[15]}`, value: `${nobe[15]}` },
								{ name: `${cpa[16]}`, value: `${nobe[16]}` },
								{ name: `${cpa[17]}`, value: `${nobe[17]}` },
								{ name: `${cpa[18]}`, value: `${nobe[18]}` },
								{ name: `${cpa[19]}`, value: `${nobe[19]}` },
								{ name: `${cpa[20]}`, value: `${nobe[20]}` },
								{ name: `${cpa[21]}`, value: `${nobe[21]}` },
								{ name: `${cpa[22]}`, value: `${nobe[22]}` },
								{ name: `${cpa[23]}`, value: `${nobe[23]}` }
							)
							.setImage(topimage)
							.setFooter('Join the thread to play!');
					else if (a.length == 25)
						initial1 = new MessageEmbed()
							.setColor('#36393F')
							.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
							.setDescription(`${disp.join('\n')}`)
							.addFields(
								{ name: `${cpa[0]}`, value: `${nobe[0]}` },
								{ name: `${cpa[1]}`, value: `${nobe[1]}` },
								{ name: `${cpa[2]}`, value: `${nobe[2]}` },
								{ name: `${cpa[3]}`, value: `${nobe[3]}` },
								{ name: `${cpa[4]}`, value: `${nobe[4]}` },
								{ name: `${cpa[5]}`, value: `${nobe[5]}` },
								{ name: `${cpa[6]}`, value: `${nobe[6]}` },
								{ name: `${cpa[7]}`, value: `${nobe[7]}` },
								{ name: `${cpa[8]}`, value: `${nobe[8]}` },
								{ name: `${cpa[9]}`, value: `${nobe[9]}` },
								{ name: `${cpa[10]}`, value: `${nobe[10]}` },
								{ name: `${cpa[11]}`, value: `${nobe[11]}` },
								{ name: `${cpa[12]}`, value: `${nobe[12]}` },
								{ name: `${cpa[13]}`, value: `${nobe[13]}` },
								{ name: `${cpa[14]}`, value: `${nobe[14]}` },
								{ name: `${cpa[15]}`, value: `${nobe[15]}` },
								{ name: `${cpa[16]}`, value: `${nobe[16]}` },
								{ name: `${cpa[17]}`, value: `${nobe[17]}` },
								{ name: `${cpa[18]}`, value: `${nobe[18]}` },
								{ name: `${cpa[19]}`, value: `${nobe[19]}` },
								{ name: `${cpa[20]}`, value: `${nobe[20]}` },
								{ name: `${cpa[21]}`, value: `${nobe[21]}` },
								{ name: `${cpa[22]}`, value: `${nobe[22]}` },
								{ name: `${cpa[23]}`, value: `${nobe[23]}` },
								{ name: `${cpa[24]}`, value: `${nobe[24]}` }

							)
							.setImage(topimage)
							.setFooter('Join the thread to play!');

					crbe = new MessageEmbed()
						.setColor('#36393F')
						.setTitle(`:green_circle: ${a[Args.user]}'s turn`)
						.setTimestamp();
					klm.edit({ embeds: [initial1, crbe] });
					if (aid[Args.user] == 'bot') {
						return unobot(klm);
					}
				}

			}
			//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
			async function winc(m) {
				if (a.length == 1)
					initial1 = new MessageEmbed()
						.setColor('#36393F')
						.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
						.setDescription(`${disp.join('\n')}`)
						.addFields(
							{ name: `${cpa[0]}`, value: `${nobe[0]}` }
						)

						.setImage(topimage)
						.setFooter('Game Over!');
				else if (a.length == 2)
					initial1 = new MessageEmbed()
						.setColor('#36393F')
						.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
						.setDescription(`${disp.join('\n')}`)
						.addFields(
							{ name: `${cpa[0]}`, value: `${nobe[0]}` },
							{ name: `${cpa[1]}`, value: `${nobe[1]}` }
						)

						.setImage(topimage)
						.setFooter('Game Over!');
				else if (a.length == 3)
					initial1 = new MessageEmbed()
						.setColor('#36393F')
						.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
						.setDescription(`${disp.join('\n')}`)
						.addFields(
							{ name: `${cpa[0]}`, value: `${nobe[0]}` },
							{ name: `${cpa[1]}`, value: `${nobe[1]}` },
							{ name: `${cpa[2]}`, value: `${nobe[2]}` }
						)
						.setImage(topimage)
						.setFooter('Game Over!');
				else if (a.length == 4)
					initial1 = new MessageEmbed()
						.setColor('#36393F')
						.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
						.setDescription(`${disp.join('\n')}`)
						.addFields(
							{ name: `${cpa[0]}`, value: `${nobe[0]}` },
							{ name: `${cpa[1]}`, value: `${nobe[1]}` },
							{ name: `${cpa[2]}`, value: `${nobe[2]}` },
							{ name: `${cpa[3]}`, value: `${nobe[3]}` }
						)
						.setImage(topimage)
						.setFooter('Game Over!');
				else if (a.length == 5)
					initial1 = new MessageEmbed()
						.setColor('#36393F')
						.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
						.setDescription(`${disp.join('\n')}`)
						.addFields(
							{ name: `${cpa[0]}`, value: `${nobe[0]}` },
							{ name: `${cpa[1]}`, value: `${nobe[1]}` },
							{ name: `${cpa[2]}`, value: `${nobe[2]}` },
							{ name: `${cpa[3]}`, value: `${nobe[3]}` },
							{ name: `${cpa[4]}`, value: `${nobe[4]}` }
						)
						.setImage(topimage)
						.setFooter('Game Over!');
				else if (a.length == 6)
					initial1 = new MessageEmbed()
						.setColor('#36393F')
						.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
						.setDescription(`${disp.join('\n')}`)
						.addFields(
							{ name: `${cpa[0]}`, value: `${nobe[0]}` },
							{ name: `${cpa[1]}`, value: `${nobe[1]}` },
							{ name: `${cpa[2]}`, value: `${nobe[2]}` },
							{ name: `${cpa[3]}`, value: `${nobe[3]}` },
							{ name: `${cpa[4]}`, value: `${nobe[4]}` },
							{ name: `${cpa[5]}`, value: `${nobe[5]}` }
						)
						.setImage(topimage)
						.setFooter('Game Over!');
				else if (a.length == 7)
					initial1 = new MessageEmbed()
						.setColor('#36393F')
						.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
						.setDescription(`${disp.join('\n')}`)
						.addFields(
							{ name: `${cpa[0]}`, value: `${nobe[0]}` },
							{ name: `${cpa[1]}`, value: `${nobe[1]}` },
							{ name: `${cpa[2]}`, value: `${nobe[2]}` },
							{ name: `${cpa[3]}`, value: `${nobe[3]}` },
							{ name: `${cpa[4]}`, value: `${nobe[4]}` },
							{ name: `${cpa[5]}`, value: `${nobe[5]}` },
							{ name: `${cpa[6]}`, value: `${nobe[6]}` }
						)
						.setImage(topimage)
						.setFooter('Game Over!');
				else if (a.length == 8)
					initial1 = new MessageEmbed()
						.setColor('#36393F')
						.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
						.setDescription(`${disp.join('\n')}`)
						.addFields(
							{ name: `${cpa[0]}`, value: `${nobe[0]}` },
							{ name: `${cpa[1]}`, value: `${nobe[1]}` },
							{ name: `${cpa[2]}`, value: `${nobe[2]}` },
							{ name: `${cpa[3]}`, value: `${nobe[3]}` },
							{ name: `${cpa[4]}`, value: `${nobe[4]}` },
							{ name: `${cpa[5]}`, value: `${nobe[5]}` },
							{ name: `${cpa[6]}`, value: `${nobe[6]}` },
							{ name: `${cpa[7]}`, value: `${nobe[7]}` }
						)
						.setImage(topimage)
						.setFooter('Game Over!');
				else if (a.length == 9)
					initial1 = new MessageEmbed()
						.setColor('#36393F')
						.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
						.setDescription(`${disp.join('\n')}`)
						.addFields(
							{ name: `${cpa[0]}`, value: `${nobe[0]}` },
							{ name: `${cpa[1]}`, value: `${nobe[1]}` },
							{ name: `${cpa[2]}`, value: `${nobe[2]}` },
							{ name: `${cpa[3]}`, value: `${nobe[3]}` },
							{ name: `${cpa[4]}`, value: `${nobe[4]}` },
							{ name: `${cpa[5]}`, value: `${nobe[5]}` },
							{ name: `${cpa[6]}`, value: `${nobe[6]}` },
							{ name: `${cpa[7]}`, value: `${nobe[7]}` },
							{ name: `${cpa[8]}`, value: `${nobe[8]}` }
						)
						.setImage(topimage)
						.setFooter('Game Over!');
				else if (a.length == 10)
					initial1 = new MessageEmbed()
						.setColor('#36393F')
						.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
						.setDescription(`${disp.join('\n')}`)
						.addFields(
							{ name: `${cpa[0]}`, value: `${nobe[0]}` },
							{ name: `${cpa[1]}`, value: `${nobe[1]}` },
							{ name: `${cpa[2]}`, value: `${nobe[2]}` },
							{ name: `${cpa[3]}`, value: `${nobe[3]}` },
							{ name: `${cpa[4]}`, value: `${nobe[4]}` },
							{ name: `${cpa[5]}`, value: `${nobe[5]}` },
							{ name: `${cpa[6]}`, value: `${nobe[6]}` },
							{ name: `${cpa[7]}`, value: `${nobe[7]}` },
							{ name: `${cpa[8]}`, value: `${nobe[8]}` },
							{ name: `${cpa[9]}`, value: `${nobe[9]}` }
						)
						.setImage(topimage)
						.setFooter('Game Over!');
				else if (a.length == 11)
					initial1 = new MessageEmbed()
						.setColor('#36393F')
						.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
						.setDescription(`${disp.join('\n')}`)
						.addFields(
							{ name: `${cpa[0]}`, value: `${nobe[0]}` },
							{ name: `${cpa[1]}`, value: `${nobe[1]}` },
							{ name: `${cpa[2]}`, value: `${nobe[2]}` },
							{ name: `${cpa[3]}`, value: `${nobe[3]}` },
							{ name: `${cpa[4]}`, value: `${nobe[4]}` },
							{ name: `${cpa[5]}`, value: `${nobe[5]}` },
							{ name: `${cpa[6]}`, value: `${nobe[6]}` },
							{ name: `${cpa[7]}`, value: `${nobe[7]}` },
							{ name: `${cpa[8]}`, value: `${nobe[8]}` },
							{ name: `${cpa[9]}`, value: `${nobe[9]}` },
							{ name: `${cpa[10]}`, value: `${nobe[10]}` }
						)
						.setImage(topimage)
						.setFooter('Game Over!');
				else if (a.length == 12)
					initial1 = new MessageEmbed()
						.setColor('#36393F')
						.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
						.setDescription(`${disp.join('\n')}`)
						.addFields(
							{ name: `${cpa[0]}`, value: `${nobe[0]}` },
							{ name: `${cpa[1]}`, value: `${nobe[1]}` },
							{ name: `${cpa[2]}`, value: `${nobe[2]}` },
							{ name: `${cpa[3]}`, value: `${nobe[3]}` },
							{ name: `${cpa[4]}`, value: `${nobe[4]}` },
							{ name: `${cpa[5]}`, value: `${nobe[5]}` },
							{ name: `${cpa[6]}`, value: `${nobe[6]}` },
							{ name: `${cpa[7]}`, value: `${nobe[7]}` },
							{ name: `${cpa[8]}`, value: `${nobe[8]}` },
							{ name: `${cpa[9]}`, value: `${nobe[9]}` },
							{ name: `${cpa[10]}`, value: `${nobe[10]}` },
							{ name: `${cpa[11]}`, value: `${nobe[11]}` }
						)
						.setImage(topimage)
						.setFooter('Game Over!');
				else if (a.length == 13)
					initial1 = new MessageEmbed()
						.setColor('#36393F')
						.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
						.setDescription(`${disp.join('\n')}`)
						.addFields(
							{ name: `${cpa[0]}`, value: `${nobe[0]}` },
							{ name: `${cpa[1]}`, value: `${nobe[1]}` },
							{ name: `${cpa[2]}`, value: `${nobe[2]}` },
							{ name: `${cpa[3]}`, value: `${nobe[3]}` },
							{ name: `${cpa[4]}`, value: `${nobe[4]}` },
							{ name: `${cpa[5]}`, value: `${nobe[5]}` },
							{ name: `${cpa[6]}`, value: `${nobe[6]}` },
							{ name: `${cpa[7]}`, value: `${nobe[7]}` },
							{ name: `${cpa[8]}`, value: `${nobe[8]}` },
							{ name: `${cpa[9]}`, value: `${nobe[9]}` },
							{ name: `${cpa[10]}`, value: `${nobe[10]}` },
							{ name: `${cpa[11]}`, value: `${nobe[11]}` },
							{ name: `${cpa[12]}`, value: `${nobe[12]}` }
						)
						.setImage(topimage)
						.setFooter('Game Over!');
				else if (a.length == 14)
					initial1 = new MessageEmbed()
						.setColor('#36393F')
						.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
						.setDescription(`${disp.join('\n')}`)
						.addFields(
							{ name: `${cpa[0]}`, value: `${nobe[0]}` },
							{ name: `${cpa[1]}`, value: `${nobe[1]}` },
							{ name: `${cpa[2]}`, value: `${nobe[2]}` },
							{ name: `${cpa[3]}`, value: `${nobe[3]}` },
							{ name: `${cpa[4]}`, value: `${nobe[4]}` },
							{ name: `${cpa[5]}`, value: `${nobe[5]}` },
							{ name: `${cpa[6]}`, value: `${nobe[6]}` },
							{ name: `${cpa[7]}`, value: `${nobe[7]}` },
							{ name: `${cpa[8]}`, value: `${nobe[8]}` },
							{ name: `${cpa[9]}`, value: `${nobe[9]}` },
							{ name: `${cpa[10]}`, value: `${nobe[10]}` },
							{ name: `${cpa[11]}`, value: `${nobe[11]}` },
							{ name: `${cpa[12]}`, value: `${nobe[12]}` },
							{ name: `${cpa[13]}`, value: `${nobe[13]}` }
						)
						.setImage(topimage)
						.setFooter('Game Over!');
				else if (a.length == 15)
					initial1 = new MessageEmbed()
						.setColor('#36393F')
						.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
						.setDescription(`${disp.join('\n')}`)
						.addFields(
							{ name: `${cpa[0]}`, value: `${nobe[0]}` },
							{ name: `${cpa[1]}`, value: `${nobe[1]}` },
							{ name: `${cpa[2]}`, value: `${nobe[2]}` },
							{ name: `${cpa[3]}`, value: `${nobe[3]}` },
							{ name: `${cpa[4]}`, value: `${nobe[4]}` },
							{ name: `${cpa[5]}`, value: `${nobe[5]}` },
							{ name: `${cpa[6]}`, value: `${nobe[6]}` },
							{ name: `${cpa[7]}`, value: `${nobe[7]}` },
							{ name: `${cpa[8]}`, value: `${nobe[8]}` },
							{ name: `${cpa[9]}`, value: `${nobe[9]}` },
							{ name: `${cpa[10]}`, value: `${nobe[10]}` },
							{ name: `${cpa[11]}`, value: `${nobe[11]}` },
							{ name: `${cpa[12]}`, value: `${nobe[12]}` },
							{ name: `${cpa[13]}`, value: `${nobe[13]}` },
							{ name: `${cpa[14]}`, value: `${nobe[14]}` }
						)
						.setImage(topimage)
						.setFooter('Game Over!');
				else if (a.length == 16)
					initial1 = new MessageEmbed()
						.setColor('#36393F')
						.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
						.setDescription(`${disp.join('\n')}`)
						.addFields(
							{ name: `${cpa[0]}`, value: `${nobe[0]}` },
							{ name: `${cpa[1]}`, value: `${nobe[1]}` },
							{ name: `${cpa[2]}`, value: `${nobe[2]}` },
							{ name: `${cpa[3]}`, value: `${nobe[3]}` },
							{ name: `${cpa[4]}`, value: `${nobe[4]}` },
							{ name: `${cpa[5]}`, value: `${nobe[5]}` },
							{ name: `${cpa[6]}`, value: `${nobe[6]}` },
							{ name: `${cpa[7]}`, value: `${nobe[7]}` },
							{ name: `${cpa[8]}`, value: `${nobe[8]}` },
							{ name: `${cpa[9]}`, value: `${nobe[9]}` },
							{ name: `${cpa[10]}`, value: `${nobe[10]}` },
							{ name: `${cpa[11]}`, value: `${nobe[11]}` },
							{ name: `${cpa[12]}`, value: `${nobe[12]}` },
							{ name: `${cpa[13]}`, value: `${nobe[13]}` },
							{ name: `${cpa[14]}`, value: `${nobe[14]}` },
							{ name: `${cpa[15]}`, value: `${nobe[15]}` }
						)
						.setImage(topimage)
						.setFooter('Game Over!');
				else if (a.length == 17)
					initial1 = new MessageEmbed()
						.setColor('#36393F')
						.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
						.setDescription(`${disp.join('\n')}`)
						.addFields(
							{ name: `${cpa[0]}`, value: `${nobe[0]}` },
							{ name: `${cpa[1]}`, value: `${nobe[1]}` },
							{ name: `${cpa[2]}`, value: `${nobe[2]}` },
							{ name: `${cpa[3]}`, value: `${nobe[3]}` },
							{ name: `${cpa[4]}`, value: `${nobe[4]}` },
							{ name: `${cpa[5]}`, value: `${nobe[5]}` },
							{ name: `${cpa[6]}`, value: `${nobe[6]}` },
							{ name: `${cpa[7]}`, value: `${nobe[7]}` },
							{ name: `${cpa[8]}`, value: `${nobe[8]}` },
							{ name: `${cpa[9]}`, value: `${nobe[9]}` },
							{ name: `${cpa[10]}`, value: `${nobe[10]}` },
							{ name: `${cpa[11]}`, value: `${nobe[11]}` },
							{ name: `${cpa[12]}`, value: `${nobe[12]}` },
							{ name: `${cpa[13]}`, value: `${nobe[13]}` },
							{ name: `${cpa[14]}`, value: `${nobe[14]}` },
							{ name: `${cpa[15]}`, value: `${nobe[15]}` },
							{ name: `${cpa[16]}`, value: `${nobe[16]}` }
						)
						.setImage(topimage)
						.setFooter('Game Over!');
				else if (a.length == 18)
					initial1 = new MessageEmbed()
						.setColor('#36393F')
						.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
						.setDescription(`${disp.join('\n')}`)
						.addFields(
							{ name: `${cpa[0]}`, value: `${nobe[0]}` },
							{ name: `${cpa[1]}`, value: `${nobe[1]}` },
							{ name: `${cpa[2]}`, value: `${nobe[2]}` },
							{ name: `${cpa[3]}`, value: `${nobe[3]}` },
							{ name: `${cpa[4]}`, value: `${nobe[4]}` },
							{ name: `${cpa[5]}`, value: `${nobe[5]}` },
							{ name: `${cpa[6]}`, value: `${nobe[6]}` },
							{ name: `${cpa[7]}`, value: `${nobe[7]}` },
							{ name: `${cpa[8]}`, value: `${nobe[8]}` },
							{ name: `${cpa[9]}`, value: `${nobe[9]}` },
							{ name: `${cpa[10]}`, value: `${nobe[10]}` },
							{ name: `${cpa[11]}`, value: `${nobe[11]}` },
							{ name: `${cpa[12]}`, value: `${nobe[12]}` },
							{ name: `${cpa[13]}`, value: `${nobe[13]}` },
							{ name: `${cpa[14]}`, value: `${nobe[14]}` },
							{ name: `${cpa[15]}`, value: `${nobe[15]}` },
							{ name: `${cpa[16]}`, value: `${nobe[16]}` },
							{ name: `${cpa[17]}`, value: `${nobe[17]}` }
						)
						.setImage(topimage)
						.setFooter('Game Over!');
				else if (a.length == 19)
					initial1 = new MessageEmbed()
						.setColor('#36393F')
						.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
						.setDescription(`${disp.join('\n')}`)
						.addFields(
							{ name: `${cpa[0]}`, value: `${nobe[0]}` },
							{ name: `${cpa[1]}`, value: `${nobe[1]}` },
							{ name: `${cpa[2]}`, value: `${nobe[2]}` },
							{ name: `${cpa[3]}`, value: `${nobe[3]}` },
							{ name: `${cpa[4]}`, value: `${nobe[4]}` },
							{ name: `${cpa[5]}`, value: `${nobe[5]}` },
							{ name: `${cpa[6]}`, value: `${nobe[6]}` },
							{ name: `${cpa[7]}`, value: `${nobe[7]}` },
							{ name: `${cpa[8]}`, value: `${nobe[8]}` },
							{ name: `${cpa[9]}`, value: `${nobe[9]}` },
							{ name: `${cpa[10]}`, value: `${nobe[10]}` },
							{ name: `${cpa[11]}`, value: `${nobe[11]}` },
							{ name: `${cpa[12]}`, value: `${nobe[12]}` },
							{ name: `${cpa[13]}`, value: `${nobe[13]}` },
							{ name: `${cpa[14]}`, value: `${nobe[14]}` },
							{ name: `${cpa[15]}`, value: `${nobe[15]}` },
							{ name: `${cpa[16]}`, value: `${nobe[16]}` },
							{ name: `${cpa[17]}`, value: `${nobe[17]}` },
							{ name: `${cpa[18]}`, value: `${nobe[18]}` }
						)
						.setImage(topimage)
						.setFooter('Game Over!');
				else if (a.length == 20)
					initial1 = new MessageEmbed()
						.setColor('#36393F')
						.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
						.setDescription(`${disp.join('\n')}`)
						.addFields(
							{ name: `${cpa[0]}`, value: `${nobe[0]}` },
							{ name: `${cpa[1]}`, value: `${nobe[1]}` },
							{ name: `${cpa[2]}`, value: `${nobe[2]}` },
							{ name: `${cpa[3]}`, value: `${nobe[3]}` },
							{ name: `${cpa[4]}`, value: `${nobe[4]}` },
							{ name: `${cpa[5]}`, value: `${nobe[5]}` },
							{ name: `${cpa[6]}`, value: `${nobe[6]}` },
							{ name: `${cpa[7]}`, value: `${nobe[7]}` },
							{ name: `${cpa[8]}`, value: `${nobe[8]}` },
							{ name: `${cpa[9]}`, value: `${nobe[9]}` },
							{ name: `${cpa[10]}`, value: `${nobe[10]}` },
							{ name: `${cpa[11]}`, value: `${nobe[11]}` },
							{ name: `${cpa[12]}`, value: `${nobe[12]}` },
							{ name: `${cpa[13]}`, value: `${nobe[13]}` },
							{ name: `${cpa[14]}`, value: `${nobe[14]}` },
							{ name: `${cpa[15]}`, value: `${nobe[15]}` },
							{ name: `${cpa[16]}`, value: `${nobe[16]}` },
							{ name: `${cpa[17]}`, value: `${nobe[17]}` },
							{ name: `${cpa[18]}`, value: `${nobe[18]}` },
							{ name: `${cpa[19]}`, value: `${nobe[19]}` }
						)
						.setImage(topimage)
						.setFooter('Game Over!');
				else if (a.length == 21)
					initial1 = new MessageEmbed()
						.setColor('#36393F')
						.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
						.setDescription(`${disp.join('\n')}`)
						.addFields(
							{ name: `${cpa[0]}`, value: `${nobe[0]}` },
							{ name: `${cpa[1]}`, value: `${nobe[1]}` },
							{ name: `${cpa[2]}`, value: `${nobe[2]}` },
							{ name: `${cpa[3]}`, value: `${nobe[3]}` },
							{ name: `${cpa[4]}`, value: `${nobe[4]}` },
							{ name: `${cpa[5]}`, value: `${nobe[5]}` },
							{ name: `${cpa[6]}`, value: `${nobe[6]}` },
							{ name: `${cpa[7]}`, value: `${nobe[7]}` },
							{ name: `${cpa[8]}`, value: `${nobe[8]}` },
							{ name: `${cpa[9]}`, value: `${nobe[9]}` },
							{ name: `${cpa[10]}`, value: `${nobe[10]}` },
							{ name: `${cpa[11]}`, value: `${nobe[11]}` },
							{ name: `${cpa[12]}`, value: `${nobe[12]}` },
							{ name: `${cpa[13]}`, value: `${nobe[13]}` },
							{ name: `${cpa[14]}`, value: `${nobe[14]}` },
							{ name: `${cpa[15]}`, value: `${nobe[15]}` },
							{ name: `${cpa[16]}`, value: `${nobe[16]}` },
							{ name: `${cpa[17]}`, value: `${nobe[17]}` },
							{ name: `${cpa[18]}`, value: `${nobe[18]}` },
							{ name: `${cpa[19]}`, value: `${nobe[19]}` },
							{ name: `${cpa[20]}`, value: `${nobe[20]}` }
						)
						.setImage(topimage)
						.setFooter('Game Over!');
				else if (a.length == 22)
					initial1 = new MessageEmbed()
						.setColor('#36393F')
						.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
						.setDescription(`${disp.join('\n')}`)
						.addFields(
							{ name: `${cpa[0]}`, value: `${nobe[0]}` },
							{ name: `${cpa[1]}`, value: `${nobe[1]}` },
							{ name: `${cpa[2]}`, value: `${nobe[2]}` },
							{ name: `${cpa[3]}`, value: `${nobe[3]}` },
							{ name: `${cpa[4]}`, value: `${nobe[4]}` },
							{ name: `${cpa[5]}`, value: `${nobe[5]}` },
							{ name: `${cpa[6]}`, value: `${nobe[6]}` },
							{ name: `${cpa[7]}`, value: `${nobe[7]}` },
							{ name: `${cpa[8]}`, value: `${nobe[8]}` },
							{ name: `${cpa[9]}`, value: `${nobe[9]}` },
							{ name: `${cpa[10]}`, value: `${nobe[10]}` },
							{ name: `${cpa[11]}`, value: `${nobe[11]}` },
							{ name: `${cpa[12]}`, value: `${nobe[12]}` },
							{ name: `${cpa[13]}`, value: `${nobe[13]}` },
							{ name: `${cpa[14]}`, value: `${nobe[14]}` },
							{ name: `${cpa[15]}`, value: `${nobe[15]}` },
							{ name: `${cpa[16]}`, value: `${nobe[16]}` },
							{ name: `${cpa[17]}`, value: `${nobe[17]}` },
							{ name: `${cpa[18]}`, value: `${nobe[18]}` },
							{ name: `${cpa[19]}`, value: `${nobe[19]}` },
							{ name: `${cpa[20]}`, value: `${nobe[20]}` },
							{ name: `${cpa[21]}`, value: `${nobe[21]}` }
						)
						.setImage(topimage)
						.setFooter('Game Over!');
				else if (a.length == 23)
					initial1 = new MessageEmbed()
						.setColor('#36393F')
						.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
						.setDescription(`${disp.join('\n')}`)
						.addFields(
							{ name: `${cpa[0]}`, value: `${nobe[0]}` },
							{ name: `${cpa[1]}`, value: `${nobe[1]}` },
							{ name: `${cpa[2]}`, value: `${nobe[2]}` },
							{ name: `${cpa[3]}`, value: `${nobe[3]}` },
							{ name: `${cpa[4]}`, value: `${nobe[4]}` },
							{ name: `${cpa[5]}`, value: `${nobe[5]}` },
							{ name: `${cpa[6]}`, value: `${nobe[6]}` },
							{ name: `${cpa[7]}`, value: `${nobe[7]}` },
							{ name: `${cpa[8]}`, value: `${nobe[8]}` },
							{ name: `${cpa[9]}`, value: `${nobe[9]}` },
							{ name: `${cpa[10]}`, value: `${nobe[10]}` },
							{ name: `${cpa[11]}`, value: `${nobe[11]}` },
							{ name: `${cpa[12]}`, value: `${nobe[12]}` },
							{ name: `${cpa[13]}`, value: `${nobe[13]}` },
							{ name: `${cpa[14]}`, value: `${nobe[14]}` },
							{ name: `${cpa[15]}`, value: `${nobe[15]}` },
							{ name: `${cpa[16]}`, value: `${nobe[16]}` },
							{ name: `${cpa[17]}`, value: `${nobe[17]}` },
							{ name: `${cpa[18]}`, value: `${nobe[18]}` },
							{ name: `${cpa[19]}`, value: `${nobe[19]}` },
							{ name: `${cpa[20]}`, value: `${nobe[20]}` },
							{ name: `${cpa[21]}`, value: `${nobe[21]}` },
							{ name: `${cpa[22]}`, value: `${nobe[22]}` }
						)
						.setImage(topimage)
						.setFooter('Game Over!');
				else if (a.length == 24)
					initial1 = new MessageEmbed()
						.setColor('#36393F')
						.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
						.setDescription(`${disp.join('\n')}`)
						.addFields(
							{ name: `${cpa[0]}`, value: `${nobe[0]}` },
							{ name: `${cpa[1]}`, value: `${nobe[1]}` },
							{ name: `${cpa[2]}`, value: `${nobe[2]}` },
							{ name: `${cpa[3]}`, value: `${nobe[3]}` },
							{ name: `${cpa[4]}`, value: `${nobe[4]}` },
							{ name: `${cpa[5]}`, value: `${nobe[5]}` },
							{ name: `${cpa[6]}`, value: `${nobe[6]}` },
							{ name: `${cpa[7]}`, value: `${nobe[7]}` },
							{ name: `${cpa[8]}`, value: `${nobe[8]}` },
							{ name: `${cpa[9]}`, value: `${nobe[9]}` },
							{ name: `${cpa[10]}`, value: `${nobe[10]}` },
							{ name: `${cpa[11]}`, value: `${nobe[11]}` },
							{ name: `${cpa[12]}`, value: `${nobe[12]}` },
							{ name: `${cpa[13]}`, value: `${nobe[13]}` },
							{ name: `${cpa[14]}`, value: `${nobe[14]}` },
							{ name: `${cpa[15]}`, value: `${nobe[15]}` },
							{ name: `${cpa[16]}`, value: `${nobe[16]}` },
							{ name: `${cpa[17]}`, value: `${nobe[17]}` },
							{ name: `${cpa[18]}`, value: `${nobe[18]}` },
							{ name: `${cpa[19]}`, value: `${nobe[19]}` },
							{ name: `${cpa[20]}`, value: `${nobe[20]}` },
							{ name: `${cpa[21]}`, value: `${nobe[21]}` },
							{ name: `${cpa[22]}`, value: `${nobe[22]}` },
							{ name: `${cpa[23]}`, value: `${nobe[23]}` }
						)
						.setImage(topimage)
						.setFooter('Game Over!');
				else if (a.length == 25)
					initial1 = new MessageEmbed()
						.setColor('#36393F')
						.setTitle(`<:GreenDraw2:895311124529053736> UNO|Round ${roundno}`)
						.setDescription(`${disp.join('\n')}`)
						.addFields(
							{ name: `${cpa[0]}`, value: `${nobe[0]}` },
							{ name: `${cpa[1]}`, value: `${nobe[1]}` },
							{ name: `${cpa[2]}`, value: `${nobe[2]}` },
							{ name: `${cpa[3]}`, value: `${nobe[3]}` },
							{ name: `${cpa[4]}`, value: `${nobe[4]}` },
							{ name: `${cpa[5]}`, value: `${nobe[5]}` },
							{ name: `${cpa[6]}`, value: `${nobe[6]}` },
							{ name: `${cpa[7]}`, value: `${nobe[7]}` },
							{ name: `${cpa[8]}`, value: `${nobe[8]}` },
							{ name: `${cpa[9]}`, value: `${nobe[9]}` },
							{ name: `${cpa[10]}`, value: `${nobe[10]}` },
							{ name: `${cpa[11]}`, value: `${nobe[11]}` },
							{ name: `${cpa[12]}`, value: `${nobe[12]}` },
							{ name: `${cpa[13]}`, value: `${nobe[13]}` },
							{ name: `${cpa[14]}`, value: `${nobe[14]}` },
							{ name: `${cpa[15]}`, value: `${nobe[15]}` },
							{ name: `${cpa[16]}`, value: `${nobe[16]}` },
							{ name: `${cpa[17]}`, value: `${nobe[17]}` },
							{ name: `${cpa[18]}`, value: `${nobe[18]}` },
							{ name: `${cpa[19]}`, value: `${nobe[19]}` },
							{ name: `${cpa[20]}`, value: `${nobe[20]}` },
							{ name: `${cpa[21]}`, value: `${nobe[21]}` },
							{ name: `${cpa[22]}`, value: `${nobe[22]}` },
							{ name: `${cpa[23]}`, value: `${nobe[23]}` },
							{ name: `${cpa[24]}`, value: `${nobe[24]}` }

						)
						.setImage(topimage)
						.setFooter('Game Over!');
				await m.edit({ content: `${a[Args.user]} won!`, embeds: [initial1] });
			}











































































































		}
		collector.on("end", (collected, reason) => {
			if (reason == "time")

				unogame(m);

		})

	}


	if (commandName === 'settings') {
		if (!interaction.member.permissions.has(Permissions.FLAGS.ADMINISTRATOR)) {
			return interaction.reply({ content: `You don't have permissions to use this command!!!`, ephemeral: true })
		}
		const setembed = new MessageEmbed()

			.setTitle('Coco | Settings')
			.setColor('#36393F')
			.addFields(
				{ name: 'Overview', value: 'Use the buttons to navigate the settings menu!' },
				{ name: 'Scoreboard', value: 'Create, edit or delete the live updating scoreboard.' },
				{ name: 'Ranks', value: 'Create, edit or delete ranks on your server.' },
			);

		const buttonset1 = new MessageButton()
			.setCustomId('next')
			.setLabel('Scoreboard')
			.setStyle('PRIMARY');
		const buttonset2 = new MessageButton()
			.setCustomId('next1')
			.setLabel('Ranks')
			.setStyle('PRIMARY');

		const pot = new MessageActionRow().addComponents(buttonset1, buttonset2);

		await interaction.reply({ content: '\u200B', embeds: [setembed], components: [pot], ephemeral: true });
		//await wait(5000);
		sodium = await interaction.fetchReply();



		const collectorud = sodium.createMessageComponentCollector({
			type: "BUTTON",

			time: 300000
		});


		collectorud.on("collect", async (semi) => {
			//////////////////////////////////scoreboard////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
			if (semi.customId == 'next') {

				semi.deferUpdate();

				if (ldb == 0) {
					const setembed1 = new MessageEmbed()

						.setTitle('Coco | Settings')
						.setColor('#36393F')
						.addFields(
							{ name: 'Scoreboard', value: 'Create, edit or delete the live updating scoreboard from here.\n\nThere is no live scoreboard on this server. You can set one up here!' },
							{ name: 'Edit Score Limits', value: 'Change how many points each server member can gain with an activity each day, week or month.' },
							{ name: 'Change Decay', value: `Change how fast server members lose points due to inactivity.\n\nCurrent value: ${decayval} % / week` },
							{ name: 'Set Up', value: 'Sets up a new live updating scoreboard. Coco will create a new channel on your server that only contains the scoreboard.\nFor this command to work properly, ensure that Coco has the "Manage Channels" permission.' },
							{ name: '◀️ Back', value: 'Go back one page.' },

						);
					const buttonset1a = new MessageButton()
						.setCustomId('esl')
						.setLabel('Edit Score Limits')
						.setStyle('PRIMARY');
					const buttonset2a = new MessageButton()
						.setCustomId('cd')
						.setLabel('Change Decay')
						.setStyle('PRIMARY');
					const buttonset3a = new MessageButton()
						.setCustomId('seup')
						.setLabel('Set Up')
						.setStyle('SUCCESS');
					const buttonset1b = new MessageButton()
						.setCustomId('bck')
						.setLabel('Back')
						.setStyle('SECONDARY')
						.setEmoji('◀️');

					const r1 = new MessageActionRow().addComponents(buttonset1a, buttonset2a);
					const r2 = new MessageActionRow().addComponents(buttonset3a);
					const r3 = new MessageActionRow().addComponents(buttonset1b);
					interaction.editReply({ content: '\u200B', embeds: [setembed1], components: [r1, r2, r3] });
				}
				else {
					if (srlstatus == 0) {
						srlmsg = '🔴 Off';
					} else {
						srlmsg = '🟢 On';
					}
					const setembed1 = new MessageEmbed()

						.setTitle('Coco | Settings')
						.setColor('#36393F')
						.addFields(
							{ name: 'Scoreboard', value: 'Create, edit or delete the live updating scoreboard from here.\n\nThere is no live scoreboard on this server. You can set one up here!' },
							{ name: 'Edit Score Limits', value: 'Change how many points each server member can gain with an activity each day, week or month.' },
							{ name: 'Change Decay', value: `Change how fast server members lose points due to inactivity.\n\nCurrent value: ${decayval} % / week` },
							{ name: 'Change Size', value: `Change how many server members should be visible on the scoreboard.\n\nCurrent value: ${chsize} members` },
							{ name: 'Show Rank List', value: `Set whether the ranks are listed at the bottom of the scoreboard together with their minimum scores.\n\nCurrent state:  ${srlmsg}` },
							{ name: 'Remove', value: 'Removes the live updating scoreboard channel.' },
							{ name: '◀️ Back', value: 'Go back one page.' },

						);
					const buttonset1a = new MessageButton()
						.setCustomId('esl')
						.setLabel('Edit Score Limits')
						.setStyle('PRIMARY');
					const buttonset2a = new MessageButton()
						.setCustomId('cd')
						.setLabel('Change Decay')
						.setStyle('PRIMARY');
					const buttonset3a = new MessageButton()
						.setCustomId('csz')
						.setLabel('Change Size')
						.setStyle('PRIMARY');
					const buttonset3b = new MessageButton()
						.setCustomId('srl')
						.setLabel('Show Rank List')
						.setStyle('PRIMARY');
					const buttonset3c = new MessageButton()
						.setCustomId('rmv')
						.setLabel('Remove')
						.setStyle('DANGER');
					const buttonset1b = new MessageButton()
						.setCustomId('bck')
						.setLabel('Back')
						.setStyle('SECONDARY')
						.setEmoji('◀️');

					const r1 = new MessageActionRow().addComponents(buttonset1a, buttonset2a);
					const r2 = new MessageActionRow().addComponents(buttonset3a, buttonset3b);
					const r25 = new MessageActionRow().addComponents(buttonset3c);
					const r3 = new MessageActionRow().addComponents(buttonset1b);
					interaction.editReply({ content: '\u200B', embeds: [setembed1], components: [r1, r2, r25, r3] });

				}

			}
			///////////////////////////////////Rank///////////////////////////////////////////////////////////////////////////////////////////////////////////
			if (semi.customId == 'next1') {
				semi.deferUpdate();
				const allup3 = await Ranks.findAll();




				allup3.sort((a, b) => a.index - b.index)
					.map(user => {
						rank_index = user.index;

					}
					)
					.join('\n');
					if(rank_index<10){
						const setembed1 = new MessageEmbed()

						.setTitle('Coco | Settings')
						.setColor('#36393F')
						.addFields(
							{ name: 'Ranks', value: `Create, edit or delete ranks on \n\nYou have ${rank_index} ranks set up on your server!` },
							{ name: 'Add Rank', value: 'Add a new rank to your server.' },
							{ name: 'Edit Rank', value: 'Edit the name, threshold or role linked to an existing rank.' },
							
							{ name: '◀️ Back', value: 'Go back one page.' },
	
						);
					const buttonset1a = new MessageButton()
						.setCustomId('AR')
						.setLabel('Add Rank')
						.setStyle('PRIMARY');
					const buttonset2a = new MessageButton()
						.setCustomId('ER')
						.setLabel('Edit Rank')
						.setStyle('PRIMARY');
					const buttonset3a = new MessageButton()
						.setCustomId('seup')
						.setLabel('Dynamic Thresholds')
						.setStyle('SUCCESS');
					const buttonset1b = new MessageButton()
						.setCustomId('bck')
						.setLabel('Back')
						.setStyle('SECONDARY')
						.setEmoji('◀️');
	
					const r1 = new MessageActionRow().addComponents(buttonset1a, buttonset2a);
					const r2 = new MessageActionRow().addComponents(buttonset3a);
					const r3 = new MessageActionRow().addComponents(buttonset1b);
					interaction.editReply({ content: '\u200B', embeds: [setembed1], components: [r1,  r3] });
					}else {
						const setembed1 = new MessageEmbed()

					.setTitle('Coco | Settings')
					.setColor('#36393F')
					.addFields(
						{ name: 'Ranks', value: `Create, edit or delete ranks on \n\nYou have ${rank_index} ranks set up on your server!` },
						{ name: 'Edit Rank', value: 'Edit the name, threshold or role linked to an existing rank.' },
						
						{ name: '◀️ Back', value: 'Go back one page.' },

					);
				
				const buttonset2a = new MessageButton()
					.setCustomId('ER')
					.setLabel('Edit Rank')
					.setStyle('PRIMARY');
				const buttonset3a = new MessageButton()
					.setCustomId('seup')
					.setLabel('Dynamic Thresholds')
					.setStyle('SUCCESS');
				const buttonset1b = new MessageButton()
					.setCustomId('bck')
					.setLabel('Back')
					.setStyle('SECONDARY')
					.setEmoji('◀️');

				const r1 = new MessageActionRow().addComponents(buttonset2a);
				const r2 = new MessageActionRow().addComponents(buttonset3a);
				const r3 = new MessageActionRow().addComponents(buttonset1b);
				interaction.editReply({ content: '\u200B', embeds: [setembed1], components: [r1,  r3] });
					}
				



			}
			////////////////edit rank///////////////////////////////////////////////////////////////////////////////////////////////////
			if(semi.customId=='ER'){
				semi.deferUpdate();
				edit_rank_name = [];
				edit_rank_threshold = [];
				edit_rank_role = [];

				const allup3 = await Ranks.findAll();
                allup3.sort((a, b) => a.index - b.index)
					.map(user => {
						limit_index = user.index;

					}
					)
					.join('\n');
					for(limit_index_loop = 1; limit_index_loop<=limit_index; limit_index_loop++){
						 rank_its = await Ranks.findOne({ where: { index: limit_index_loop } });
						edit_rank_name[limit_index_loop]=	rank_its.get('name');
						edit_rank_threshold[limit_index_loop]=	rank_its.get('points');
						edit_rank_role[limit_index_loop]=	rank_its.get('role');
					}
if(limit_index==10){
	row_limit = new MessageActionRow()
	.addComponents(
		new MessageSelectMenu()
			.setCustomId('select')
			.setPlaceholder('Select the rank to edit')
			.addOptions([{
				label: edit_rank_name[1],
				description:  `${edit_rank_threshold[1]} points`,
				value: '1'},
				{
					label: edit_rank_name[2],
					description: `${edit_rank_threshold[2]} points` ,
					value: '2'},
					{
						label: edit_rank_name[3],
						description: `${edit_rank_threshold[3]} points` ,
						value: '3'},
						{
							label: edit_rank_name[4],
							description: `${edit_rank_threshold[4]} points` ,
							value: '4'},
							{
								label: edit_rank_name[5],
								description: `${edit_rank_threshold[5]} points` ,
								value: '5'},
								{
									label: edit_rank_name[6],
									description: `${edit_rank_threshold[6]} points` ,
									value: '6'},
									{
										label: edit_rank_name[7],
										description: `${edit_rank_threshold[7]} points` ,
										value: '7'},
										{
											label: edit_rank_name[8],
											description: `${edit_rank_threshold[8]} points` ,
											value: '8'},
											{
												label: edit_rank_name[9],
												description: `${edit_rank_threshold[9]} points` ,
												value: '9'},
												{
													label: edit_rank_name[10],
													description: `${edit_rank_threshold[10]} points` ,
													value: '10'}
			]),
	);
}
if(limit_index==9){
	row_limit = new MessageActionRow()
	.addComponents(
		new MessageSelectMenu()
			.setCustomId('select')
			.setPlaceholder('Select the rank to edit')
			.addOptions([{
				label: edit_rank_name[1],
				description:  `${edit_rank_threshold[1]} points`,
				value: '1'},
				{
					label: edit_rank_name[2],
					description: `${edit_rank_threshold[2]} points` ,
					value: '2'},
					{
						label: edit_rank_name[3],
						description: `${edit_rank_threshold[3]} points` ,
						value: '3'},
						{
							label: edit_rank_name[4],
							description: `${edit_rank_threshold[4]} points` ,
							value: '4'},
							{
								label: edit_rank_name[5],
								description: `${edit_rank_threshold[5]} points` ,
								value: '5'},
								{
									label: edit_rank_name[6],
									description: `${edit_rank_threshold[6]} points` ,
									value: '6'},
									{
										label: edit_rank_name[7],
										description: `${edit_rank_threshold[7]} points` ,
										value: '7'},
										{
											label: edit_rank_name[8],
											description: `${edit_rank_threshold[8]} points` ,
											value: '8'},
											{
												label: edit_rank_name[9],
												description: `${edit_rank_threshold[9]} points` ,
												value: '9'}
			]),
	);
}
if(limit_index==8){
	row_limit = new MessageActionRow()
	.addComponents(
		new MessageSelectMenu()
			.setCustomId('select')
			.setPlaceholder('Select the rank to edit')
			.addOptions([{
				label: edit_rank_name[1],
				description:  `${edit_rank_threshold[1]} points`,
				value: '1'},
				{
					label: edit_rank_name[2],
					description: `${edit_rank_threshold[2]} points` ,
					value: '2'},
					{
						label: edit_rank_name[3],
						description: `${edit_rank_threshold[3]} points` ,
						value: '3'},
						{
							label: edit_rank_name[4],
							description: `${edit_rank_threshold[4]} points` ,
							value: '4'},
							{
								label: edit_rank_name[5],
								description: `${edit_rank_threshold[5]} points` ,
								value: '5'},
								{
									label: edit_rank_name[6],
									description: `${edit_rank_threshold[6]} points` ,
									value: '6'},
									{
										label: edit_rank_name[7],
										description: `${edit_rank_threshold[7]} points` ,
										value: '7'},
										{
											label: edit_rank_name[8],
											description: `${edit_rank_threshold[8]} points` ,
											value: '8'}
			]),
	);
}
if(limit_index==7){
	row_limit = new MessageActionRow()
	.addComponents(
		new MessageSelectMenu()
			.setCustomId('select')
			.setPlaceholder('Select the rank to edit')
			.addOptions([{
				label: edit_rank_name[1],
				description:  `${edit_rank_threshold[1]} points`,
				value: '1'},
				{
					label: edit_rank_name[2],
					description: `${edit_rank_threshold[2]} points` ,
					value: '2'},
					{
						label: edit_rank_name[3],
						description: `${edit_rank_threshold[3]} points` ,
						value: '3'},
						{
							label: edit_rank_name[4],
							description: `${edit_rank_threshold[4]} points` ,
							value: '4'},
							{
								label: edit_rank_name[5],
								description: `${edit_rank_threshold[5]} points` ,
								value: '5'},
								{
									label: edit_rank_name[6],
									description: `${edit_rank_threshold[6]} points` ,
									value: '6'},
									{
										label: edit_rank_name[7],
										description: `${edit_rank_threshold[7]} points` ,
										value: '7'}
			]),
	);
}
if(limit_index==6){
	row_limit = new MessageActionRow()
	.addComponents(
		new MessageSelectMenu()
			.setCustomId('select')
			.setPlaceholder('Select the rank to edit')
			.addOptions([{
				label: edit_rank_name[1],
				description:  `${edit_rank_threshold[1]} points`,
				value: '1'},
				{
					label: edit_rank_name[2],
					description: `${edit_rank_threshold[2]} points` ,
					value: '2'},
					{
						label: edit_rank_name[3],
						description: `${edit_rank_threshold[3]} points` ,
						value: '3'},
						{
							label: edit_rank_name[4],
							description: `${edit_rank_threshold[4]} points` ,
							value: '4'},
							{
								label: edit_rank_name[5],
								description: `${edit_rank_threshold[5]} points` ,
								value: '5'},
								{
									label: edit_rank_name[6],
									description: `${edit_rank_threshold[6]} points` ,
									value: '6'}
			]),
	);
}
if(limit_index==5){
	row_limit = new MessageActionRow()
	.addComponents(
		new MessageSelectMenu()
			.setCustomId('select')
			.setPlaceholder('Select the rank to edit')
			.addOptions([{
				label: edit_rank_name[1],
				description:  `${edit_rank_threshold[1]} points`,
				value: '1'},
				{
					label: edit_rank_name[2],
					description: `${edit_rank_threshold[2]} points` ,
					value: '2'},
					{
						label: edit_rank_name[3],
						description: `${edit_rank_threshold[3]} points` ,
						value: '3'},
						{
							label: edit_rank_name[4],
							description: `${edit_rank_threshold[4]} points` ,
							value: '4'},
							{
								label: edit_rank_name[5],
								description: `${edit_rank_threshold[5]} points` ,
								value: '5'}
			]),
	);
}
if(limit_index==4){
	row_limit = new MessageActionRow()
	.addComponents(
		new MessageSelectMenu()
			.setCustomId('select')
			.setPlaceholder('Select the rank to edit')
			.addOptions([{
				label: edit_rank_name[1],
				description:  `${edit_rank_threshold[1]} points`,
				value: '1'},
				{
					label: edit_rank_name[2],
					description: `${edit_rank_threshold[2]} points` ,
					value: '2'},
					{
						label: edit_rank_name[3],
						description: `${edit_rank_threshold[3]} points` ,
						value: '3'},
						{
							label: edit_rank_name[4],
							description: `${edit_rank_threshold[4]} points` ,
							value: '4'}
			]),
	);
}
if(limit_index==3){
	row_limit = new MessageActionRow()
	.addComponents(
		new MessageSelectMenu()
			.setCustomId('select')
			.setPlaceholder('Select the rank to edit')
			.addOptions([{
				label: edit_rank_name[1],
				description:  `${edit_rank_threshold[1]} points`,
				value: '1'},
				{
					label: edit_rank_name[2],
					description: `${edit_rank_threshold[2]} points` ,
					value: '2'},
					{
						label: edit_rank_name[3],
						description: `${edit_rank_threshold[3]} points` ,
						value: '3'}
			]),
	);
}
if(limit_index==2){
	row_limit = new MessageActionRow()
	.addComponents(
		new MessageSelectMenu()
			.setCustomId('select')
			.setPlaceholder('Select the rank to edit')
			.addOptions([{
				label: edit_rank_name[1],
				description:  `${edit_rank_threshold[1]} points`,
				value: '1'},
				{
					label: edit_rank_name[2],
					description: `${edit_rank_threshold[2]} points` ,
					value: '2'}
			]),
	);
}
if(limit_index==1){
	row_limit = new MessageActionRow()
	.addComponents(
		new MessageSelectMenu()
			.setCustomId('select')
			.setPlaceholder('Select the rank to edit')
			.addOptions([{
				label: edit_rank_name[1],
				description:  `${edit_rank_threshold[1]} points`,
				value: '1'}
			]),
	);
}

					
				if(limit_index==0){
					const buttonse = new MessageButton()
					.setCustomId('diffbck_th')
					.setLabel('Back')
					.setStyle('SECONDARY')
					.setEmoji('◀️');

					const r3 = new MessageActionRow().addComponents(buttonse);
					const setembed1 = new MessageEmbed()

					.setTitle('Coco | Settings | Edit Rank')
					.setDescription('There is no rank setup in this server.')
					.addFields(
						{ name: '◀️ Back', value: 'Go back one page.' },

					);

					await interaction.editReply({ content: 'You have no rank setup in this server',embeds:[setembed1], components: [r3] });
				}else{
					const buttonse = new MessageButton()
					.setCustomId('diffbck_th')
					.setLabel('Back')
					.setStyle('SECONDARY')
					.setEmoji('◀️');

					const r3 = new MessageActionRow().addComponents(buttonse);
					const setembed1 = new MessageEmbed()

					.setTitle('Coco | Settings | Edit Rank')
					.setColor('#36393F')
					.addFields(
						{ name: 'Edit Rank', value: 'Edit the name, threshold or role linked to an existing rank.' },
						{ name: 'Select', value: 'Choose one of the listed items to continue!' },
						{ name: '◀️ Back', value: 'Go back one page.' },

					);
			await interaction.editReply({ content: '\u200B',embeds:[setembed1], components: [row_limit, r3] });
				}
				interfetch_theory = await interaction.fetchReply();

				const collectorud2_theory = interfetch_theory.createMessageComponentCollector({
					type: "SELECT_MENU",

					time: 300000
				});


				const collectorud1_theory = interfetch_theory.createMessageComponentCollector({
					type: "BUTTON",

					time: 300000
				});
				collectorud1_theory.on("collect", async (vemi_theory) => {
					if(vemi_theory.customId=='diffbck_th'){
						vemi_theory.deferUpdate();
						collectorud1_theory.stop();
					collectorud2_theory.stop();
						const allup3 = await Ranks.findAll();




				allup3.sort((a, b) => a.index - b.index)
					.map(user => {
						rank_index = user.index;

					}
					)
					.join('\n');
					if(rank_index<10){
						const setembed1 = new MessageEmbed()

						.setTitle('Coco | Settings')
						.setColor('#36393F')
						.addFields(
							{ name: 'Ranks', value: `Create, edit or delete ranks on \n\nYou have ${rank_index} ranks set up on your server!` },
							{ name: 'Add Rank', value: 'Add a new rank to your server.' },
							{ name: 'Edit Rank', value: 'Edit the name, threshold or role linked to an existing rank.' },
							
							{ name: '◀️ Back', value: 'Go back one page.' },
	
						);
					const buttonset1a = new MessageButton()
						.setCustomId('AR')
						.setLabel('Add Rank')
						.setStyle('PRIMARY');
					const buttonset2a = new MessageButton()
						.setCustomId('ER')
						.setLabel('Edit Rank')
						.setStyle('PRIMARY');
					const buttonset3a = new MessageButton()
						.setCustomId('seup')
						.setLabel('Dynamic Thresholds')
						.setStyle('SUCCESS');
					const buttonset1b = new MessageButton()
						.setCustomId('bck')
						.setLabel('Back')
						.setStyle('SECONDARY')
						.setEmoji('◀️');
	
					const r1 = new MessageActionRow().addComponents(buttonset1a, buttonset2a);
					const r2 = new MessageActionRow().addComponents(buttonset3a);
					const r3 = new MessageActionRow().addComponents(buttonset1b);
					interaction.editReply({ content: '\u200B', embeds: [setembed1], components: [r1,  r3] });
					}else {
						const setembed1 = new MessageEmbed()

					.setTitle('Coco | Settings')
					.setColor('#36393F')
					.addFields(
						{ name: 'Ranks', value: `Create, edit or delete ranks on \n\nYou have ${rank_index} ranks set up on your server!` },
						{ name: 'Edit Rank', value: 'Edit the name, threshold or role linked to an existing rank.' },
						
						{ name: '◀️ Back', value: 'Go back one page.' },

					);
				
				const buttonset2a = new MessageButton()
					.setCustomId('ER')
					.setLabel('Edit Rank')
					.setStyle('PRIMARY');
				const buttonset3a = new MessageButton()
					.setCustomId('seup')
					.setLabel('Dynamic Thresholds')
					.setStyle('SUCCESS');
				const buttonset1b = new MessageButton()
					.setCustomId('bck')
					.setLabel('Back')
					.setStyle('SECONDARY')
					.setEmoji('◀️');

				const r1 = new MessageActionRow().addComponents(buttonset2a);
				const r2 = new MessageActionRow().addComponents(buttonset3a);
				const r3 = new MessageActionRow().addComponents(buttonset1b);
				interaction.editReply({ content: '\u200B', embeds: [setembed1], components: [r1,  r3] });
					}
					}
				});
				collectorud1_theory.on("collect", async (semi_theory) => {
					if(semi_theory.customId=='select'){
					semi_theory.deferUpdate();

					collectorud1_theory.stop();
					collectorud2_theory.stop();
					const rank_2_theory = await Ranks.findOne({ where: { index: semi_theory.values[0] } });
						rank_name_78=	rank_2_theory.get('name');
						rank_threshold_78=	rank_2_theory.get('points');
						rank_role_78=	rank_2_theory.get('role');
						const setembed1 = new MessageEmbed()

					.setTitle('Coco | Settings')
					.setColor('#36393F')
					.addFields(
						{ name: `Edit Rank | ${rank_name_78}`, value: `${rank_name_78} is worth ${rank_threshold_78} points.` },
						{ name: 'Edit Name', value: 'Edit the name of the rank as it appears on the scoreboard. If you have linked a role to the rank, you can rename the role in your server settings instead. The rank name will then update a few minutes later.' },
						{ name: 'Edit Threshold', value: `Edit the amount of points required to reach this rank on your server.\n\nCurrent value: ${rank_threshold_78} points` },
						{ name: 'Link Role', value: `Link an existing role to the rank, so that every server member with enough points automatically receives the linked role.\n\nCurrent role: <@&${rank_role_78}>` },
						{ name: 'Delete Rank', value: 'Delete the rank permanently.' },
						{ name: '◀️ Back', value: 'Go back one page.' },

					);
					const buttonsa = new MessageButton()
					.setCustomId('edit_name')
					.setLabel('Edit Name')
					.setStyle('PRIMARY');
				const buttonsa1 = new MessageButton()
					.setCustomId('edit_threshold')
					.setLabel('Edit Threshold')
					.setStyle('PRIMARY');
				const buttonsb = new MessageButton()
					.setCustomId('create_role')
					.setLabel('Create Role')
					.setStyle('PRIMARY');
				const buttonsc = new MessageButton()
					.setCustomId('link_role')
					.setLabel('Link Role')
					.setStyle('PRIMARY');
				const buttonsd = new MessageButton()
					.setCustomId('delete_rank')
					.setLabel('Delete Rank')
					.setStyle('DANGER');
				const buttonse = new MessageButton()
					.setCustomId('diffbck')
					.setLabel('Back')
					.setStyle('SECONDARY')
					.setEmoji('◀️');

				const r1 = new MessageActionRow().addComponents(buttonsa, buttonsa1,  buttonsc);
				const r2 = new MessageActionRow().addComponents(buttonsd);
				const r3 = new MessageActionRow().addComponents(buttonse);
				interaction.editReply({ content: '\u200B', embeds: [setembed1], components: [r1, r2, r3] });
				interfetching_1 = await interaction.fetchReply();



				const collectorfetch_1 = interfetching_1.createMessageComponentCollector({
					type: "BUTTON",

					time: 300000
				});


				collectorfetch_1.on("collect", async (storat_1) => {
					if (storat_1.customId == 'edit_name') {
						storat_1.deferUpdate();
						const setembed1 = new MessageEmbed()

							.setTitle('Coco | Settings | Edit Name')
							.setColor('#36393F')
							.addFields(
								{ name: 'Edit Name', value: 'Edit the name of the rank as it appears on the scoreboard.' },


							);
						const setembed2 = new MessageEmbed()

							.setTitle('Type new value')
							.setDescription('Send a message in the chat to enter a new value!');
						const buttonsa = new MessageButton()
							.setCustomId('cancel_it')
							.setLabel('Cancel')
							.setStyle('SECONDARY');
						const r1 = new MessageActionRow().addComponents(buttonsa);
						interaction.editReply({ content: '\u200B', embeds: [setembed1, setembed2], components: [r1] });
						const filter = sm1 => sm1.author.id == interaction.user.id;//remove this line and filter to eligiblle everyone.
						 collectorcos1_unique = interaction.channel.createMessageCollector({ filter, time: 60000 });
						collectorcos1_unique.on('collect', async (sm1) => {
							rank_name_78 = sm1.content;
							const rank_2 = await Ranks.findOne({ where: { index: semi_theory.values[0] } });
							rank_2.update({ name: `${sm1.content}` });
							collectorcos1_unique.stop();
							
							const setembed1 = new MessageEmbed()

								.setTitle(`Edit Rank | ${rank_name_78}`)
								.setColor('#36393F')
								.setDescription(`${rank_name_78} is worth ${rank_threshold_78} points.`)
								.addFields(
									{ name: 'Edit Name', value: 'Edit the name of the rank as it appears on the scoreboard.' },
									{ name: 'Edit Threshold', value: 'Edit the amount of points required to reach this rank on your server.' },
		
									{ name: 'Link Role', value: `Link an existing role to the rank, so that every server member with enough points automatically receives the linked role.\n\nCurrent role: <@&${rank_role_78}>` },
									{ name: 'Delete Rank', value: 'Delete the rank permanently.' },
									{ name: '◀️ Back', value: 'Go back one page.' },

								);
							const buttonsa = new MessageButton()
								.setCustomId('edit_name')
								.setLabel('Edit Name')
								.setStyle('PRIMARY');
							const buttonsa1 = new MessageButton()
								.setCustomId('edit_threshold')
								.setLabel('Edit Threshold')
								.setStyle('PRIMARY');
							const buttonsb = new MessageButton()
								.setCustomId('create_role')
								.setLabel('Create Role')
								.setStyle('PRIMARY');
							const buttonsc = new MessageButton()
								.setCustomId('link_role')
								.setLabel('Link Role')
								.setStyle('PRIMARY');
							const buttonsd = new MessageButton()
								.setCustomId('delete_rank')
								.setLabel('Delete Rank')
								.setStyle('DANGER');
							const buttonse = new MessageButton()
								.setCustomId('diffbck')
								.setLabel('Back')
								.setStyle('SECONDARY')
								.setEmoji('◀️');

							const r1 = new MessageActionRow().addComponents(buttonsa, buttonsa1,  buttonsc);
							const r2 = new MessageActionRow().addComponents(buttonsd);
							const r3 = new MessageActionRow().addComponents(buttonse);
							interaction.editReply({ content: '\u200B', embeds: [setembed1], components: [r1, r2, r3] });

						})
						collectorcos1_unique.on('end', (collected, reason) => {
							if (reason == 'time') {
								const setembed2 = new MessageEmbed()

									.setTitle('Time Up!')
									.setDescription('Interaction Expired');
								interaction.editReply({ content: '\u200B', embeds: [setembed2], components: [] });
							}
							else {

							}
						})
					}
					/////////////////////////////////edit threshold/////////////////
					if (storat_1.customId == 'edit_threshold') {
						storat_1.deferUpdate();
						numdis = false;
						backdis = false;
						new_threshold = rank_threshold_78;
						savedis = false;
						const setembed1 = new MessageEmbed()

							.setTitle('Coco | Settings | Edit Threshold')
							.addFields(
								{ name: 'Edit Threshold', value: 'Edit the amount of points required to reach this rank on your server.' },
								{ name: 'Set Value', value: `Use the keypad to set the value and click Save when you're done.` },

							);
						const setembed2 = new MessageEmbed()

							.setTitle(`➡ ${rank_threshold_78} points`)
							.setDescription(`Previous value: ${rank_threshold_78} points`)

							.setColor('#90ee90');
						//.setColor('#90ee90');

						const n1 = new MessageButton()
							.setCustomId('1')
							.setLabel('1')
							.setStyle('PRIMARY')
							.setDisabled(`${numdis}`);
						const n2 = new MessageButton()
							.setCustomId('2')
							.setLabel('2')
							.setStyle('PRIMARY')
							.setDisabled(`${numdis}`);
						const n3 = new MessageButton()
							.setCustomId('3')
							.setLabel('3')
							.setStyle('PRIMARY')
							.setDisabled(`${numdis}`);
						const n4 = new MessageButton()
							.setCustomId('4')
							.setLabel('4')
							.setStyle('PRIMARY')
							.setDisabled(`${numdis}`);
						const n5 = new MessageButton()
							.setCustomId('5')
							.setLabel('5')
							.setStyle('PRIMARY')
							.setDisabled(`${numdis}`);
						const n6 = new MessageButton()
							.setCustomId('6')
							.setLabel('6')
							.setStyle('PRIMARY')
							.setDisabled(`${numdis}`);
						const n7 = new MessageButton()
							.setCustomId('7')
							.setLabel('7')
							.setStyle('PRIMARY')
							.setDisabled(`${numdis}`);
						const n8 = new MessageButton()
							.setCustomId('8')
							.setLabel('8')
							.setStyle('PRIMARY')
							.setDisabled(`${numdis}`);
						const n9 = new MessageButton()
							.setCustomId('9')
							.setLabel('9')
							.setStyle('PRIMARY')
							.setDisabled(`${numdis}`);
						const n0 = new MessageButton()
							.setCustomId('0')
							.setLabel('0')
							.setStyle('PRIMARY')
							.setDisabled(`${numdis}`);
						const n00 = new MessageButton()
							.setCustomId('blank')
							.setLabel('\u200B')
							.setStyle('SECONDARY')
							.setDisabled(`true`);
						const ns = new MessageButton()
							.setCustomId('BACKSPACE')
							.setLabel('‹')
							.setStyle('DANGER')
							.setDisabled(`${backdis}`);
						const nc = new MessageButton()
							.setCustomId('CANCEL')
							.setLabel('Cancel')
							.setStyle('PRIMARY');
						const nsa = new MessageButton()
							.setCustomId('SAVE')
							.setLabel('Save')
							.setStyle('SUCCESS')
							.setDisabled(`${savedis}`);



						const r1 = new MessageActionRow().addComponents(n1, n2, n3);
						const r2 = new MessageActionRow().addComponents(n4, n5, n6);
						const r3 = new MessageActionRow().addComponents(n7, n8, n9);
						const r4 = new MessageActionRow().addComponents(n00, n0, ns);
						const r5 = new MessageActionRow().addComponents(nc, nsa);

						interaction.editReply({ content: '\u200B', embeds: [setembed1, setembed2], components: [r1, r2, r3, r4, r5], ephemeral: true });
						interaction_thres = await interaction.fetchReply();



						const collector_thres = interaction_thres.createMessageComponentCollector({
							type: "BUTTON",

							time: 300000
						});


						collector_thres.on("collect", async (temi_thres) => {
							temi_thres.deferUpdate();
							if (temi_thres.customId == 'BACKSPACE') {
								new_threshold = Math.floor(new_threshold / 10);
							}
							if (temi_thres.customId != 'BACKSPACE' && temi_thres.customId != 'SAVE' && temi_thres.customId != 'CANCEL') {
								new_threshold = (new_threshold) + temi_thres.customId;
								new_threshold = parseInt(new_threshold, 10);
							}

							if (new_threshold == 0) {
								backdis = true;
							} else {
								backdis = false;
							}

							const n1 = new MessageButton()
								.setCustomId('1')
								.setLabel('1')
								.setStyle('PRIMARY')
								.setDisabled(`${numdis}`);
							const n2 = new MessageButton()
								.setCustomId('2')
								.setLabel('2')
								.setStyle('PRIMARY')
								.setDisabled(`${numdis}`);
							const n3 = new MessageButton()
								.setCustomId('3')
								.setLabel('3')
								.setStyle('PRIMARY')
								.setDisabled(`${numdis}`);
							const n4 = new MessageButton()
								.setCustomId('4')
								.setLabel('4')
								.setStyle('PRIMARY')
								.setDisabled(`${numdis}`);
							const n5 = new MessageButton()
								.setCustomId('5')
								.setLabel('5')
								.setStyle('PRIMARY')
								.setDisabled(`${numdis}`);
							const n6 = new MessageButton()
								.setCustomId('6')
								.setLabel('6')
								.setStyle('PRIMARY')
								.setDisabled(`${numdis}`);
							const n7 = new MessageButton()
								.setCustomId('7')
								.setLabel('7')
								.setStyle('PRIMARY')
								.setDisabled(`${numdis}`);
							const n8 = new MessageButton()
								.setCustomId('8')
								.setLabel('8')
								.setStyle('PRIMARY')
								.setDisabled(`${numdis}`);
							const n9 = new MessageButton()
								.setCustomId('9')
								.setLabel('9')
								.setStyle('PRIMARY')
								.setDisabled(`${numdis}`);
							const n0 = new MessageButton()
								.setCustomId('0')
								.setLabel('0')
								.setStyle('PRIMARY')
								.setDisabled(`${numdis}`);
							const n00 = new MessageButton()
								.setCustomId('blank')
								.setLabel('\u200B')
								.setStyle('SECONDARY')
								.setDisabled(`true`);
							const ns = new MessageButton()
								.setCustomId('BACKSPACE')
								.setLabel('‹')
								.setStyle('DANGER')
								.setDisabled(`${backdis}`);
							const nc = new MessageButton()
								.setCustomId('CANCEL')
								.setLabel('Cancel')
								.setStyle('PRIMARY');
							const nsa = new MessageButton()
								.setCustomId('SAVE')
								.setLabel('Save')
								.setStyle('SUCCESS')
								.setDisabled(`${savedis}`);



							const r1 = new MessageActionRow().addComponents(n1, n2, n3);
							const r2 = new MessageActionRow().addComponents(n4, n5, n6);
							const r3 = new MessageActionRow().addComponents(n7, n8, n9);
							const r4 = new MessageActionRow().addComponents(n00, n0, ns);
							const r5 = new MessageActionRow().addComponents(nc, nsa);

							const setembed2 = new MessageEmbed()

								.setTitle(`➡ ${new_threshold} points`)
								.setDescription(`Previous value: ${rank_threshold_78} points`)

								.setColor('#90ee90');
							interaction.editReply({ content: '\u200B', embeds: [setembed1, setembed2], components: [r1, r2, r3, r4, r5], ephemeral: true });

							if (temi_thres.customId == 'CANCEL' || temi_thres.customId == 'SAVE') {

								collector_thres.stop();
								if (temi_thres.customId == 'SAVE') {
									rank_threshold_78 = new_threshold;
									const rank_3 = await Ranks.findOne({ where: { index: semi_theory.values[0] } });
									rank_3.update({ points: `${new_threshold}` });

								}
								const setembed1 = new MessageEmbed()

									.setTitle(`Edit Rank | ${rank_name_78}`)
									.setColor('#36393F')
									.setDescription(`${rank_name_78} is worth ${rank_threshold_78} points.`)
									.addFields(
										{ name: 'Edit Name', value: 'Edit the name of the rank as it appears on the scoreboard.' },
										{ name: 'Edit Threshold', value: 'Edit the amount of points required to reach this rank on your server.' },
			
										{ name: 'Link Role', value: `Link an existing role to the rank, so that every server member with enough points automatically receives the linked role.\n\nCurrent role: <@&${rank_role_78}>` },
										{ name: 'Delete Rank', value: 'Delete the rank permanently.' },
										{ name: '◀️ Back', value: 'Go back one page.' },

									);
								const buttonsa = new MessageButton()
									.setCustomId('edit_name')
									.setLabel('Edit Name')
									.setStyle('PRIMARY');
								const buttonsa1 = new MessageButton()
									.setCustomId('edit_threshold')
									.setLabel('Edit Threshold')
									.setStyle('PRIMARY');
								const buttonsb = new MessageButton()
									.setCustomId('create_role')
									.setLabel('Create Role')
									.setStyle('PRIMARY');
								const buttonsc = new MessageButton()
									.setCustomId('link_role')
									.setLabel('Link Role')
									.setStyle('PRIMARY');
								const buttonsd = new MessageButton()
									.setCustomId('delete_rank')
									.setLabel('Delete Rank')
									.setStyle('DANGER');
								const buttonse = new MessageButton()
									.setCustomId('diffbck')
									.setLabel('Back')
									.setStyle('SECONDARY')
									.setEmoji('◀️');

								const r1 = new MessageActionRow().addComponents(buttonsa, buttonsa1,  buttonsc);
								const r2 = new MessageActionRow().addComponents(buttonsd);
								const r3 = new MessageActionRow().addComponents(buttonse);
								interaction.editReply({ content: '\u200B', embeds: [setembed1], components: [r1, r2, r3] });


							}










						})
						collector_thres.on("end", (collected, reason) => {


						});




					}
					/////////////////////////////////////
					if (storat_1.customId == 'link_role') {
						storat_1.deferUpdate();
						const setembed1 = new MessageEmbed()

							.setTitle('Coco | Settings | Link Role')
							.setColor('#36393F')
							.addFields(
								{ name: 'Link Role', value: `Link an existing role to the rank, so that every server member with enough points automatically receives the linked role.\n\nCurrent role: <@&${rank_role_78}>` },


							);
						const setembed2 = new MessageEmbed()

							.setTitle('Type new @role')
							.setDescription('Send a message in the chat by tagging the role!');
						const buttonsa = new MessageButton()
							.setCustomId('cancel_it')
							.setLabel('Cancel')
							.setStyle('SECONDARY');
						const r1 = new MessageActionRow().addComponents(buttonsa);
						interaction.editReply({ content: '\u200B', embeds: [setembed1, setembed2], components: [r1] });
						const filter = sm3 => sm3.author.id == interaction.user.id;//remove this line and filter to eligiblle everyone.
						 collectorcos2_unique_theory = interaction.channel.createMessageCollector({ filter, time: 60000 });
						collectorcos2_unique_theory.on('collect', async (sm3) => {
							//console.log(sm2.mentions.roles.first().id);
							interaction.guild.roles.fetch(sm3.mentions.roles.first().id)
  .then(async role => { 
	const rank_78 = await Ranks.findOne({ where: { index: semi_theory.values[0] } });
	rank_78.update({ role: `${role.id}` });
  })

  .catch(console.error);
  const rank_79 = await Ranks.findOne({ where: { index: semi_theory.values[0] } });
  rank_role_78=rank_79.get('role');
 console.log(rank_role_78);
							collectorcos2_unique_theory.stop();
							const setembed1 = new MessageEmbed()

								.setTitle(`Edit Rank | ${rank_name_78}`)
								.setColor('#36393F')
								.setDescription(`${rank_name_78} is worth ${rank_threshold_78} points.`)
								.addFields(
									{ name: 'Edit Name', value: 'Edit the name of the rank as it appears on the scoreboard.' },
									{ name: 'Edit Threshold', value: 'Edit the amount of points required to reach this rank on your server.' },
		{ name: 'Link Role', value: `Link an existing role to the rank, so that every server member with enough points automatically receives the linked role.\n\nCurrent role: <@&${rank_role_78}>` },
									{ name: 'Delete Rank', value: 'Delete the rank permanently.' },
									{ name: '◀️ Back', value: 'Go back one page.' },

								);
							const buttonsa = new MessageButton()
								.setCustomId('edit_name')
								.setLabel('Edit Name')
								.setStyle('PRIMARY');
							const buttonsa1 = new MessageButton()
								.setCustomId('edit_threshold')
								.setLabel('Edit Threshold')
								.setStyle('PRIMARY');
							const buttonsb = new MessageButton()
								.setCustomId('create_role')
								.setLabel('Create Role')
								.setStyle('PRIMARY');
							const buttonsc = new MessageButton()
								.setCustomId('link_role')
								.setLabel('Link Role')
								.setStyle('PRIMARY');
							const buttonsd = new MessageButton()
								.setCustomId('delete_rank')
								.setLabel('Delete Rank')
								.setStyle('DANGER');
							const buttonse = new MessageButton()
								.setCustomId('diffbck')
								.setLabel('Back')
								.setStyle('SECONDARY')
								.setEmoji('◀️');

							const r1 = new MessageActionRow().addComponents(buttonsa, buttonsa1,  buttonsc);
							const r2 = new MessageActionRow().addComponents(buttonsd);
							const r3 = new MessageActionRow().addComponents(buttonse);
							interaction.editReply({ content: '\u200B', embeds: [setembed1], components: [r1, r2, r3] });

						})
						collectorcos2_unique_theory.on('end', (collected, reason) => {
							if (reason == 'time') {
								const setembed2 = new MessageEmbed()

									.setTitle('Time Up!')
									.setDescription('Interaction Expired');
								interaction.editReply({ content: '\u200B', embeds: [setembed2], components: [] });
							}
							else {

							}
						})
						
					}
					////////////////////////
					if (storat_1.customId == 'diffbck') {
						storat_1.deferUpdate();
						collectorfetch_1.stop();

						if(rank_index<10){
							const setembed1 = new MessageEmbed()
	
							.setTitle('Coco | Settings')
							.setColor('#36393F')
							.addFields(
								{ name: 'Ranks', value: `Create, edit or delete ranks on \n\nYou have ${rank_index} ranks set up on your server!` },
								{ name: 'Add Rank', value: 'Add a new rank to your server.' },
								{ name: 'Edit Rank', value: 'Edit the name, threshold or role linked to an existing rank.' },
								
								{ name: '◀️ Back', value: 'Go back one page.' },
		
							);
						const buttonset1a = new MessageButton()
							.setCustomId('AR')
							.setLabel('Add Rank')
							.setStyle('PRIMARY');
						const buttonset2a = new MessageButton()
							.setCustomId('ER')
							.setLabel('Edit Rank')
							.setStyle('PRIMARY');
						const buttonset3a = new MessageButton()
							.setCustomId('seup')
							.setLabel('Dynamic Thresholds')
							.setStyle('SUCCESS');
						const buttonset1b = new MessageButton()
							.setCustomId('bck')
							.setLabel('Back')
							.setStyle('SECONDARY')
							.setEmoji('◀️');
		
						const r1 = new MessageActionRow().addComponents(buttonset1a, buttonset2a);
						const r2 = new MessageActionRow().addComponents(buttonset3a);
						const r3 = new MessageActionRow().addComponents(buttonset1b);
						interaction.editReply({ content: '\u200B', embeds: [setembed1], components: [r1,  r3] });
						}else {
							const setembed1 = new MessageEmbed()
	
						.setTitle('Coco | Settings')
						.setColor('#36393F')
						.addFields(
							{ name: 'Ranks', value: `Create, edit or delete ranks on \n\nYou have ${rank_index} ranks set up on your server!` },
							{ name: 'Edit Rank', value: 'Edit the name, threshold or role linked to an existing rank.' },
							
							{ name: '◀️ Back', value: 'Go back one page.' },
	
						);
					
					const buttonset2a = new MessageButton()
						.setCustomId('ER')
						.setLabel('Edit Rank')
						.setStyle('PRIMARY');
					const buttonset3a = new MessageButton()
						.setCustomId('seup')
						.setLabel('Dynamic Thresholds')
						.setStyle('SUCCESS');
					const buttonset1b = new MessageButton()
						.setCustomId('bck')
						.setLabel('Back')
						.setStyle('SECONDARY')
						.setEmoji('◀️');
	
					const r1 = new MessageActionRow().addComponents(buttonset2a);
					const r2 = new MessageActionRow().addComponents(buttonset3a);
					const r3 = new MessageActionRow().addComponents(buttonset1b);
					interaction.editReply({ content: '\u200B', embeds: [setembed1], components: [r1,  r3] });
						}
					}
					if(storat_1.customId=='cancel_it'){
						storat_1.deferUpdate();
						collectorcos2_unique_theory.stop();
						collectorcos1_unique.stop();
						const setembed1 = new MessageEmbed()

					.setTitle(`Edit Rank | ${rank_name_78}`)
					.setColor('#36393F')
					.setDescription(`${rank_name_78} is worth ${rank_threshold_78} points.`)
					.addFields(
						{ name: 'Edit Name', value: 'Edit the name of the rank as it appears on the scoreboard.' },
						{ name: 'Edit Threshold', value: 'Edit the amount of points required to reach this rank on your server.' },
						{ name: 'Link Role', value:`Link an existing role to the rank, so that every server member with enough points automatically receives the linked role.\n\nCurrent role: <@&${rank_role_78}>` },
						{ name: 'Delete Rank', value: 'Delete the rank permanently.' },
						{ name: '◀️ Back', value: 'Go back one page.' },

					);
					const buttonsa = new MessageButton()
					.setCustomId('edit_name')
					.setLabel('Edit Name')
					.setStyle('PRIMARY');
					const buttonsa1 = new MessageButton()
					.setCustomId('edit_threshold')
					.setLabel('Edit Threshold')
					.setStyle('PRIMARY');
					const buttonsb = new MessageButton()
					.setCustomId('create_role')
					.setLabel('Create Role')
					.setStyle('PRIMARY');
					const buttonsc = new MessageButton()
					.setCustomId('link_role')
					.setLabel('Link Role')
					.setStyle('PRIMARY');
					const buttonsd = new MessageButton()
					.setCustomId('delete_rank')
					.setLabel('Delete Rank')
					.setStyle('DANGER');
					const buttonse = new MessageButton()
					.setCustomId('diffbck')
					.setLabel('Back')
					.setStyle('SECONDARY')
					.setEmoji('◀️');

				const r1 = new MessageActionRow().addComponents(buttonsa, buttonsa1,  buttonsc);
				const r2 = new MessageActionRow().addComponents(buttonsd);
				const r3 = new MessageActionRow().addComponents(buttonse);
				interaction.editReply({ content: '\u200B', embeds: [setembed1], components: [r1, r2, r3] });
					}
				if(storat_1.customId=='delete_rank'){
storat_1.deferUpdate();
const setembed0 = new MessageEmbed()
.setTitle('Coco | Settings | Delete Rank')
.setColor('#36393F')
.addFields(
	{ name: 'Delete Rank', value: `Delete the rank permanently.` },
	{ name: '🛑 Confimation Required', value: 'Are you sure you want to perform this action? You cannot undo it later!' },
);
const b_yes = new MessageButton()
.setCustomId('b_yes')
.setLabel('Yes')
.setStyle('DANGER')

const b_no = new MessageButton()
.setCustomId('b_no')
.setLabel('No')
.setStyle('SECONDARY')
const r1 = new MessageActionRow().addComponents(b_yes, b_no);

interaction.editReply({content:'\u200B', embeds: [setembed0], components:[r1] });
interaction_delete = await interaction.fetchReply();



				const collector_delete = interaction_delete.createMessageComponentCollector({
					type: "BUTTON",

					time: 300000
				});


				collector_delete.on("collect", async (temi_delete) => {
					
					if(temi_delete.customId=='b_yes'){
						temi_delete.deferUpdate();
						collectorfetch_1.stop();

						const rank_4 = await Ranks.destroy({ where: { index: semi_theory.values[0] } });
						rank_index = rank_index - 1;





						const setembed1 = new MessageEmbed()

							.setTitle('Coco | Settings')
							.setColor('#36393F')
							.addFields(
								{ name: 'Ranks', value: `Create, edit or delete ranks on \n\nYou have ${rank_index} ranks set up on your server!` },
								{ name: 'Add Rank', value: 'Add a new rank to your server.' },
								{ name: 'Edit Rank', value: 'Edit the name, threshold or role linked to an existing rank.' },
								
								{ name: '◀️ Back', value: 'Go back one page.' },

							);
						const buttonset1a = new MessageButton()
							.setCustomId('AR')
							.setLabel('Add Rank')
							.setStyle('PRIMARY');
						const buttonset2a = new MessageButton()
							.setCustomId('ER')
							.setLabel('Edit Rank')
							.setStyle('PRIMARY');
						const buttonset3a = new MessageButton()
							.setCustomId('seup')
							.setLabel('Dynamic Thresholds')
							.setStyle('SUCCESS');
						const buttonset1b = new MessageButton()
							.setCustomId('bck')
							.setLabel('Back')
							.setStyle('SECONDARY')
							.setEmoji('◀️');

						const r1 = new MessageActionRow().addComponents(buttonset1a, buttonset2a);
						const r2 = new MessageActionRow().addComponents(buttonset3a);
						const r3 = new MessageActionRow().addComponents(buttonset1b);
						interaction.editReply({ content: '\u200B', embeds: [setembed1], components: [r1,  r3] });

					}
					if(temi_delete.customId=='b_no'){
						temi_delete.deferUpdate();
						collector_delete.stop();
						const setembed1 = new MessageEmbed()

					.setTitle(`Edit Rank | ${rank_name_78}`)
					.setColor('#36393F')
					.setDescription(`${rank_name_78} is worth ${rank_threshold_78} points.`)
					.addFields(
						{ name: 'Edit Name', value: 'Edit the name of the rank as it appears on the scoreboard.' },
						{ name: 'Edit Threshold', value: 'Edit the amount of points required to reach this rank on your server.' },
						{ name: 'Link Role', value: `Link an existing role to the rank, so that every server member with enough points automatically receives the linked role.\n\nCurrent role: <@&${rank_role_78}>` },
						{ name: 'Delete Rank', value: 'Delete the rank permanently.' },
						{ name: '◀️ Back', value: 'Go back one page.' },

					);
					const buttonsa = new MessageButton()
					.setCustomId('edit_name')
					.setLabel('Edit Name')
					.setStyle('PRIMARY');
					const buttonsa1 = new MessageButton()
					.setCustomId('edit_threshold')
					.setLabel('Edit Threshold')
					.setStyle('PRIMARY');
					const buttonsb = new MessageButton()
					.setCustomId('create_role')
					.setLabel('Create Role')
					.setStyle('PRIMARY');
					const buttonsc = new MessageButton()
					.setCustomId('link_role')
					.setLabel('Link Role')
					.setStyle('PRIMARY');
					const buttonsd = new MessageButton()
					.setCustomId('delete_rank')
					.setLabel('Delete Rank')
					.setStyle('DANGER');
					const buttonse = new MessageButton()
					.setCustomId('diffbck')
					.setLabel('Back')
					.setStyle('SECONDARY')
					.setEmoji('◀️');

				const r1 = new MessageActionRow().addComponents(buttonsa, buttonsa1,  buttonsc);
				const r2 = new MessageActionRow().addComponents(buttonsd);
				const r3 = new MessageActionRow().addComponents(buttonse);
				interaction.editReply({ content: '\u200B', embeds: [setembed1], components: [r1, r2, r3] });
					}
				})
					collector_delete.on("end", (collected, reason) => {


					});


						
				}	


				});
				collectorfetch_1.on("end", (collected, reason) => {


				});
			}
				});
				collectorud1_theory.on('end', (collected, reason) => {});
				collectorud2_theory.on('end', (collected, reason) => {});




			}
			///////////////Adding Rank//////////////////////////////////////////////////////////////////////////////////////////////////
			if (semi.customId == 'AR') {
				semi.deferUpdate();
				let previous_threshold = 100;
				let new_rank = 'New Rank';

				const allup3 = await Ranks.findAll();




				allup3.sort((a, b) => a.index - b.index)
					.map(user => {
						rank_index = user.index + 1;

					}
					)
					.join('\n');
					
				const rank_1 = Ranks.create({
					index: rank_index,
					name: 'New Rank',
					role: null,
					role_icon: null,
					points: 100,
				});
				const setembed1 = new MessageEmbed()

					.setTitle('Edit Rank | New Rank')
					.setColor('#36393F')
					.setDescription('New Rank is worth 100 points.')
					.addFields(
						{ name: 'Edit Name', value: 'Edit the name of the rank as it appears on the scoreboard.' },
						{ name: 'Edit Threshold', value: 'Edit the amount of points required to reach this rank on your server.' },
						{ name: 'Link Role', value: 'Link an existing role to the rank, so that every server member with enough points automatically receives the linked role.' },
						{ name: 'Delete Rank', value: 'Delete the rank permanently.' },
						{ name: '◀️ Back', value: 'Go back one page.' },

					);
				const buttonsa = new MessageButton()
					.setCustomId('edit_name')
					.setLabel('Edit Name')
					.setStyle('PRIMARY');
				const buttonsa1 = new MessageButton()
					.setCustomId('edit_threshold')
					.setLabel('Edit Threshold')
					.setStyle('PRIMARY');
				const buttonsb = new MessageButton()
					.setCustomId('create_role')
					.setLabel('Create Role')
					.setStyle('PRIMARY');
				const buttonsc = new MessageButton()
					.setCustomId('link_role')
					.setLabel('Link Role')
					.setStyle('PRIMARY');
				const buttonsd = new MessageButton()
					.setCustomId('delete_rank')
					.setLabel('Delete Rank')
					.setStyle('DANGER');
				const buttonse = new MessageButton()
					.setCustomId('diffbck')
					.setLabel('Back')
					.setStyle('SECONDARY')
					.setEmoji('◀️');

				const r1 = new MessageActionRow().addComponents(buttonsa, buttonsa1,  buttonsc);
				const r2 = new MessageActionRow().addComponents(buttonsd);
				const r3 = new MessageActionRow().addComponents(buttonse);
				interaction.editReply({ content: '\u200B', embeds: [setembed1], components: [r1, r2, r3] });
				interfetching = await interaction.fetchReply();



				const collectorfetch = interfetching.createMessageComponentCollector({
					type: "BUTTON",

					time: 300000
				});


				collectorfetch.on("collect", async (storat) => {
					if (storat.customId == 'edit_name') {
						storat.deferUpdate();
						const setembed1 = new MessageEmbed()

							.setTitle('Coco | Settings | Edit Name')
							.setColor('#36393F')
							.addFields(
								{ name: 'Edit Name', value: 'Edit the name of the rank as it appears on the scoreboard.' },


							);
						const setembed2 = new MessageEmbed()

							.setTitle('Type new value')
							.setDescription('Send a message in the chat to enter a new value!');
						const buttonsa = new MessageButton()
							.setCustomId('cancel_it')
							.setLabel('Cancel')
							.setStyle('SECONDARY');
						const r1 = new MessageActionRow().addComponents(buttonsa);
						interaction.editReply({ content: '\u200B', embeds: [setembed1, setembed2], components: [r1] });
						const filter = sm1 => sm1.author.id == interaction.user.id;//remove this line and filter to eligiblle everyone.
						 collectorcos1_unique = interaction.channel.createMessageCollector({ filter, time: 60000 });
						collectorcos1_unique.on('collect', async (sm1) => {
							new_rank = sm1.content;
							const rank_2 = await Ranks.findOne({ where: { index: rank_index } });
							rank_2.update({ name: `${sm1.content}` });
							collectorcos1_unique.stop();
							const setembed1 = new MessageEmbed()

								.setTitle(`Edit Rank | ${new_rank}`)
								.setColor('#36393F')
								.setDescription(`${new_rank} is worth ${previous_threshold} points.`)
								.addFields(
									{ name: 'Edit Name', value: 'Edit the name of the rank as it appears on the scoreboard.' },
									{ name: 'Edit Threshold', value: 'Edit the amount of points required to reach this rank on your server.' },
		
									{ name: 'Link Role', value: 'Link an existing role to the rank, so that every server member with enough points automatically receives the linked role.' },
									{ name: 'Delete Rank', value: 'Delete the rank permanently.' },
									{ name: '◀️ Back', value: 'Go back one page.' },

								);
							const buttonsa = new MessageButton()
								.setCustomId('edit_name')
								.setLabel('Edit Name')
								.setStyle('PRIMARY');
							const buttonsa1 = new MessageButton()
								.setCustomId('edit_threshold')
								.setLabel('Edit Threshold')
								.setStyle('PRIMARY');
							const buttonsb = new MessageButton()
								.setCustomId('create_role')
								.setLabel('Create Role')
								.setStyle('PRIMARY');
							const buttonsc = new MessageButton()
								.setCustomId('link_role')
								.setLabel('Link Role')
								.setStyle('PRIMARY');
							const buttonsd = new MessageButton()
								.setCustomId('delete_rank')
								.setLabel('Delete Rank')
								.setStyle('DANGER');
							const buttonse = new MessageButton()
								.setCustomId('diffbck')
								.setLabel('Back')
								.setStyle('SECONDARY')
								.setEmoji('◀️');

							const r1 = new MessageActionRow().addComponents(buttonsa, buttonsa1,  buttonsc);
							const r2 = new MessageActionRow().addComponents(buttonsd);
							const r3 = new MessageActionRow().addComponents(buttonse);
							interaction.editReply({ content: '\u200B', embeds: [setembed1], components: [r1, r2, r3] });

						})
						collectorcos1_unique.on('end', (collected, reason) => {
							if (reason == 'time') {
								const setembed2 = new MessageEmbed()

									.setTitle('Time Up!')
									.setDescription('Interaction Expired');
								interaction.editReply({ content: '\u200B', embeds: [setembed2], components: [] });
							}
							else {

							}
						})
					}
					/////////////////////////////////edit threshold/////////////////
					if (storat.customId == 'edit_threshold') {
						storat.deferUpdate();
						numdis = false;
						backdis = false;
						new_threshold = previous_threshold;
						savedis = false;
						const setembed1 = new MessageEmbed()

							.setTitle('Coco | Settings | Edit Threshold')
							.addFields(
								{ name: 'Edit Threshold', value: 'Edit the amount of points required to reach this rank on your server.' },
								{ name: 'Set Value', value: `Use the keypad to set the value and click Save when you're done.` },

							);
						const setembed2 = new MessageEmbed()

							.setTitle(`➡ ${previous_threshold} points`)
							.setDescription(`Previous value: ${previous_threshold} points`)

							.setColor('#90ee90');
						//.setColor('#90ee90');

						const n1 = new MessageButton()
							.setCustomId('1')
							.setLabel('1')
							.setStyle('PRIMARY')
							.setDisabled(`${numdis}`);
						const n2 = new MessageButton()
							.setCustomId('2')
							.setLabel('2')
							.setStyle('PRIMARY')
							.setDisabled(`${numdis}`);
						const n3 = new MessageButton()
							.setCustomId('3')
							.setLabel('3')
							.setStyle('PRIMARY')
							.setDisabled(`${numdis}`);
						const n4 = new MessageButton()
							.setCustomId('4')
							.setLabel('4')
							.setStyle('PRIMARY')
							.setDisabled(`${numdis}`);
						const n5 = new MessageButton()
							.setCustomId('5')
							.setLabel('5')
							.setStyle('PRIMARY')
							.setDisabled(`${numdis}`);
						const n6 = new MessageButton()
							.setCustomId('6')
							.setLabel('6')
							.setStyle('PRIMARY')
							.setDisabled(`${numdis}`);
						const n7 = new MessageButton()
							.setCustomId('7')
							.setLabel('7')
							.setStyle('PRIMARY')
							.setDisabled(`${numdis}`);
						const n8 = new MessageButton()
							.setCustomId('8')
							.setLabel('8')
							.setStyle('PRIMARY')
							.setDisabled(`${numdis}`);
						const n9 = new MessageButton()
							.setCustomId('9')
							.setLabel('9')
							.setStyle('PRIMARY')
							.setDisabled(`${numdis}`);
						const n0 = new MessageButton()
							.setCustomId('0')
							.setLabel('0')
							.setStyle('PRIMARY')
							.setDisabled(`${numdis}`);
						const n00 = new MessageButton()
							.setCustomId('blank')
							.setLabel('\u200B')
							.setStyle('SECONDARY')
							.setDisabled(`true`);
						const ns = new MessageButton()
							.setCustomId('BACKSPACE')
							.setLabel('‹')
							.setStyle('DANGER')
							.setDisabled(`${backdis}`);
						const nc = new MessageButton()
							.setCustomId('CANCEL')
							.setLabel('Cancel')
							.setStyle('PRIMARY');
						const nsa = new MessageButton()
							.setCustomId('SAVE')
							.setLabel('Save')
							.setStyle('SUCCESS')
							.setDisabled(`${savedis}`);



						const r1 = new MessageActionRow().addComponents(n1, n2, n3);
						const r2 = new MessageActionRow().addComponents(n4, n5, n6);
						const r3 = new MessageActionRow().addComponents(n7, n8, n9);
						const r4 = new MessageActionRow().addComponents(n00, n0, ns);
						const r5 = new MessageActionRow().addComponents(nc, nsa);

						interaction.editReply({ content: '\u200B', embeds: [setembed1, setembed2], components: [r1, r2, r3, r4, r5], ephemeral: true });
						interaction_thres = await interaction.fetchReply();



						const collector_thres = interaction_thres.createMessageComponentCollector({
							type: "BUTTON",

							time: 300000
						});


						collector_thres.on("collect", async (temi_thres) => {
							temi_thres.deferUpdate();
							if (temi_thres.customId == 'BACKSPACE') {
								new_threshold = Math.floor(new_threshold / 10);
							}
							if (temi_thres.customId != 'BACKSPACE' && temi_thres.customId != 'SAVE' && temi_thres.customId != 'CANCEL') {
								new_threshold = (new_threshold) + temi_thres.customId;
								new_threshold = parseInt(new_threshold, 10);
							}

							if (new_threshold == 0) {
								backdis = true;
							} else {
								backdis = false;
							}

							const n1 = new MessageButton()
								.setCustomId('1')
								.setLabel('1')
								.setStyle('PRIMARY')
								.setDisabled(`${numdis}`);
							const n2 = new MessageButton()
								.setCustomId('2')
								.setLabel('2')
								.setStyle('PRIMARY')
								.setDisabled(`${numdis}`);
							const n3 = new MessageButton()
								.setCustomId('3')
								.setLabel('3')
								.setStyle('PRIMARY')
								.setDisabled(`${numdis}`);
							const n4 = new MessageButton()
								.setCustomId('4')
								.setLabel('4')
								.setStyle('PRIMARY')
								.setDisabled(`${numdis}`);
							const n5 = new MessageButton()
								.setCustomId('5')
								.setLabel('5')
								.setStyle('PRIMARY')
								.setDisabled(`${numdis}`);
							const n6 = new MessageButton()
								.setCustomId('6')
								.setLabel('6')
								.setStyle('PRIMARY')
								.setDisabled(`${numdis}`);
							const n7 = new MessageButton()
								.setCustomId('7')
								.setLabel('7')
								.setStyle('PRIMARY')
								.setDisabled(`${numdis}`);
							const n8 = new MessageButton()
								.setCustomId('8')
								.setLabel('8')
								.setStyle('PRIMARY')
								.setDisabled(`${numdis}`);
							const n9 = new MessageButton()
								.setCustomId('9')
								.setLabel('9')
								.setStyle('PRIMARY')
								.setDisabled(`${numdis}`);
							const n0 = new MessageButton()
								.setCustomId('0')
								.setLabel('0')
								.setStyle('PRIMARY')
								.setDisabled(`${numdis}`);
							const n00 = new MessageButton()
								.setCustomId('blank')
								.setLabel('\u200B')
								.setStyle('SECONDARY')
								.setDisabled(`true`);
							const ns = new MessageButton()
								.setCustomId('BACKSPACE')
								.setLabel('‹')
								.setStyle('DANGER')
								.setDisabled(`${backdis}`);
							const nc = new MessageButton()
								.setCustomId('CANCEL')
								.setLabel('Cancel')
								.setStyle('PRIMARY');
							const nsa = new MessageButton()
								.setCustomId('SAVE')
								.setLabel('Save')
								.setStyle('SUCCESS')
								.setDisabled(`${savedis}`);



							const r1 = new MessageActionRow().addComponents(n1, n2, n3);
							const r2 = new MessageActionRow().addComponents(n4, n5, n6);
							const r3 = new MessageActionRow().addComponents(n7, n8, n9);
							const r4 = new MessageActionRow().addComponents(n00, n0, ns);
							const r5 = new MessageActionRow().addComponents(nc, nsa);

							const setembed2 = new MessageEmbed()

								.setTitle(`➡ ${new_threshold} points`)
								.setDescription(`Previous value: ${previous_threshold} points`)

								.setColor('#90ee90');
							interaction.editReply({ content: '\u200B', embeds: [setembed1, setembed2], components: [r1, r2, r3, r4, r5], ephemeral: true });

							if (temi_thres.customId == 'CANCEL' || temi_thres.customId == 'SAVE') {

								collector_thres.stop();
								if (temi_thres.customId == 'SAVE') {
									previous_threshold = new_threshold;
									const rank_3 = await Ranks.findOne({ where: { index: rank_index } });
									rank_3.update({ points: `${new_threshold}` });

								}
								const setembed1 = new MessageEmbed()

									.setTitle(`Edit Rank | ${new_rank}`)
									.setColor('#36393F')
									.setDescription(`${new_rank} is worth ${previous_threshold} points.`)
									.addFields(
										{ name: 'Edit Name', value: 'Edit the name of the rank as it appears on the scoreboard.' },
										{ name: 'Edit Threshold', value: 'Edit the amount of points required to reach this rank on your server.' },
			
										{ name: 'Link Role', value: 'Link an existing role to the rank, so that every server member with enough points automatically receives the linked role.' },
										{ name: 'Delete Rank', value: 'Delete the rank permanently.' },
										{ name: '◀️ Back', value: 'Go back one page.' },

									);
								const buttonsa = new MessageButton()
									.setCustomId('edit_name')
									.setLabel('Edit Name')
									.setStyle('PRIMARY');
								const buttonsa1 = new MessageButton()
									.setCustomId('edit_threshold')
									.setLabel('Edit Threshold')
									.setStyle('PRIMARY');
								const buttonsb = new MessageButton()
									.setCustomId('create_role')
									.setLabel('Create Role')
									.setStyle('PRIMARY');
								const buttonsc = new MessageButton()
									.setCustomId('link_role')
									.setLabel('Link Role')
									.setStyle('PRIMARY');
								const buttonsd = new MessageButton()
									.setCustomId('delete_rank')
									.setLabel('Delete Rank')
									.setStyle('DANGER');
								const buttonse = new MessageButton()
									.setCustomId('diffbck')
									.setLabel('Back')
									.setStyle('SECONDARY')
									.setEmoji('◀️');

								const r1 = new MessageActionRow().addComponents(buttonsa, buttonsa1,  buttonsc);
								const r2 = new MessageActionRow().addComponents(buttonsd);
								const r3 = new MessageActionRow().addComponents(buttonse);
								interaction.editReply({ content: '\u200B', embeds: [setembed1], components: [r1, r2, r3] });


							}










						})
						collector_thres.on("end", (collected, reason) => {


						});




					}
					/////////////////////////////////////
					if (storat.customId == 'link_role') {
						storat.deferUpdate();
						const setembed1 = new MessageEmbed()

							.setTitle('Coco | Settings | Link Role')
							.setColor('#36393F')
							.addFields(
								{ name: 'Link Role', value: 'Link an existing role to the rank, so that every server member with enough points automatically receives the linked role.' },


							);
						const setembed2 = new MessageEmbed()

							.setTitle('Type new @role')
							.setDescription('Send a message in the chat by tagging the role!');
						const buttonsa = new MessageButton()
							.setCustomId('cancel_it')
							.setLabel('Cancel')
							.setStyle('SECONDARY');
						const r1 = new MessageActionRow().addComponents(buttonsa);
						interaction.editReply({ content: '\u200B', embeds: [setembed1, setembed2], components: [r1] });
						const filter = sm2 => sm2.author.id == interaction.user.id;//remove this line and filter to eligiblle everyone.
						 collectorcos2_unique = interaction.channel.createMessageCollector({ filter, time: 60000 });
						collectorcos2_unique.on('collect', async (sm2) => {
							//console.log(sm2.mentions.roles.first().id);
							interaction.guild.roles.fetch(sm2.mentions.roles.first().id)
  .then(async role => {
	const rank_4 = await Ranks.findOne({ where: { index: rank_index } });
	rank_4.update({ role: `${role.id}` });
  })
  .catch(console.error);
							collectorcos2_unique.stop();
							const setembed1 = new MessageEmbed()

								.setTitle(`Edit Rank | ${new_rank}`)
								.setColor('#36393F')
								.setDescription(`${new_rank} is worth ${previous_threshold} points.`)
								.addFields(
									{ name: 'Edit Name', value: 'Edit the name of the rank as it appears on the scoreboard.' },
									{ name: 'Edit Threshold', value: 'Edit the amount of points required to reach this rank on your server.' },
		
									{ name: 'Link Role', value: 'Link an existing role to the rank, so that every server member with enough points automatically receives the linked role.' },
									{ name: 'Delete Rank', value: 'Delete the rank permanently.' },
									{ name: '◀️ Back', value: 'Go back one page.' },

								);
							const buttonsa = new MessageButton()
								.setCustomId('edit_name')
								.setLabel('Edit Name')
								.setStyle('PRIMARY');
							const buttonsa1 = new MessageButton()
								.setCustomId('edit_threshold')
								.setLabel('Edit Threshold')
								.setStyle('PRIMARY');
							const buttonsb = new MessageButton()
								.setCustomId('create_role')
								.setLabel('Create Role')
								.setStyle('PRIMARY');
							const buttonsc = new MessageButton()
								.setCustomId('link_role')
								.setLabel('Link Role')
								.setStyle('PRIMARY');
							const buttonsd = new MessageButton()
								.setCustomId('delete_rank')
								.setLabel('Delete Rank')
								.setStyle('DANGER');
							const buttonse = new MessageButton()
								.setCustomId('diffbck')
								.setLabel('Back')
								.setStyle('SECONDARY')
								.setEmoji('◀️');

							const r1 = new MessageActionRow().addComponents(buttonsa, buttonsa1,  buttonsc);
							const r2 = new MessageActionRow().addComponents(buttonsd);
							const r3 = new MessageActionRow().addComponents(buttonse);
							interaction.editReply({ content: '\u200B', embeds: [setembed1], components: [r1, r2, r3] });

						})
						collectorcos2_unique.on('end', (collected, reason) => {
							if (reason == 'time') {
								const setembed2 = new MessageEmbed()

									.setTitle('Time Up!')
									.setDescription('Interaction Expired');
								interaction.editReply({ content: '\u200B', embeds: [setembed2], components: [] });
							}
							else {

							}
						})
						
					}
					////////////////////////
					if (storat.customId == 'diffbck') {
						storat.deferUpdate();
						collectorfetch.stop();

						if(rank_index<10){
							const setembed1 = new MessageEmbed()
	
							.setTitle('Coco | Settings')
							.setColor('#36393F')
							.addFields(
								{ name: 'Ranks', value: `Create, edit or delete ranks on \n\nYou have ${rank_index} ranks set up on your server!` },
								{ name: 'Add Rank', value: 'Add a new rank to your server.' },
								{ name: 'Edit Rank', value: 'Edit the name, threshold or role linked to an existing rank.' },
								
								{ name: '◀️ Back', value: 'Go back one page.' },
		
							);
						const buttonset1a = new MessageButton()
							.setCustomId('AR')
							.setLabel('Add Rank')
							.setStyle('PRIMARY');
						const buttonset2a = new MessageButton()
							.setCustomId('ER')
							.setLabel('Edit Rank')
							.setStyle('PRIMARY');
						const buttonset3a = new MessageButton()
							.setCustomId('seup')
							.setLabel('Dynamic Thresholds')
							.setStyle('SUCCESS');
						const buttonset1b = new MessageButton()
							.setCustomId('bck')
							.setLabel('Back')
							.setStyle('SECONDARY')
							.setEmoji('◀️');
		
						const r1 = new MessageActionRow().addComponents(buttonset1a, buttonset2a);
						const r2 = new MessageActionRow().addComponents(buttonset3a);
						const r3 = new MessageActionRow().addComponents(buttonset1b);
						interaction.editReply({ content: '\u200B', embeds: [setembed1], components: [r1,  r3] });
						}else {
							const setembed1 = new MessageEmbed()
	
						.setTitle('Coco | Settings')
						.setColor('#36393F')
						.addFields(
							{ name: 'Ranks', value: `Create, edit or delete ranks on \n\nYou have ${rank_index} ranks set up on your server!` },
							{ name: 'Edit Rank', value: 'Edit the name, threshold or role linked to an existing rank.' },
							
							{ name: '◀️ Back', value: 'Go back one page.' },
	
						);
					
					const buttonset2a = new MessageButton()
						.setCustomId('ER')
						.setLabel('Edit Rank')
						.setStyle('PRIMARY');
					const buttonset3a = new MessageButton()
						.setCustomId('seup')
						.setLabel('Dynamic Thresholds')
						.setStyle('SUCCESS');
					const buttonset1b = new MessageButton()
						.setCustomId('bck')
						.setLabel('Back')
						.setStyle('SECONDARY')
						.setEmoji('◀️');
	
					const r1 = new MessageActionRow().addComponents(buttonset2a);
					const r2 = new MessageActionRow().addComponents(buttonset3a);
					const r3 = new MessageActionRow().addComponents(buttonset1b);
					interaction.editReply({ content: '\u200B', embeds: [setembed1], components: [r1,  r3] });
						}
					}
					if(storat.customId=='cancel_it'){
						storat.deferUpdate();
						collectorcos2_unique.stop();
						collectorcos1_unique.stop();
						const setembed1 = new MessageEmbed()

					.setTitle(`Edit Rank | ${new_rank}`)
					.setColor('#36393F')
					.setDescription(`${new_rank} is worth ${previous_threshold} points.`)
					.addFields(
						{ name: 'Edit Name', value: 'Edit the name of the rank as it appears on the scoreboard.' },
						{ name: 'Edit Threshold', value: 'Edit the amount of points required to reach this rank on your server.' },
						{ name: 'Link Role', value: 'Link an existing role to the rank, so that every server member with enough points automatically receives the linked role.' },
						{ name: 'Delete Rank', value: 'Delete the rank permanently.' },
						{ name: '◀️ Back', value: 'Go back one page.' },

					);
					const buttonsa = new MessageButton()
					.setCustomId('edit_name')
					.setLabel('Edit Name')
					.setStyle('PRIMARY');
					const buttonsa1 = new MessageButton()
					.setCustomId('edit_threshold')
					.setLabel('Edit Threshold')
					.setStyle('PRIMARY');
					const buttonsb = new MessageButton()
					.setCustomId('create_role')
					.setLabel('Create Role')
					.setStyle('PRIMARY');
					const buttonsc = new MessageButton()
					.setCustomId('link_role')
					.setLabel('Link Role')
					.setStyle('PRIMARY');
					const buttonsd = new MessageButton()
					.setCustomId('delete_rank')
					.setLabel('Delete Rank')
					.setStyle('DANGER');
					const buttonse = new MessageButton()
					.setCustomId('diffbck')
					.setLabel('Back')
					.setStyle('SECONDARY')
					.setEmoji('◀️');

				const r1 = new MessageActionRow().addComponents(buttonsa, buttonsa1,  buttonsc);
				const r2 = new MessageActionRow().addComponents(buttonsd);
				const r3 = new MessageActionRow().addComponents(buttonse);
				interaction.editReply({ content: '\u200B', embeds: [setembed1], components: [r1, r2, r3] });
					}
				if(storat.customId=='delete_rank'){
storat.deferUpdate();
const setembed0 = new MessageEmbed()
.setTitle('Coco | Settings | Delete Rank')
.setColor('#36393F')
.addFields(
	{ name: 'Delete Rank', value: `Delete the rank permanently.` },
	{ name: '🛑 Confimation Required', value: 'Are you sure you want to perform this action? You cannot undo it later!' },
);
const b_yes = new MessageButton()
.setCustomId('b_yes')
.setLabel('Yes')
.setStyle('DANGER')

const b_no = new MessageButton()
.setCustomId('b_no')
.setLabel('No')
.setStyle('SECONDARY')
const r1 = new MessageActionRow().addComponents(b_yes, b_no);

interaction.editReply({content:'\u200B', embeds: [setembed0], components:[r1] });
interaction_delete = await interaction.fetchReply();



				const collector_delete = interaction_delete.createMessageComponentCollector({
					type: "BUTTON",

					time: 300000
				});


				collector_delete.on("collect", async (temi_delete) => {
					
					if(temi_delete.customId=='b_yes'){
						temi_delete.deferUpdate();
						collectorfetch.stop();

						const rank_4 = await Ranks.destroy({ where: { index: rank_index } });
					rank_index = rank_index - 1;





						const setembed1 = new MessageEmbed()

							.setTitle('Coco | Settings')
							.setColor('#36393F')
							.addFields(
								{ name: 'Ranks', value: `Create, edit or delete ranks on \n\nYou have ${rank_index} ranks set up on your server!` },
								{ name: 'Add Rank', value: 'Add a new rank to your server.' },
								{ name: 'Edit Rank', value: 'Edit the name, threshold or role linked to an existing rank.' },
								
								{ name: '◀️ Back', value: 'Go back one page.' },

							);
						const buttonset1a = new MessageButton()
							.setCustomId('AR')
							.setLabel('Add Rank')
							.setStyle('PRIMARY');
						const buttonset2a = new MessageButton()
							.setCustomId('ER')
							.setLabel('Edit Rank')
							.setStyle('PRIMARY');
						const buttonset3a = new MessageButton()
							.setCustomId('seup')
							.setLabel('Dynamic Thresholds')
							.setStyle('SUCCESS');
						const buttonset1b = new MessageButton()
							.setCustomId('bck')
							.setLabel('Back')
							.setStyle('SECONDARY')
							.setEmoji('◀️');

						const r1 = new MessageActionRow().addComponents(buttonset1a, buttonset2a);
						const r2 = new MessageActionRow().addComponents(buttonset3a);
						const r3 = new MessageActionRow().addComponents(buttonset1b);
						interaction.editReply({ content: '\u200B', embeds: [setembed1], components: [r1,  r3] });

					}
					if(temi_delete.customId=='b_no'){
						temi_delete.deferUpdate();
						collector_delete.stop();
						const setembed1 = new MessageEmbed()

					.setTitle(`Edit Rank | ${new_rank}`)
					.setColor('#36393F')
					.setDescription(`${new_rank} is worth ${previous_threshold} points.`)
					.addFields(
						{ name: 'Edit Name', value: 'Edit the name of the rank as it appears on the scoreboard.' },
						{ name: 'Edit Threshold', value: 'Edit the amount of points required to reach this rank on your server.' },
						{ name: 'Link Role', value: 'Link an existing role to the rank, so that every server member with enough points automatically receives the linked role.' },
						{ name: 'Delete Rank', value: 'Delete the rank permanently.' },
						{ name: '◀️ Back', value: 'Go back one page.' },

					);
					const buttonsa = new MessageButton()
					.setCustomId('edit_name')
					.setLabel('Edit Name')
					.setStyle('PRIMARY');
					const buttonsa1 = new MessageButton()
					.setCustomId('edit_threshold')
					.setLabel('Edit Threshold')
					.setStyle('PRIMARY');
					const buttonsb = new MessageButton()
					.setCustomId('create_role')
					.setLabel('Create Role')
					.setStyle('PRIMARY');
					const buttonsc = new MessageButton()
					.setCustomId('link_role')
					.setLabel('Link Role')
					.setStyle('PRIMARY');
					const buttonsd = new MessageButton()
					.setCustomId('delete_rank')
					.setLabel('Delete Rank')
					.setStyle('DANGER');
					const buttonse = new MessageButton()
					.setCustomId('diffbck')
					.setLabel('Back')
					.setStyle('SECONDARY')
					.setEmoji('◀️');

				const r1 = new MessageActionRow().addComponents(buttonsa, buttonsa1,  buttonsc);
				const r2 = new MessageActionRow().addComponents(buttonsd);
				const r3 = new MessageActionRow().addComponents(buttonse);
				interaction.editReply({ content: '\u200B', embeds: [setembed1], components: [r1, r2, r3] });
					}
				})
					collector_delete.on("end", (collected, reason) => {


					});


						
				}	


				});
				collectorfetch.on("end", (collected, reason) => {


				});



			}
			///////////////////////////////////////////////////////////////////setting scoreboard/////////////////////////////////////////////////////////////////////////////////////////////////////
			if (semi.customId == 'seup') {
				semi.deferUpdate();
				const channel = await interaction.guild.channels.create('coco-scoreboard', {
					type: 'GUILD_TEXT',
					permissionOverwrites: [
						{
							id: interaction.guild.id,
							deny: [Permissions.FLAGS.SEND_MESSAGES],

						},
					],

					//topic: 'this is the beginning of this server',
					position: 0,
				})
				mastermind = await channel.send('hi');
				chid = channel.id;
				ldb = 1;
				if (srlstatus == 0) {
					srlmsg = '🔴 Off';
				} else {
					srlmsg = '🟢 On';
				}
				const setembed1 = new MessageEmbed()

					.setTitle('Coco | Settings')
					.setColor('#36393F')
					.addFields(
						{ name: 'Scoreboard', value: 'Create, edit or delete the live updating scoreboard from here.\n\nThere is no live scoreboard on this server. You can set one up here!' },
						{ name: 'Edit Score Limits', value: 'Change how many points each server member can gain with an activity each day, week or month.' },
						{ name: 'Change Decay', value: `Change how fast server members lose points due to inactivity.\n\nCurrent value: ${decayval} % / week` },
						{ name: 'Change Size', value: `Change how many server members should be visible on the scoreboard.\n\nCurrent value: ${chsize} members` },
						{ name: 'Show Rank List', value: `Set whether the ranks are listed at the bottom of the scoreboard together with their minimum scores.\n\nCurrent state:  ${srlmsg}` },
						{ name: 'Remove', value: 'Removes the live updating scoreboard channel.' },
						{ name: '◀️ Back', value: 'Go back one page.' },

					);
				const buttonset1a = new MessageButton()
					.setCustomId('esl')
					.setLabel('Edit Score Limits')
					.setStyle('PRIMARY');
				const buttonset2a = new MessageButton()
					.setCustomId('cd')
					.setLabel('Change Decay')
					.setStyle('PRIMARY');
				const buttonset3a = new MessageButton()
					.setCustomId('csz')
					.setLabel('Change Size')
					.setStyle('PRIMARY');
				const buttonset3b = new MessageButton()
					.setCustomId('srl')
					.setLabel('Show Rank List')
					.setStyle('PRIMARY');
				const buttonset3c = new MessageButton()
					.setCustomId('rmv')
					.setLabel('Remove')
					.setStyle('DANGER');
				const buttonset1b = new MessageButton()
					.setCustomId('bck')
					.setLabel('Back')
					.setStyle('SECONDARY')
					.setEmoji('◀️');

				const r1 = new MessageActionRow().addComponents(buttonset1a, buttonset2a);
				const r2 = new MessageActionRow().addComponents(buttonset3a, buttonset3b);
				const r25 = new MessageActionRow().addComponents(buttonset3c);
				const r3 = new MessageActionRow().addComponents(buttonset1b);
				interaction.editReply({ content: '\u200B', embeds: [setembed1], components: [r1, r2, r25, r3] });
				nIntervId = setInterval(leaderboard, 600000);
				leaderboard();
				console.log(ldb, globalThis.ldb)





			}
			/////////////////////////////////////////////////////////removing scoreboard/////////////////////////////////////////////////////////////////////////////////////////////////////////////////			
			if (semi.customId == 'rmv') {
				semi.deferUpdate();



				ldb = 0;
				const setembed1 = new MessageEmbed()

					.setTitle('Coco | Settings')
					.setColor('#36393F')
					.addFields(
						{ name: 'Scoreboard', value: 'Create, edit or delete the live updating scoreboard from here.\n\nThere is no live scoreboard on this server. You can set one up here!' },
						{ name: 'Edit Score Limits', value: 'Change how many points each server member can gain with an activity each day, week or month.' },
						{ name: 'Change Decay', value: `Change how fast server members lose points due to inactivity.\n\nCurrent value: ${decayval} % / week` },
						{ name: 'Set Up', value: 'Sets up a new live updating scoreboard. Coco will create a new channel on your server that only contains the scoreboard.\nFor this command to work properly, ensure that Coco has the "Manage Channels" permission.' },
						{ name: '◀️ Back', value: 'Go back one page.' },

					);
				const buttonset1a = new MessageButton()
					.setCustomId('esl')
					.setLabel('Edit Score Limits')
					.setStyle('PRIMARY');
				const buttonset2a = new MessageButton()
					.setCustomId('cd')
					.setLabel('Change Decay')
					.setStyle('PRIMARY');
				const buttonset3a = new MessageButton()
					.setCustomId('seup')
					.setLabel('Set Up')
					.setStyle('SUCCESS');
				const buttonset1b = new MessageButton()
					.setCustomId('bck')
					.setLabel('Back')
					.setStyle('SECONDARY')
					.setEmoji('◀️');

				const r1 = new MessageActionRow().addComponents(buttonset1a, buttonset2a);
				const r2 = new MessageActionRow().addComponents(buttonset3a);
				const r3 = new MessageActionRow().addComponents(buttonset1b);
				interaction.editReply({ content: '\u200B', embeds: [setembed1], components: [r1, r2, r3] });
				clearInterval(nIntervId);
				// release our intervalID from the variable
				nIntervId = null;

				await chdelete();
				//collectorud1.stop('charkh')



			}
			//////////////////////////////going back first page////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
			if (semi.customId == 'bck') {
				semi.deferUpdate();
				const setembed = new MessageEmbed()

					.setTitle('Coco | Settings')
					.setColor('#36393F')
					.addFields(
						{ name: 'Overview', value: 'Use the buttons to navigate the settings menu!' },
						{ name: 'Scoreboard', value: 'Create, edit or delete the live updating scoreboard.' },
						{ name: 'Ranks', value: 'Create, edit or delete ranks on your server.' },
					);

				const buttonset1 = new MessageButton()
					.setCustomId('next')
					.setLabel('Scoreboard')
					.setStyle('PRIMARY');
				const buttonset2 = new MessageButton()
					.setCustomId('next1')
					.setLabel('Ranks')
					.setStyle('PRIMARY');

				const pot = new MessageActionRow().addComponents(buttonset1, buttonset2);

				interaction.editReply({ content: '\u200B', embeds: [setembed], components: [pot], ephemeral: true });
			}
			//////////////////////////////////changing decay///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
			if (semi.customId == 'cd') {
				semi.deferUpdate();
				numdis = true;
				backdis = false;
				tempdv = decayval;
				savedis = false;
				const setembed = new MessageEmbed()

					.setTitle('Coco | Settings | Change Decay')
					.setColor('#36393F')
					.addFields(
						{ name: '**Change Decay**', value: `Change how fast server members lose points due to inactivity.\nDecay is exponential, meaning the more points a server member has, the faster they will lose them again. This helps to ensure that the members at the top of the scoreboard can't rest on their laurels and instead have to stay active to maintain their status.\nThe exponential decay runs continuously, but in very small increments. You can provide a target value here, and Coco will ensure that after a week of inactivity and a slowly trickling decay, members will have that percentage of their original score left.` },
						{ name: 'Set Value', value: `Use the keypad to set the value and click **Save** when you're done.` },

					);
				const setembed1 = new MessageEmbed()

					.setTitle(`➡ ${decayval}%/week`)
					.setDescription(`Previous value: ${decayval}%/week`)

					.setColor('#90ee90');
				//.setColor('#90ee90');

				const n1 = new MessageButton()
					.setCustomId('1')
					.setLabel('1')
					.setStyle('PRIMARY')
					.setDisabled(`${numdis}`);
				const n2 = new MessageButton()
					.setCustomId('2')
					.setLabel('2')
					.setStyle('PRIMARY')
					.setDisabled(`${numdis}`);
				const n3 = new MessageButton()
					.setCustomId('3')
					.setLabel('3')
					.setStyle('PRIMARY')
					.setDisabled(`${numdis}`);
				const n4 = new MessageButton()
					.setCustomId('4')
					.setLabel('4')
					.setStyle('PRIMARY')
					.setDisabled(`${numdis}`);
				const n5 = new MessageButton()
					.setCustomId('5')
					.setLabel('5')
					.setStyle('PRIMARY')
					.setDisabled(`${numdis}`);
				const n6 = new MessageButton()
					.setCustomId('6')
					.setLabel('6')
					.setStyle('PRIMARY')
					.setDisabled(`${numdis}`);
				const n7 = new MessageButton()
					.setCustomId('7')
					.setLabel('7')
					.setStyle('PRIMARY')
					.setDisabled(`${numdis}`);
				const n8 = new MessageButton()
					.setCustomId('8')
					.setLabel('8')
					.setStyle('PRIMARY')
					.setDisabled(`${numdis}`);
				const n9 = new MessageButton()
					.setCustomId('9')
					.setLabel('9')
					.setStyle('PRIMARY')
					.setDisabled(`${numdis}`);
				const n0 = new MessageButton()
					.setCustomId('0')
					.setLabel('0')
					.setStyle('PRIMARY')
					.setDisabled(`${numdis}`);
				const n00 = new MessageButton()
					.setCustomId('blank')
					.setLabel('\u200B')
					.setStyle('SECONDARY')
					.setDisabled(`true`);
				const ns = new MessageButton()
					.setCustomId('BACKSPACE')
					.setLabel('‹')
					.setStyle('DANGER')
					.setDisabled(`${backdis}`);
				const nc = new MessageButton()
					.setCustomId('CANCEL')
					.setLabel('Cancel')
					.setStyle('PRIMARY');
				const nsa = new MessageButton()
					.setCustomId('SAVE')
					.setLabel('Save')
					.setStyle('SUCCESS')
					.setDisabled(`${savedis}`);



				const r1 = new MessageActionRow().addComponents(n1, n2, n3);
				const r2 = new MessageActionRow().addComponents(n4, n5, n6);
				const r3 = new MessageActionRow().addComponents(n7, n8, n9);
				const r4 = new MessageActionRow().addComponents(n00, n0, ns);
				const r5 = new MessageActionRow().addComponents(nc, nsa);

				interaction.editReply({ content: '\u200B', embeds: [setembed, setembed1], components: [r1, r2, r3, r4, r5], ephemeral: true });
				sodium1 = await interaction.fetchReply();



				const collectorud1 = sodium1.createMessageComponentCollector({
					type: "BUTTON",

					time: 300000
				});


				collectorud1.on("collect", async (temi) => {
					temi.deferUpdate();
					if (temi.customId == 'BACKSPACE') {
						tempdv = Math.floor(tempdv / 10);
					}
					if (temi.customId != 'BACKSPACE' && temi.customId != 'SAVE' && temi.customId != 'CANCEL') {
						tempdv = (tempdv) + temi.customId;
						tempdv = parseInt(tempdv, 10);
					}
					if (tempdv < 10) {
						numdis = false;
						backdis = false;
						colr = '#FF0000';
						savedis = true;
					}
					if (tempdv == 0) {
						backdis = true;
					}
					if (tempdv >= 10) {
						numdis = true;
						backdis = false;
						savedis = false;
						colr = '#90ee90';
					}
					const n1 = new MessageButton()
						.setCustomId('1')
						.setLabel('1')
						.setStyle('PRIMARY')
						.setDisabled(`${numdis}`);
					const n2 = new MessageButton()
						.setCustomId('2')
						.setLabel('2')
						.setStyle('PRIMARY')
						.setDisabled(`${numdis}`);
					const n3 = new MessageButton()
						.setCustomId('3')
						.setLabel('3')
						.setStyle('PRIMARY')
						.setDisabled(`${numdis}`);
					const n4 = new MessageButton()
						.setCustomId('4')
						.setLabel('4')
						.setStyle('PRIMARY')
						.setDisabled(`${numdis}`);
					const n5 = new MessageButton()
						.setCustomId('5')
						.setLabel('5')
						.setStyle('PRIMARY')
						.setDisabled(`${numdis}`);
					const n6 = new MessageButton()
						.setCustomId('6')
						.setLabel('6')
						.setStyle('PRIMARY')
						.setDisabled(`${numdis}`);
					const n7 = new MessageButton()
						.setCustomId('7')
						.setLabel('7')
						.setStyle('PRIMARY')
						.setDisabled(`${numdis}`);
					const n8 = new MessageButton()
						.setCustomId('8')
						.setLabel('8')
						.setStyle('PRIMARY')
						.setDisabled(`${numdis}`);
					const n9 = new MessageButton()
						.setCustomId('9')
						.setLabel('9')
						.setStyle('PRIMARY')
						.setDisabled(`${numdis}`);
					const n0 = new MessageButton()
						.setCustomId('0')
						.setLabel('0')
						.setStyle('PRIMARY')
						.setDisabled(`${numdis}`);
					const n00 = new MessageButton()
						.setCustomId('blank')
						.setLabel('\u200B')
						.setStyle('SECONDARY')
						.setDisabled(`true`);
					const ns = new MessageButton()
						.setCustomId('BACKSPACE')
						.setLabel('‹')
						.setStyle('DANGER')
						.setDisabled(`${backdis}`);
					const nc = new MessageButton()
						.setCustomId('CANCEL')
						.setLabel('Cancel')
						.setStyle('PRIMARY');
					const nsa = new MessageButton()
						.setCustomId('SAVE')
						.setLabel('Save')
						.setStyle('SUCCESS')
						.setDisabled(`${savedis}`);



					const r1 = new MessageActionRow().addComponents(n1, n2, n3);
					const r2 = new MessageActionRow().addComponents(n4, n5, n6);
					const r3 = new MessageActionRow().addComponents(n7, n8, n9);
					const r4 = new MessageActionRow().addComponents(n00, n0, ns);
					const r5 = new MessageActionRow().addComponents(nc, nsa);
					if (tempdv >= 10) {
						const setembed1 = new MessageEmbed()

							.setTitle(`➡ ${tempdv}%/week`)
							.setDescription(`Previous value: ${decayval}%/week`)

							.setColor(`${colr}`);
						interaction.editReply({ content: '\u200B', embeds: [setembed, setembed1], components: [r1, r2, r3, r4, r5], ephemeral: true });
					}
					else {
						const setembed1 = new MessageEmbed()

							.setTitle(`➡ ${tempdv}%/week`)
							.setDescription(`**Minimum value**: 10%\nPrevious value: ${decayval}%/week`)

							.setColor(`${colr}`);
						interaction.editReply({ content: '\u200B', embeds: [setembed, setembed1], components: [r1, r2, r3, r4, r5], ephemeral: true });
					}
					if (temi.customId == 'CANCEL' || temi.customId == 'SAVE') {

						collectorud1.stop();
						if (temi.customId == 'SAVE') {
							decayval = tempdv;
						}
						if (ldb == 0) {
							const setembed1 = new MessageEmbed()

								.setTitle('Coco | Settings')
								.setColor('#36393F')
								.addFields(
									{ name: 'Scoreboard', value: 'Create, edit or delete the live updating scoreboard from here.\n\nThere is no live scoreboard on this server. You can set one up here!' },
									{ name: 'Edit Score Limits', value: 'Change how many points each server member can gain with an activity each day, week or month.' },
									{ name: 'Change Decay', value: `Change how fast server members lose points due to inactivity.\n\nCurrent value: ${decayval} % / week` },
									{ name: 'Set Up', value: 'Sets up a new live updating scoreboard. Coco will create a new channel on your server that only contains the scoreboard.\nFor this command to work properly, ensure that Coco has the "Manage Channels" permission.' },
									{ name: '◀️ Back', value: 'Go back one page.' },

								);
							const buttonset1a = new MessageButton()
								.setCustomId('esl')
								.setLabel('Edit Score Limits')
								.setStyle('PRIMARY');
							const buttonset2a = new MessageButton()
								.setCustomId('cd')
								.setLabel('Change Decay')
								.setStyle('PRIMARY');
							const buttonset3a = new MessageButton()
								.setCustomId('seup')
								.setLabel('Set Up')
								.setStyle('SUCCESS');
							const buttonset1b = new MessageButton()
								.setCustomId('bck')
								.setLabel('Back')
								.setStyle('SECONDARY')
								.setEmoji('◀️');

							const r1 = new MessageActionRow().addComponents(buttonset1a, buttonset2a);
							const r2 = new MessageActionRow().addComponents(buttonset3a);
							const r3 = new MessageActionRow().addComponents(buttonset1b);
							interaction.editReply({ content: '\u200B', embeds: [setembed1], components: [r1, r2, r3] });
						}
						else {
							if (srlstatus == 0) {
								srlmsg = '🔴 Off';
							} else {
								srlmsg = '🟢 On';
							}
							const setembed1 = new MessageEmbed()

								.setTitle('Coco | Settings')
								.setColor('#36393F')
								.addFields(
									{ name: 'Scoreboard', value: 'Create, edit or delete the live updating scoreboard from here.\n\nThere is no live scoreboard on this server. You can set one up here!' },
									{ name: 'Edit Score Limits', value: 'Change how many points each server member can gain with an activity each day, week or month.' },
									{ name: 'Change Decay', value: `Change how fast server members lose points due to inactivity.\n\nCurrent value: ${decayval} % / week` },
									{ name: 'Change Size', value: `Change how many server members should be visible on the scoreboard.\n\nCurrent value: ${chsize} members` },
									{ name: 'Show Rank List', value: `Set whether the ranks are listed at the bottom of the scoreboard together with their minimum scores.\n\nCurrent state:  ${srlmsg}` },
									{ name: 'Remove', value: 'Removes the live updating scoreboard channel.' },
									{ name: '◀️ Back', value: 'Go back one page.' },

								);
							const buttonset1a = new MessageButton()
								.setCustomId('esl')
								.setLabel('Edit Score Limits')
								.setStyle('PRIMARY');
							const buttonset2a = new MessageButton()
								.setCustomId('cd')
								.setLabel('Change Decay')
								.setStyle('PRIMARY');
							const buttonset3a = new MessageButton()
								.setCustomId('csz')
								.setLabel('Change Size')
								.setStyle('PRIMARY');
							const buttonset3b = new MessageButton()
								.setCustomId('srl')
								.setLabel('Show Rank List')
								.setStyle('PRIMARY');
							const buttonset3c = new MessageButton()
								.setCustomId('rmv')
								.setLabel('Remove')
								.setStyle('DANGER');
							const buttonset1b = new MessageButton()
								.setCustomId('bck')
								.setLabel('Back')
								.setStyle('SECONDARY')
								.setEmoji('◀️');

							const r1 = new MessageActionRow().addComponents(buttonset1a, buttonset2a);
							const r2 = new MessageActionRow().addComponents(buttonset3a, buttonset3b);
							const r25 = new MessageActionRow().addComponents(buttonset3c);
							const r3 = new MessageActionRow().addComponents(buttonset1b);
							interaction.editReply({ content: '\u200B', embeds: [setembed1], components: [r1, r2, r25, r3] });

						}

					}










				})
				collectorud1.on("end", (collected, reason) => {


				});



			}
			//////////////////////////////////////////////////////CHANGE SIZE//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
			if (semi.customId == 'csz') {
				semi.deferUpdate();
				numdis = true;
				numdis0 = true;
				backdis = false;
				tempsz = chsize;
				savedis = false;
				const setembed = new MessageEmbed()

					.setTitle('Coco | Settings | Change Size')
					.setColor('#36393F')
					.addFields(
						{ name: '**Change Size**', value: `Change how many server members should be visible on the scoreboard.` },
						{ name: 'Set Value', value: `Use the keypad to set the value and click **Save** when you're done.` },

					);
				const setembed1 = new MessageEmbed()

					.setTitle(`➡ ${chsize} members`)
					.setDescription(`Previous value: ${chsize} members`)

					.setColor('#90ee90');
				//.setColor('#90ee90');

				const n1 = new MessageButton()
					.setCustomId('1')
					.setLabel('1')
					.setStyle('PRIMARY')
					.setDisabled(`${numdis}`);
				const n2 = new MessageButton()
					.setCustomId('2')
					.setLabel('2')
					.setStyle('PRIMARY')
					.setDisabled(`${numdis}`);
				const n3 = new MessageButton()
					.setCustomId('3')
					.setLabel('3')
					.setStyle('PRIMARY')
					.setDisabled(`${numdis}`);
				const n4 = new MessageButton()
					.setCustomId('4')
					.setLabel('4')
					.setStyle('PRIMARY')
					.setDisabled(`${numdis}`);
				const n5 = new MessageButton()
					.setCustomId('5')
					.setLabel('5')
					.setStyle('PRIMARY')
					.setDisabled(`${numdis}`);
				const n6 = new MessageButton()
					.setCustomId('6')
					.setLabel('6')
					.setStyle('PRIMARY')
					.setDisabled(`${numdis}`);
				const n7 = new MessageButton()
					.setCustomId('7')
					.setLabel('7')
					.setStyle('PRIMARY')
					.setDisabled(`${numdis}`);
				const n8 = new MessageButton()
					.setCustomId('8')
					.setLabel('8')
					.setStyle('PRIMARY')
					.setDisabled(`${numdis}`);
				const n9 = new MessageButton()
					.setCustomId('9')
					.setLabel('9')
					.setStyle('PRIMARY')
					.setDisabled(`${numdis}`);
				const n0 = new MessageButton()
					.setCustomId('0')
					.setLabel('0')
					.setStyle('PRIMARY')
					.setDisabled(`${numdis0}`);
				const n00 = new MessageButton()
					.setCustomId('blank')
					.setLabel('\u200B')
					.setStyle('SECONDARY')
					.setDisabled(`true`);
				const ns = new MessageButton()
					.setCustomId('BACKSPACE')
					.setLabel('‹')
					.setStyle('DANGER')
					.setDisabled(`${backdis}`);
				const nc = new MessageButton()
					.setCustomId('CANCEL')
					.setLabel('Cancel')
					.setStyle('PRIMARY');
				const nsa = new MessageButton()
					.setCustomId('SAVE')
					.setLabel('Save')
					.setStyle('SUCCESS')
					.setDisabled(`${savedis}`);



				const r1 = new MessageActionRow().addComponents(n1, n2, n3);
				const r2 = new MessageActionRow().addComponents(n4, n5, n6);
				const r3 = new MessageActionRow().addComponents(n7, n8, n9);
				const r4 = new MessageActionRow().addComponents(n00, n0, ns);
				const r5 = new MessageActionRow().addComponents(nc, nsa);

				interaction.editReply({ content: '\u200B', embeds: [setembed, setembed1], components: [r1, r2, r3, r4, r5], ephemeral: true });
				sodium1 = await interaction.fetchReply();



				const collectorud1 = sodium1.createMessageComponentCollector({
					type: "BUTTON",

					time: 300000
				});


				collectorud1.on("collect", async (temi) => {
					temi.deferUpdate();
					if (temi.customId == 'BACKSPACE') {
						tempsz = Math.floor(tempsz / 10);
					}
					if (temi.customId != 'BACKSPACE' && temi.customId != 'SAVE' && temi.customId != 'CANCEL') {
						tempsz = (tempsz) + temi.customId;
						tempsz = parseInt(tempsz, 10);
					}
					if (tempsz <= 2 && tempsz != 0) {
						numdis = true;
						numdis0 = false;
						backdis = false;



					}
					if (tempsz == 0) {
						backdis = true;
						numdis = false;
						savedis = true;
					}
					if (tempsz >= 3) {
						numdis = true;
						numdis0 = true;
						backdis = false;


					}
					if (tempsz >= 5) {
						colr = '#90ee90';
						savedis = false;
					}
					if (tempsz < 5) {
						colr = '#FF0000';
						savedis = true;
					}
					const n1 = new MessageButton()
						.setCustomId('1')
						.setLabel('1')
						.setStyle('PRIMARY')
						.setDisabled(`${numdis}`);
					const n2 = new MessageButton()
						.setCustomId('2')
						.setLabel('2')
						.setStyle('PRIMARY')
						.setDisabled(`${numdis}`);
					const n3 = new MessageButton()
						.setCustomId('3')
						.setLabel('3')
						.setStyle('PRIMARY')
						.setDisabled(`${numdis}`);
					const n4 = new MessageButton()
						.setCustomId('4')
						.setLabel('4')
						.setStyle('PRIMARY')
						.setDisabled(`${numdis}`);
					const n5 = new MessageButton()
						.setCustomId('5')
						.setLabel('5')
						.setStyle('PRIMARY')
						.setDisabled(`${numdis}`);
					const n6 = new MessageButton()
						.setCustomId('6')
						.setLabel('6')
						.setStyle('PRIMARY')
						.setDisabled(`${numdis}`);
					const n7 = new MessageButton()
						.setCustomId('7')
						.setLabel('7')
						.setStyle('PRIMARY')
						.setDisabled(`${numdis}`);
					const n8 = new MessageButton()
						.setCustomId('8')
						.setLabel('8')
						.setStyle('PRIMARY')
						.setDisabled(`${numdis}`);
					const n9 = new MessageButton()
						.setCustomId('9')
						.setLabel('9')
						.setStyle('PRIMARY')
						.setDisabled(`${numdis}`);
					const n0 = new MessageButton()
						.setCustomId('0')
						.setLabel('0')
						.setStyle('PRIMARY')
						.setDisabled(`${numdis0}`);
					const n00 = new MessageButton()
						.setCustomId('blank')
						.setLabel('\u200B')
						.setStyle('SECONDARY')
						.setDisabled(`true`);
					const ns = new MessageButton()
						.setCustomId('BACKSPACE')
						.setLabel('‹')
						.setStyle('DANGER')
						.setDisabled(`${backdis}`);
					const nc = new MessageButton()
						.setCustomId('CANCEL')
						.setLabel('Cancel')
						.setStyle('PRIMARY');
					const nsa = new MessageButton()
						.setCustomId('SAVE')
						.setLabel('Save')
						.setStyle('SUCCESS')
						.setDisabled(`${savedis}`);



					const r1 = new MessageActionRow().addComponents(n1, n2, n3);
					const r2 = new MessageActionRow().addComponents(n4, n5, n6);
					const r3 = new MessageActionRow().addComponents(n7, n8, n9);
					const r4 = new MessageActionRow().addComponents(n00, n0, ns);
					const r5 = new MessageActionRow().addComponents(nc, nsa);
					if (tempsz >= 5) {
						const setembed1 = new MessageEmbed()

							.setTitle(`➡ ${tempsz} members`)
							.setDescription(`Previous value: ${chsize} members`)

							.setColor(`${colr}`);
						interaction.editReply({ content: '\u200B', embeds: [setembed, setembed1], components: [r1, r2, r3, r4, r5], ephemeral: true });
					}
					else {
						const setembed1 = new MessageEmbed()

							.setTitle(`➡ ${tempsz} members`)
							.setDescription(`**Minimum value**: 5\nPrevious value: ${chsize} members`)

							.setColor(`${colr}`);
						interaction.editReply({ content: '\u200B', embeds: [setembed, setembed1], components: [r1, r2, r3, r4, r5], ephemeral: true });
					}
					if (temi.customId == 'CANCEL' || temi.customId == 'SAVE') {

						collectorud1.stop();
						if (temi.customId == 'SAVE') {
							chsize = tempsz;
						}
						if (ldb == 0) {
							const setembed1 = new MessageEmbed()

								.setTitle('Coco | Settings')
								.setColor('#36393F')
								.addFields(
									{ name: 'Scoreboard', value: 'Create, edit or delete the live updating scoreboard from here.\n\nThere is no live scoreboard on this server. You can set one up here!' },
									{ name: 'Edit Score Limits', value: 'Change how many points each server member can gain with an activity each day, week or month.' },
									{ name: 'Change Decay', value: `Change how fast server members lose points due to inactivity.\n\nCurrent value: ${decayval} % / week` },
									{ name: 'Set Up', value: 'Sets up a new live updating scoreboard. Coco will create a new channel on your server that only contains the scoreboard.\nFor this command to work properly, ensure that Coco has the "Manage Channels" permission.' },
									{ name: '◀️ Back', value: 'Go back one page.' },

								);
							const buttonset1a = new MessageButton()
								.setCustomId('esl')
								.setLabel('Edit Score Limits')
								.setStyle('PRIMARY');
							const buttonset2a = new MessageButton()
								.setCustomId('cd')
								.setLabel('Change Decay')
								.setStyle('PRIMARY');
							const buttonset3a = new MessageButton()
								.setCustomId('seup')
								.setLabel('Set Up')
								.setStyle('SUCCESS');
							const buttonset1b = new MessageButton()
								.setCustomId('bck')
								.setLabel('Back')
								.setStyle('SECONDARY')
								.setEmoji('◀️');

							const r1 = new MessageActionRow().addComponents(buttonset1a, buttonset2a);
							const r2 = new MessageActionRow().addComponents(buttonset3a);
							const r3 = new MessageActionRow().addComponents(buttonset1b);
							interaction.editReply({ content: '\u200B', embeds: [setembed1], components: [r1, r2, r3] });
						}
						else {
							if (srlstatus == 0) {
								srlmsg = '🔴 Off';
							} else {
								srlmsg = '🟢 On';
							}
							const setembed1 = new MessageEmbed()

								.setTitle('Coco | Settings')
								.setColor('#36393F')
								.addFields(
									{ name: 'Scoreboard', value: 'Create, edit or delete the live updating scoreboard from here.\n\nThere is no live scoreboard on this server. You can set one up here!' },
									{ name: 'Edit Score Limits', value: 'Change how many points each server member can gain with an activity each day, week or month.' },
									{ name: 'Change Decay', value: `Change how fast server members lose points due to inactivity.\n\nCurrent value: ${decayval} % / week` },
									{ name: 'Change Size', value: `Change how many server members should be visible on the scoreboard.\n\nCurrent value: ${chsize} members` },
									{ name: 'Show Rank List', value: `Set whether the ranks are listed at the bottom of the scoreboard together with their minimum scores.\n\nCurrent state:  ${srlmsg}` },
									{ name: 'Remove', value: 'Removes the live updating scoreboard channel.' },
									{ name: '◀️ Back', value: 'Go back one page.' },

								);
							const buttonset1a = new MessageButton()
								.setCustomId('esl')
								.setLabel('Edit Score Limits')
								.setStyle('PRIMARY');
							const buttonset2a = new MessageButton()
								.setCustomId('cd')
								.setLabel('Change Decay')
								.setStyle('PRIMARY');
							const buttonset3a = new MessageButton()
								.setCustomId('csz')
								.setLabel('Change Size')
								.setStyle('PRIMARY');
							const buttonset3b = new MessageButton()
								.setCustomId('srl')
								.setLabel('Show Rank List')
								.setStyle('PRIMARY');
							const buttonset3c = new MessageButton()
								.setCustomId('rmv')
								.setLabel('Remove')
								.setStyle('DANGER');
							const buttonset1b = new MessageButton()
								.setCustomId('bck')
								.setLabel('Back')
								.setStyle('SECONDARY')
								.setEmoji('◀️');

							const r1 = new MessageActionRow().addComponents(buttonset1a, buttonset2a);
							const r2 = new MessageActionRow().addComponents(buttonset3a, buttonset3b);
							const r25 = new MessageActionRow().addComponents(buttonset3c);
							const r3 = new MessageActionRow().addComponents(buttonset1b);
							interaction.editReply({ content: '\u200B', embeds: [setembed1], components: [r1, r2, r25, r3] });

						}

					}










				})
				collectorud1.on("end", (collected, reason) => {


				});
			}
			//////////////////////////////////////////////////////////Show Rank//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
			if (semi.customId == 'srl') {
				semi.deferUpdate();
				if (srlstatus == 0) {
					srlmsg = '🔴 Off';
				} else {
					srlmsg = '🟢 On';
				}
				const srle = new MessageEmbed()
					.setTitle('Coco | Settings | Show Rank List')
					.addFields(
						{ name: 'Show Rank List', value: 'Set whether the ranks are listed at the bottom of the scoreboard together with their minimum scores.' },
						{ name: 'Toggle', value: `Current state: ${srlmsg}` },
						{ name: '🟢 On', value: 'There will be a list with the ranks and their respective requirements at the bottom of the scoreboard.', inline: true },
						{ name: '🔴 Off', value: 'The ranks will still be shown in the scoreboard itself, but their requirements will not be listed anywhere.', inline: true },
					);
				const buttonon = new MessageButton()
					.setCustomId('on')
					.setLabel('On')
					.setStyle('SUCCESS');
				const buttonoff = new MessageButton()
					.setCustomId('off')
					.setLabel('Off')
					.setStyle('DANGER');

				const r1 = new MessageActionRow().addComponents(buttonon, buttonoff);
				interaction.editReply({ content: '\u200B', embeds: [srle], components: [r1], ephemeral: true });
				sodium1 = await interaction.fetchReply();



				const collectorud1 = sodium1.createMessageComponentCollector({
					type: "BUTTON",

					time: 300000
				});


				collectorud1.on("collect", async (temi) => {
					temi.deferUpdate();
					if (temi.customId == 'on') {
						collectorud1.stop();
						srlstatus = 1;

					}
					if (temi.customId == 'off') {
						collectorud1.stop();
						srlstatus = 0;

					}
					if (ldb == 0) {
						const setembed1 = new MessageEmbed()

							.setTitle('Coco | Settings')
							.setColor('#36393F')
							.addFields(
								{ name: 'Scoreboard', value: 'Create, edit or delete the live updating scoreboard from here.\n\nThere is no live scoreboard on this server. You can set one up here!' },
								{ name: 'Edit Score Limits', value: 'Change how many points each server member can gain with an activity each day, week or month.' },
								{ name: 'Change Decay', value: `Change how fast server members lose points due to inactivity.\n\nCurrent value: ${decayval} % / week` },
								{ name: 'Set Up', value: 'Sets up a new live updating scoreboard. Coco will create a new channel on your server that only contains the scoreboard.\nFor this command to work properly, ensure that Coco has the "Manage Channels" permission.' },
								{ name: '◀️ Back', value: 'Go back one page.' },

							);
						const buttonset1a = new MessageButton()
							.setCustomId('esl')
							.setLabel('Edit Score Limits')
							.setStyle('PRIMARY');
						const buttonset2a = new MessageButton()
							.setCustomId('cd')
							.setLabel('Change Decay')
							.setStyle('PRIMARY');
						const buttonset3a = new MessageButton()
							.setCustomId('seup')
							.setLabel('Set Up')
							.setStyle('SUCCESS');
						const buttonset1b = new MessageButton()
							.setCustomId('bck')
							.setLabel('Back')
							.setStyle('SECONDARY')
							.setEmoji('◀️');

						const r1 = new MessageActionRow().addComponents(buttonset1a, buttonset2a);
						const r2 = new MessageActionRow().addComponents(buttonset3a);
						const r3 = new MessageActionRow().addComponents(buttonset1b);
						interaction.editReply({ content: '\u200B', embeds: [setembed1], components: [r1, r2, r3] });
					}
					else {
						if (srlstatus == 0) {
							srlmsg = '🔴 Off';
						} else {
							srlmsg = '🟢 On';
						}
						const setembed1 = new MessageEmbed()

							.setTitle('Coco | Settings')
							.setColor('#36393F')
							.addFields(
								{ name: 'Scoreboard', value: 'Create, edit or delete the live updating scoreboard from here.\n\nThere is no live scoreboard on this server. You can set one up here!' },
								{ name: 'Edit Score Limits', value: 'Change how many points each server member can gain with an activity each day, week or month.' },
								{ name: 'Change Decay', value: `Change how fast server members lose points due to inactivity.\n\nCurrent value: ${decayval} % / week` },
								{ name: 'Change Size', value: `Change how many server members should be visible on the scoreboard.\n\nCurrent value: ${chsize} members` },
								{ name: 'Show Rank List', value: `Set whether the ranks are listed at the bottom of the scoreboard together with their minimum scores.\n\nCurrent state:  ${srlmsg}` },
								{ name: 'Remove', value: 'Removes the live updating scoreboard channel.' },
								{ name: '◀️ Back', value: 'Go back one page.' },

							);
						const buttonset1a = new MessageButton()
							.setCustomId('esl')
							.setLabel('Edit Score Limits')
							.setStyle('PRIMARY');
						const buttonset2a = new MessageButton()
							.setCustomId('cd')
							.setLabel('Change Decay')
							.setStyle('PRIMARY');
						const buttonset3a = new MessageButton()
							.setCustomId('csz')
							.setLabel('Change Size')
							.setStyle('PRIMARY');
						const buttonset3b = new MessageButton()
							.setCustomId('srl')
							.setLabel('Show Rank List')
							.setStyle('PRIMARY');
						const buttonset3c = new MessageButton()
							.setCustomId('rmv')
							.setLabel('Remove')
							.setStyle('DANGER');
						const buttonset1b = new MessageButton()
							.setCustomId('bck')
							.setLabel('Back')
							.setStyle('SECONDARY')
							.setEmoji('◀️');

						const r1 = new MessageActionRow().addComponents(buttonset1a, buttonset2a);
						const r2 = new MessageActionRow().addComponents(buttonset3a, buttonset3b);
						const r25 = new MessageActionRow().addComponents(buttonset3c);
						const r3 = new MessageActionRow().addComponents(buttonset1b);
						interaction.editReply({ content: '\u200B', embeds: [setembed1], components: [r1, r2, r25, r3] });

					}

				})
				collectorud1.on("end", (collected, reason) => {


				});
			}
			///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
			//////////////////////////////////////////////////////edit score limits////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
			if (semi.customId == 'esl') {
				semi.deferUpdate();
				const esle = new MessageEmbed()
					.setTitle('Coco | Settings | Edit Score Limits')
					.setColor('#36393F').setDescription('Some description here').addFields(
						{ name: 'Edit Score Limits', value: 'Change how many points each server member can gain with an activity each day, week or month.\n\nOnce a server member hits your specified limit, they can still participate, but will not recieve any more points until your chosen time has elapsed.' },
						{ name: 'Select', value: 'Choose one of the listed items to continue!' },
					);
				const r1 = new MessageActionRow()
					.addComponents(
						new MessageSelectMenu()
							.setCustomId('select')
							.setPlaceholder('Edit Score Limits | Select one...')
							.addOptions([
								{
									label: 'Solo Games',
									description: 'Rewards for Solo Games like Chaos ',
									value: 'first_option',
								},
								{
									label: 'Party Games',
									description: 'Rewards for Social Party Games like UNO, Connect 4, Tic Tac Toe etc.',
									value: 'second_option',
								},
								{
									label: 'Chat Activity',
									description: 'Rewards for sending messages in text channel',
									value: 'third_option',
								},
								{
									label: 'Voice Activity',
									description: 'Rewards for being active (unmuted) in voice commands',
									value: 'fourth_option',
								}
							]),
					);
				const button57 = new MessageButton()
					.setCustomId('newbck')
					.setLabel('Back')
					.setStyle('SECONDARY')
					.setEmoji('◀️');

				const r2 = new MessageActionRow().addComponents(button57);
				interaction.editReply({ content: '\u200B', embeds: [esle], components: [r1, r2] });
				sodium1 = await interaction.fetchReply();

				const collectorud2 = sodium1.createMessageComponentCollector({
					type: "SELECT_MENU",

					time: 300000
				});


				const collectorud1 = sodium1.createMessageComponentCollector({
					type: "BUTTON",

					time: 300000
				});
				collectorud1.on("collect", async (vemi) => {
					////////////////////////////////////////////////////////////////solo activity limit ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////					////////////////////////////////////////////////////
					/////////////////////////////////////////////create limit solo/////////////////////////////////////////////////////////////////////////////////////////////////////
					if (vemi.customId == 'cr_lim_solo') {
						solo_limit = 1;
						const u1 = new MessageEmbed()
							.setTitle('Coco | Settings')
							.setColor('#36393F')
							.setDescription(`**Score Limits | Solo games**\nSet the maximum number of points earned with this activity!\n\nThis limit applies to Solo games, i.e. games that a server member can play in a text channel on your server, but doesn't directly involve another player (unless they are trying to get a better score than someone else).\n\nYou can set this limit fairly low, as it doesn't generate as much social activity for your server as the other activity rewards.`)
							.addFields(
								{ name: 'Set Limit', value: `Set the maximum number of points that can be earned daily.\n\nCurrent value: ${solo_limit_value} points ${solo_limit_intstatus}` },
								{ name: 'Set Interval', value: 'Set the interval for which the score limit should be valid, and how quickly it resets.' },
								{ name: 'Remove Limit', value: 'Remove the score limit for Solo games entirely.' },
								{ name: '◀️ Back', value: 'Go back one page.' },

							);
						const button54 = new MessageButton()
							.setCustomId('s_lim_solo')
							.setLabel('Set Limit')
							.setStyle('PRIMARY');
						const button55 = new MessageButton()
							.setCustomId('si_lim_solo')
							.setLabel('Set Interval')
							.setStyle('PRIMARY');
						const button56 = new MessageButton()
							.setCustomId('r_lim_solo')
							.setLabel('Remove limit')
							.setStyle('DANGER');
						const button57 = new MessageButton()
							.setCustomId('newbck')
							.setLabel('Back')
							.setStyle('SECONDARY')
							.setEmoji('◀️');

						const r1 = new MessageActionRow().addComponents(button54, button55);
						const r2 = new MessageActionRow().addComponents(button56);
						const r3 = new MessageActionRow().addComponents(button57);
						interaction.editReply({ content: '\u200B', embeds: [u1], components: [r1, r2, r3] });


					}
					////////////////////////////////////////////////////////////////remove limit solo////////////////////////////////////////////////////////////////////////////////////////////////////					
					if (vemi.customId == 'r_lim_solo') {
						const u1 = new MessageEmbed()
							.setTitle('Coco | Settings | Remove Limit')
							.setColor('#36393F')
							.addFields(
								{ name: 'Remove Limit', value: `Remove the score limit for Solo games entirely.\n\nThis will not affect any scores that have been awarded before now.\n\nWithout a score limit, members can gain an unlimited number of points with this activity. You may want to check the state of the scoreboard to get an idea for how balanced activity rewards are on your server.` },
								{ name: '🛑 Confimation Required', value: 'Are you sure you want to perform this action? You cannot undo it later!' },
							);
						const button54 = new MessageButton()
							.setCustomId('solo_yes')
							.setLabel('Yes')
							.setStyle('DANGER');
						const button55 = new MessageButton()
							.setCustomId('newbck')
							.setLabel('No')
							.setStyle('SECONDARY');
						const r1 = new MessageActionRow().addComponents(button54, button55);
						interaction.editReply({ content: '\u200B', embeds: [u1], components: [r1] });
						solo();


					}
					///////////////////////////////////////////////////////////////set limit solo/////////////////////////////////////////////////////////////////////////////////////////////////////	
					if (vemi.customId == 's_lim_solo') {
						const u1 = new MessageEmbed()
							.setTitle('Coco | Settings | Set Limit')
							.setColor('#36393F')
							.addFields(
								{ name: 'Set Limit', value: `Set the maximum number of points that can be earned daily.\n\nIf a server member hits this limit, they will not receive any more points for this activity until the timer resets at midnight UTC.\nWeekly limits reset every Monday at midnight, monthly limits reset on the 1st of each month.\nYou can disable point rewards for this activity entirely by setting a limit of 0 points.` },
								{ name: 'Set Value', value: `Use the keypad to set the value and click Save when you're done.` },
							);
						numdis = true;
						numdis0 = true;
						backdis = false;
						tempsolo_limit_value = solo_limit_value;
						savedis = false;

						const setembed1 = new MessageEmbed()

							.setTitle(`➡ ${solo_limit_value} points`)
							.setDescription(`Previous value: ${solo_limit_value} points`)

							.setColor('#90ee90');
						//.setColor('#90ee90');

						const n1 = new MessageButton()
							.setCustomId('1')
							.setLabel('1')
							.setStyle('PRIMARY')
							.setDisabled(`${numdis}`);
						const n2 = new MessageButton()
							.setCustomId('2')
							.setLabel('2')
							.setStyle('PRIMARY')
							.setDisabled(`${numdis}`);
						const n3 = new MessageButton()
							.setCustomId('3')
							.setLabel('3')
							.setStyle('PRIMARY')
							.setDisabled(`${numdis}`);
						const n4 = new MessageButton()
							.setCustomId('4')
							.setLabel('4')
							.setStyle('PRIMARY')
							.setDisabled(`${numdis}`);
						const n5 = new MessageButton()
							.setCustomId('5')
							.setLabel('5')
							.setStyle('PRIMARY')
							.setDisabled(`${numdis}`);
						const n6 = new MessageButton()
							.setCustomId('6')
							.setLabel('6')
							.setStyle('PRIMARY')
							.setDisabled(`${numdis}`);
						const n7 = new MessageButton()
							.setCustomId('7')
							.setLabel('7')
							.setStyle('PRIMARY')
							.setDisabled(`${numdis}`);
						const n8 = new MessageButton()
							.setCustomId('8')
							.setLabel('8')
							.setStyle('PRIMARY')
							.setDisabled(`${numdis}`);
						const n9 = new MessageButton()
							.setCustomId('9')
							.setLabel('9')
							.setStyle('PRIMARY')
							.setDisabled(`${numdis}`);
						const n0 = new MessageButton()
							.setCustomId('0')
							.setLabel('0')
							.setStyle('PRIMARY')
							.setDisabled(`${numdis0}`);
						const n00 = new MessageButton()
							.setCustomId('blank')
							.setLabel('\u200B')
							.setStyle('SECONDARY')
							.setDisabled(`true`);
						const ns = new MessageButton()
							.setCustomId('BACKSPACE')
							.setLabel('‹')
							.setStyle('DANGER')
							.setDisabled(`${backdis}`);
						const nc = new MessageButton()
							.setCustomId('CANCEL')
							.setLabel('Cancel')
							.setStyle('PRIMARY');
						const nsa = new MessageButton()
							.setCustomId('SAVE')
							.setLabel('Save')
							.setStyle('SUCCESS')
							.setDisabled(`${savedis}`);



						const r1 = new MessageActionRow().addComponents(n1, n2, n3);
						const r2 = new MessageActionRow().addComponents(n4, n5, n6);
						const r3 = new MessageActionRow().addComponents(n7, n8, n9);
						const r4 = new MessageActionRow().addComponents(n00, n0, ns);
						const r5 = new MessageActionRow().addComponents(nc, nsa);

						interaction.editReply({ content: '\u200B', embeds: [u1, setembed1], components: [r1, r2, r3, r4, r5], ephemeral: true });
						newm2 = await interaction.fetchReply();



						const collectornd1 = newm2.createMessageComponentCollector({
							type: "BUTTON",

							time: 300000
						});


						collectornd1.on("collect", async (newtemi) => {
							//newtemi.deferUpdate();
							if (newtemi.customId == 'BACKSPACE') {
								tempsolo_limit_value = Math.floor(tempsolo_limit_value / 10);
							}
							if (newtemi.customId != 'BACKSPACE' && newtemi.customId != 'SAVE' && newtemi.customId != 'CANCEL') {
								tempsolo_limit_value = (tempsolo_limit_value) + newtemi.customId;
								tempsolo_limit_value = parseInt(tempsolo_limit_value, 10);
							}
							savedis = true;
							if (tempsolo_limit_value > 9999) {
								numdis = true;
								numdis0 = true;
								backdis = false;
								savedis = false;




							}
							if (tempsolo_limit_value < 10000) {
								numdis = false;
								numdis0 = false;
								backdis = false;




							}
							if (tempsolo_limit_value == 0) {
								backdis = true;
								numdis = false;
								savedis = true;
							}

							if (tempsolo_limit_value > 9999) {
								colr = '#90ee90';
								savedis = false;
							}
							if (tempsolo_limit_value < 10000) {
								colr = '#FF0000';
								savedis = true;
							}
							const n1 = new MessageButton()
								.setCustomId('1')
								.setLabel('1')
								.setStyle('PRIMARY')
								.setDisabled(`${numdis}`);
							const n2 = new MessageButton()
								.setCustomId('2')
								.setLabel('2')
								.setStyle('PRIMARY')
								.setDisabled(`${numdis}`);
							const n3 = new MessageButton()
								.setCustomId('3')
								.setLabel('3')
								.setStyle('PRIMARY')
								.setDisabled(`${numdis}`);
							const n4 = new MessageButton()
								.setCustomId('4')
								.setLabel('4')
								.setStyle('PRIMARY')
								.setDisabled(`${numdis}`);
							const n5 = new MessageButton()
								.setCustomId('5')
								.setLabel('5')
								.setStyle('PRIMARY')
								.setDisabled(`${numdis}`);
							const n6 = new MessageButton()
								.setCustomId('6')
								.setLabel('6')
								.setStyle('PRIMARY')
								.setDisabled(`${numdis}`);
							const n7 = new MessageButton()
								.setCustomId('7')
								.setLabel('7')
								.setStyle('PRIMARY')
								.setDisabled(`${numdis}`);
							const n8 = new MessageButton()
								.setCustomId('8')
								.setLabel('8')
								.setStyle('PRIMARY')
								.setDisabled(`${numdis}`);
							const n9 = new MessageButton()
								.setCustomId('9')
								.setLabel('9')
								.setStyle('PRIMARY')
								.setDisabled(`${numdis}`);
							const n0 = new MessageButton()
								.setCustomId('0')
								.setLabel('0')
								.setStyle('PRIMARY')
								.setDisabled(`${numdis0}`);
							const n00 = new MessageButton()
								.setCustomId('blank')
								.setLabel('\u200B')
								.setStyle('SECONDARY')
								.setDisabled(`true`);
							const ns = new MessageButton()
								.setCustomId('BACKSPACE')
								.setLabel('‹')
								.setStyle('DANGER')
								.setDisabled(`${backdis}`);
							const nc = new MessageButton()
								.setCustomId('CANCEL')
								.setLabel('Cancel')
								.setStyle('PRIMARY');
							const nsa = new MessageButton()
								.setCustomId('SAVE')
								.setLabel('Save')
								.setStyle('SUCCESS')
								.setDisabled(`${savedis}`);



							const r1 = new MessageActionRow().addComponents(n1, n2, n3);
							const r2 = new MessageActionRow().addComponents(n4, n5, n6);
							const r3 = new MessageActionRow().addComponents(n7, n8, n9);
							const r4 = new MessageActionRow().addComponents(n00, n0, ns);
							const r5 = new MessageActionRow().addComponents(nc, nsa);
							if (tempsolo_limit_value > 9999) {
								const setembed1 = new MessageEmbed()

									.setTitle(`➡ ${tempsolo_limit_value} points`)
									.setDescription(`Previous value: ${solo_limit_value} points`)

									.setColor(`${colr}`);
								interaction.editReply({ content: '\u200B', embeds: [u1, setembed1], components: [r1, r2, r3, r4, r5], ephemeral: true });
							}
							else {
								const setembed1 = new MessageEmbed()

									.setTitle(`➡ ${tempsolo_limit_value} points`)
									.setDescription(`**Minimum value**: 10 000 points\nPrevious value: ${solo_limit_value} points`)

									.setColor(`${colr}`);
								interaction.editReply({ content: '\u200B', embeds: [u1, setembed1], components: [r1, r2, r3, r4, r5], ephemeral: true });
							}
							if (newtemi.customId == 'CANCEL' || newtemi.customId == 'SAVE') {

								collectornd1.stop();
								if (newtemi.customId == 'SAVE') {
									solo_limit_value = tempsolo_limit_value;
									solo();
								}
								const u1 = new MessageEmbed()
									.setTitle('Coco | Settings')
									.setColor('#36393F')
									.setDescription(`**Score Limits | Solo games**\nSet the maximum number of points earned with this activity!\n\nThis limit applies to Solo games, i.e. games that a server member can play in a text channel on your server, but doesn't directly involve another player (unless they are trying to get a better score than someone else).\n\nYou can set this limit fairly low, as it doesn't generate as much social activity for your server as the other activity rewards.`)
									.addFields(
										{ name: 'Set Limit', value: `Set the maximum number of points that can be earned daily.\n\nCurrent value: ${solo_limit_value} points ${solo_limit_intstatus}` },
										{ name: 'Set Interval', value: 'Set the interval for which the score limit should be valid, and how quickly it resets.' },
										{ name: 'Remove Limit', value: 'Remove the score limit for Solo games entirely.' },
										{ name: '◀️ Back', value: 'Go back one page.' },

									);
								const button54 = new MessageButton()
									.setCustomId('s_lim_solo')
									.setLabel('Set Limit')
									.setStyle('PRIMARY');
								const button55 = new MessageButton()
									.setCustomId('si_lim_solo')
									.setLabel('Set Interval')
									.setStyle('PRIMARY');
								const button56 = new MessageButton()
									.setCustomId('r_lim_solo')
									.setLabel('Remove limit')
									.setStyle('DANGER');
								const button57 = new MessageButton()
									.setCustomId('newbck')
									.setLabel('Back')
									.setStyle('SECONDARY')
									.setEmoji('◀️');

								const r1 = new MessageActionRow().addComponents(button54, button55);
								const r2 = new MessageActionRow().addComponents(button56);
								const r3 = new MessageActionRow().addComponents(button57);
								interaction.editReply({ content: '\u200B', embeds: [u1], components: [r1, r2, r3] });



							}










						})
						collectornd1.on("end", (collected, reason) => {


						});
					}
					///////////////////////////////////////////////////////////////set interval///////////////////////////////////////////////////////////////////////////////////////////////////////
					if (vemi.customId == 'si_lim_solo') {
						const u1 = new MessageEmbed()
							.setTitle('Coco | Settings | Set Interval')
							.setColor('#36393F')
							.addFields(
								{ name: 'Set Interval', value: `Set the interval for which the score limit should be valid, and how quickly it resets.\n\nIf a server member hits the score limit, they will not receive any more points for this activity until the limit resets.` },
								{ name: 'Select', value: `Choose one of the listed items to continue!` },
							);
						const r1 = new MessageActionRow()
							.addComponents(
								new MessageSelectMenu()
									.setCustomId('select1')
									.setPlaceholder('Set Interval | Select one...')
									.addOptions([
										{
											label: `${solo_limit_value} points per day`,
											description: 'Limit resets at everyday at midnight UTC',
											value: 'first_option1',
										},
										{
											label: `${solo_limit_value} points per week`,
											description: 'Limit resets at every monday at midnight UTC',
											value: 'second_option1',
										},
										{
											label: `${solo_limit_value} points per month`,
											description: 'Limit resets at every 1st of the month at midnight UTC',
											value: 'third_option1',
										}
									]),
							);
						const button57 = new MessageButton()
							.setCustomId('spcbck')
							.setLabel('Back')
							.setStyle('SECONDARY')
							.setEmoji('◀️');

						const r2 = new MessageActionRow().addComponents(button57);
						interaction.editReply({ content: '\u200B', embeds: [esle], components: [r1, r2] });
						mainmsg2 = await interaction.fetchReply();

						const collectorpd2 = mainmsg2.createMessageComponentCollector({
							type: "SELECT_MENU",

							time: 300000
						});


						const collectorpd1 = mainmsg2.createMessageComponentCollector({
							type: "BUTTON",

							time: 300000
						});
						collectorpd1.on("collect", async (mainvemi) => {
							if (mainvemi.customId == 'spcbck') {
								collectorpd1.stop();
								collectorpd2.stop();
								const u1 = new MessageEmbed()
									.setTitle('Coco | Settings')
									.setColor('#36393F')
									.setDescription(`**Score Limits | Solo games**\nSet the maximum number of points earned with this activity!\n\nThis limit applies to Solo games, i.e. games that a server member can play in a text channel on your server, but doesn't directly involve another player (unless they are trying to get a better score than someone else).\n\nYou can set this limit fairly low, as it doesn't generate as much social activity for your server as the other activity rewards.`)
									.addFields(
										{ name: 'Set Limit', value: `Set the maximum number of points that can be earned daily.\n\nCurrent value: ${solo_limit_value} points ${solo_limit_intstatus}` },
										{ name: 'Set Interval', value: 'Set the interval for which the score limit should be valid, and how quickly it resets.' },
										{ name: 'Remove Limit', value: 'Remove the score limit for Solo games entirely.' },
										{ name: '◀️ Back', value: 'Go back one page.' },

									);
								const button54 = new MessageButton()
									.setCustomId('s_lim_solo')
									.setLabel('Set Limit')
									.setStyle('PRIMARY');
								const button55 = new MessageButton()
									.setCustomId('si_lim_solo')
									.setLabel('Set Interval')
									.setStyle('PRIMARY');
								const button56 = new MessageButton()
									.setCustomId('r_lim_solo')
									.setLabel('Remove limit')
									.setStyle('DANGER');
								const button57 = new MessageButton()
									.setCustomId('newbck')
									.setLabel('Back')
									.setStyle('SECONDARY')
									.setEmoji('◀️');

								const r1 = new MessageActionRow().addComponents(button54, button55);
								const r2 = new MessageActionRow().addComponents(button56);
								const r3 = new MessageActionRow().addComponents(button57);
								interaction.editReply({ content: '\u200B', embeds: [u1], components: [r1, r2, r3] });


							}
						});
						collectorpd2.on("collect", async (mainvemi2) => {
							if (mainvemi2.customId == 'select1') {
								collectorpd1.stop();
								collectorpd2.stop();
								if (mainvemi2.values[0] == 'first_option1') {
									solo_limit_interval = 1;
									solo_limit_intstatus = 'daily';
									solo();
								}
								if (mainvemi2.values[0] == 'second_option1') {
									solo_limit_interval = 7;
									solo_limit_intstatus = 'weekly';
									solo();
								}
								if (mainvemi2.values[0] == 'third_option1') {
									solo_limit_interval = 30;
									solo_limit_intstatus = 'monthly';
									solo();
								}
								const u1 = new MessageEmbed()
									.setTitle('Coco | Settings')
									.setColor('#36393F')
									.setDescription(`**Score Limits | Solo games**\nSet the maximum number of points earned with this activity!\n\nThis limit applies to Solo games, i.e. games that a server member can play in a text channel on your server, but doesn't directly involve another player (unless they are trying to get a better score than someone else).\n\nYou can set this limit fairly low, as it doesn't generate as much social activity for your server as the other activity rewards.`)
									.addFields(
										{ name: 'Set Limit', value: `Set the maximum number of points that can be earned daily.\n\nCurrent value: ${solo_limit_value} points ${solo_limit_intstatus}` },
										{ name: 'Set Interval', value: 'Set the interval for which the score limit should be valid, and how quickly it resets.' },
										{ name: 'Remove Limit', value: 'Remove the score limit for Solo games entirely.' },
										{ name: '◀️ Back', value: 'Go back one page.' },

									);
								const button54 = new MessageButton()
									.setCustomId('s_lim_solo')
									.setLabel('Set Limit')
									.setStyle('PRIMARY');
								const button55 = new MessageButton()
									.setCustomId('si_lim_solo')
									.setLabel('Set Interval')
									.setStyle('PRIMARY');
								const button56 = new MessageButton()
									.setCustomId('r_lim_solo')
									.setLabel('Remove limit')
									.setStyle('DANGER');
								const button57 = new MessageButton()
									.setCustomId('newbck')
									.setLabel('Back')
									.setStyle('SECONDARY')
									.setEmoji('◀️');

								const r1 = new MessageActionRow().addComponents(button54, button55);
								const r2 = new MessageActionRow().addComponents(button56);
								const r3 = new MessageActionRow().addComponents(button57);
								interaction.editReply({ content: '\u200B', embeds: [u1], components: [r1, r2, r3] });
							}

						});
						collectorpd2.on("end", (collected, reason) => {


						});
						collectorpd1.on("end", (collected, reason) => {


						});

					}
					///////////////////////////////////////////////////////////////solo yes remove////////////////////////////////////////////////////////////////////////////////////////////////////
					if (vemi.customId == 'solo_yes') {
						solo_limit = 0;
						collectorud1.stop();
						collectorud2.stop();

						//vemi.deferUpdate();
						if (ldb == 0) {
							const setembed1 = new MessageEmbed()

								.setTitle('Coco | Settings')
								.setColor('#36393F')
								.addFields(
									{ name: 'Scoreboard', value: 'Create, edit or delete the live updating scoreboard from here.\n\nThere is no live scoreboard on this server. You can set one up here!' },
									{ name: 'Edit Score Limits', value: 'Change how many points each server member can gain with an activity each day, week or month.' },
									{ name: 'Change Decay', value: `Change how fast server members lose points due to inactivity.\n\nCurrent value: ${decayval} % / week` },
									{ name: 'Set Up', value: 'Sets up a new live updating scoreboard. Coco will create a new channel on your server that only contains the scoreboard.\nFor this command to work properly, ensure that Coco has the "Manage Channels" permission.' },
									{ name: '◀️ Back', value: 'Go back one page.' },

								);
							const buttonset1a = new MessageButton()
								.setCustomId('esl')
								.setLabel('Edit Score Limits')
								.setStyle('PRIMARY');
							const buttonset2a = new MessageButton()
								.setCustomId('cd')
								.setLabel('Change Decay')
								.setStyle('PRIMARY');
							const buttonset3a = new MessageButton()
								.setCustomId('seup')
								.setLabel('Set Up')
								.setStyle('SUCCESS');
							const buttonset1b = new MessageButton()
								.setCustomId('bck')
								.setLabel('Back')
								.setStyle('SECONDARY')
								.setEmoji('◀️');

							const r1 = new MessageActionRow().addComponents(buttonset1a, buttonset2a);
							const r2 = new MessageActionRow().addComponents(buttonset3a);
							const r3 = new MessageActionRow().addComponents(buttonset1b);
							interaction.editReply({ content: '\u200B', embeds: [setembed1], components: [r1, r2, r3] });
						}
						else {
							if (srlstatus == 0) {
								srlmsg = '🔴 Off';
							} else {
								srlmsg = '🟢 On';
							}
							const setembed1 = new MessageEmbed()

								.setTitle('Coco | Settings')
								.setColor('#36393F')
								.addFields(
									{ name: 'Scoreboard', value: 'Create, edit or delete the live updating scoreboard from here.\n\nThere is no live scoreboard on this server. You can set one up here!' },
									{ name: 'Edit Score Limits', value: 'Change how many points each server member can gain with an activity each day, week or month.' },
									{ name: 'Change Decay', value: `Change how fast server members lose points due to inactivity.\n\nCurrent value: ${decayval} % / week` },
									{ name: 'Change Size', value: `Change how many server members should be visible on the scoreboard.\n\nCurrent value: ${chsize} members` },
									{ name: 'Show Rank List', value: `Set whether the ranks are listed at the bottom of the scoreboard together with their minimum scores.\n\nCurrent state:  ${srlmsg}` },
									{ name: 'Remove', value: 'Removes the live updating scoreboard channel.' },
									{ name: '◀️ Back', value: 'Go back one page.' },

								);
							const buttonset1a = new MessageButton()
								.setCustomId('esl')
								.setLabel('Edit Score Limits')
								.setStyle('PRIMARY');
							const buttonset2a = new MessageButton()
								.setCustomId('cd')
								.setLabel('Change Decay')
								.setStyle('PRIMARY');
							const buttonset3a = new MessageButton()
								.setCustomId('csz')
								.setLabel('Change Size')
								.setStyle('PRIMARY');
							const buttonset3b = new MessageButton()
								.setCustomId('srl')
								.setLabel('Show Rank List')
								.setStyle('PRIMARY');
							const buttonset3c = new MessageButton()
								.setCustomId('rmv')
								.setLabel('Remove')
								.setStyle('DANGER');
							const buttonset1b = new MessageButton()
								.setCustomId('bck')
								.setLabel('Back')
								.setStyle('SECONDARY')
								.setEmoji('◀️');

							const r1 = new MessageActionRow().addComponents(buttonset1a, buttonset2a);
							const r2 = new MessageActionRow().addComponents(buttonset3a, buttonset3b);
							const r25 = new MessageActionRow().addComponents(buttonset3c);
							const r3 = new MessageActionRow().addComponents(buttonset1b);
							interaction.editReply({ content: '\u200B', embeds: [setembed1], components: [r1, r2, r25, r3] });

						}


					}

					//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
					////////////////////////////////////////////////////////////////party activity limit ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////					////////////////////////////////////////////////////
					/////////////////////////////////////////////create limit party/////////////////////////////////////////////////////////////////////////////////////////////////////
					if (vemi.customId == 'cr_lim_party') {
						party_limit = 1;
						const u1 = new MessageEmbed()
							.setTitle('Coco | Settings')
							.setColor('#36393F')
							.setDescription(`**Score Limits | Party games**\n\nSet the maximum number of points earned with this activity!\n\nThis limit applies to Social/Party games, i.e. games where multiple server members are directly interacting and playing a game together. UNO, Connect 4 and Rock, Paper, Scissors fall under this category, for example.\n\nYou should probably keep this limit a bit higher, as it provides a good incentive to engage in social games with other people on your server.`)
							.addFields(
								{ name: 'Set Limit', value: `Set the maximum number of points that can be earned daily.\n\nCurrent value: ${party_limit_value} points ${party_limit_intstatus}` },
								{ name: 'Set Interval', value: 'Set the interval for which the score limit should be valid, and how quickly it resets.' },
								{ name: 'Remove Limit', value: 'Remove the score limit for Party games entirely.' },
								{ name: '◀️ Back', value: 'Go back one page.' },

							);
						const button54 = new MessageButton()
							.setCustomId('s_lim_party')
							.setLabel('Set Limit')
							.setStyle('PRIMARY');
						const button55 = new MessageButton()
							.setCustomId('si_lim_party')
							.setLabel('Set Interval')
							.setStyle('PRIMARY');
						const button56 = new MessageButton()
							.setCustomId('r_lim_party')
							.setLabel('Remove limit')
							.setStyle('DANGER');
						const button57 = new MessageButton()
							.setCustomId('newbck')
							.setLabel('Back')
							.setStyle('SECONDARY')
							.setEmoji('◀️');

						const r1 = new MessageActionRow().addComponents(button54, button55);
						const r2 = new MessageActionRow().addComponents(button56);
						const r3 = new MessageActionRow().addComponents(button57);
						interaction.editReply({ content: '\u200B', embeds: [u1], components: [r1, r2, r3] });
						party();


					}
					////////////////////////////////////////////////////////////////remove limit party////////////////////////////////////////////////////////////////////////////////////////////////////					
					if (vemi.customId == 'r_lim_party') {
						const u1 = new MessageEmbed()
							.setTitle('Coco | Settings | Remove Limit')
							.setColor('#36393F')
							.addFields(
								{ name: 'Remove Limit', value: `Remove the score limit for Party games entirely.\n\nThis will not affect any scores that have been awarded before now.\n\nWithout a score limit, members can gain an unlimited number of points with this activity. You may want to check the state of the scoreboard to get an idea for how balanced activity rewards are on your server.` },
								{ name: '🛑 Confimation Required', value: 'Are you sure you want to perform this action? You cannot undo it later!' },
							);
						const button54 = new MessageButton()
							.setCustomId('party_yes')
							.setLabel('Yes')
							.setStyle('DANGER');
						const button55 = new MessageButton()
							.setCustomId('newbck')
							.setLabel('No')
							.setStyle('SECONDARY');
						const r1 = new MessageActionRow().addComponents(button54, button55);
						interaction.editReply({ content: '\u200B', embeds: [u1], components: [r1] });


					}
					///////////////////////////////////////////////////////////////set limit party/////////////////////////////////////////////////////////////////////////////////////////////////////	
					if (vemi.customId == 's_lim_party') {
						const u1 = new MessageEmbed()
							.setTitle('Coco | Settings | Set Limit')
							.setColor('#36393F')
							.addFields(
								{ name: 'Set Limit', value: `Set the maximum number of points that can be earned daily.\n\nIf a server member hits this limit, they will not receive any more points for this activity until the timer resets at midnight UTC.\nWeekly limits reset every Monday at midnight, monthly limits reset on the 1st of each month.\nYou can disable point rewards for this activity entirely by setting a limit of 0 points.` },
								{ name: 'Set Value', value: `Use the keypad to set the value and click Save when you're done.` },
							);
						numdis = true;
						numdis0 = true;
						backdis = false;
						tempparty_limit_value = party_limit_value;
						savedis = false;

						const setembed1 = new MessageEmbed()

							.setTitle(`➡ ${party_limit_value} points`)
							.setDescription(`Previous value: ${party_limit_value} points`)

							.setColor('#90ee90');
						//.setColor('#90ee90');

						const n1 = new MessageButton()
							.setCustomId('1')
							.setLabel('1')
							.setStyle('PRIMARY')
							.setDisabled(`${numdis}`);
						const n2 = new MessageButton()
							.setCustomId('2')
							.setLabel('2')
							.setStyle('PRIMARY')
							.setDisabled(`${numdis}`);
						const n3 = new MessageButton()
							.setCustomId('3')
							.setLabel('3')
							.setStyle('PRIMARY')
							.setDisabled(`${numdis}`);
						const n4 = new MessageButton()
							.setCustomId('4')
							.setLabel('4')
							.setStyle('PRIMARY')
							.setDisabled(`${numdis}`);
						const n5 = new MessageButton()
							.setCustomId('5')
							.setLabel('5')
							.setStyle('PRIMARY')
							.setDisabled(`${numdis}`);
						const n6 = new MessageButton()
							.setCustomId('6')
							.setLabel('6')
							.setStyle('PRIMARY')
							.setDisabled(`${numdis}`);
						const n7 = new MessageButton()
							.setCustomId('7')
							.setLabel('7')
							.setStyle('PRIMARY')
							.setDisabled(`${numdis}`);
						const n8 = new MessageButton()
							.setCustomId('8')
							.setLabel('8')
							.setStyle('PRIMARY')
							.setDisabled(`${numdis}`);
						const n9 = new MessageButton()
							.setCustomId('9')
							.setLabel('9')
							.setStyle('PRIMARY')
							.setDisabled(`${numdis}`);
						const n0 = new MessageButton()
							.setCustomId('0')
							.setLabel('0')
							.setStyle('PRIMARY')
							.setDisabled(`${numdis0}`);
						const n00 = new MessageButton()
							.setCustomId('blank')
							.setLabel('\u200B')
							.setStyle('SECONDARY')
							.setDisabled(`true`);
						const ns = new MessageButton()
							.setCustomId('BACKSPACE')
							.setLabel('‹')
							.setStyle('DANGER')
							.setDisabled(`${backdis}`);
						const nc = new MessageButton()
							.setCustomId('CANCEL')
							.setLabel('Cancel')
							.setStyle('PRIMARY');
						const nsa = new MessageButton()
							.setCustomId('SAVE')
							.setLabel('Save')
							.setStyle('SUCCESS')
							.setDisabled(`${savedis}`);



						const r1 = new MessageActionRow().addComponents(n1, n2, n3);
						const r2 = new MessageActionRow().addComponents(n4, n5, n6);
						const r3 = new MessageActionRow().addComponents(n7, n8, n9);
						const r4 = new MessageActionRow().addComponents(n00, n0, ns);
						const r5 = new MessageActionRow().addComponents(nc, nsa);

						interaction.editReply({ content: '\u200B', embeds: [u1, setembed1], components: [r1, r2, r3, r4, r5], ephemeral: true });
						newm2 = await interaction.fetchReply();



						const collectornd1 = newm2.createMessageComponentCollector({
							type: "BUTTON",

							time: 300000
						});


						collectornd1.on("collect", async (newtemi) => {
							//newtemi.deferUpdate();
							if (newtemi.customId == 'BACKSPACE') {
								tempparty_limit_value = Math.floor(tempparty_limit_value / 10);
							}
							if (newtemi.customId != 'BACKSPACE' && newtemi.customId != 'SAVE' && newtemi.customId != 'CANCEL') {
								tempparty_limit_value = (tempparty_limit_value) + newtemi.customId;
								tempparty_limit_value = parseInt(tempparty_limit_value, 10);
							}
							savedis = true;
							if (tempparty_limit_value > 9999) {
								numdis = true;
								numdis0 = true;
								backdis = false;
								savedis = false;




							}
							if (tempparty_limit_value < 10000) {
								numdis = false;
								numdis0 = false;
								backdis = false;




							}
							if (tempparty_limit_value == 0) {
								backdis = true;
								numdis = false;
								savedis = true;
							}

							if (tempparty_limit_value > 9999) {
								colr = '#90ee90';
								savedis = false;
							}
							if (tempparty_limit_value < 10000) {
								colr = '#FF0000';
								savedis = true;
							}
							const n1 = new MessageButton()
								.setCustomId('1')
								.setLabel('1')
								.setStyle('PRIMARY')
								.setDisabled(`${numdis}`);
							const n2 = new MessageButton()
								.setCustomId('2')
								.setLabel('2')
								.setStyle('PRIMARY')
								.setDisabled(`${numdis}`);
							const n3 = new MessageButton()
								.setCustomId('3')
								.setLabel('3')
								.setStyle('PRIMARY')
								.setDisabled(`${numdis}`);
							const n4 = new MessageButton()
								.setCustomId('4')
								.setLabel('4')
								.setStyle('PRIMARY')
								.setDisabled(`${numdis}`);
							const n5 = new MessageButton()
								.setCustomId('5')
								.setLabel('5')
								.setStyle('PRIMARY')
								.setDisabled(`${numdis}`);
							const n6 = new MessageButton()
								.setCustomId('6')
								.setLabel('6')
								.setStyle('PRIMARY')
								.setDisabled(`${numdis}`);
							const n7 = new MessageButton()
								.setCustomId('7')
								.setLabel('7')
								.setStyle('PRIMARY')
								.setDisabled(`${numdis}`);
							const n8 = new MessageButton()
								.setCustomId('8')
								.setLabel('8')
								.setStyle('PRIMARY')
								.setDisabled(`${numdis}`);
							const n9 = new MessageButton()
								.setCustomId('9')
								.setLabel('9')
								.setStyle('PRIMARY')
								.setDisabled(`${numdis}`);
							const n0 = new MessageButton()
								.setCustomId('0')
								.setLabel('0')
								.setStyle('PRIMARY')
								.setDisabled(`${numdis0}`);
							const n00 = new MessageButton()
								.setCustomId('blank')
								.setLabel('\u200B')
								.setStyle('SECONDARY')
								.setDisabled(`true`);
							const ns = new MessageButton()
								.setCustomId('BACKSPACE')
								.setLabel('‹')
								.setStyle('DANGER')
								.setDisabled(`${backdis}`);
							const nc = new MessageButton()
								.setCustomId('CANCEL')
								.setLabel('Cancel')
								.setStyle('PRIMARY');
							const nsa = new MessageButton()
								.setCustomId('SAVE')
								.setLabel('Save')
								.setStyle('SUCCESS')
								.setDisabled(`${savedis}`);



							const r1 = new MessageActionRow().addComponents(n1, n2, n3);
							const r2 = new MessageActionRow().addComponents(n4, n5, n6);
							const r3 = new MessageActionRow().addComponents(n7, n8, n9);
							const r4 = new MessageActionRow().addComponents(n00, n0, ns);
							const r5 = new MessageActionRow().addComponents(nc, nsa);
							if (tempparty_limit_value > 9999) {
								const setembed1 = new MessageEmbed()

									.setTitle(`➡ ${tempparty_limit_value} points`)
									.setDescription(`Previous value: ${party_limit_value} points`)

									.setColor(`${colr}`);
								interaction.editReply({ content: '\u200B', embeds: [u1, setembed1], components: [r1, r2, r3, r4, r5], ephemeral: true });
							}
							else {
								const setembed1 = new MessageEmbed()

									.setTitle(`➡ ${tempparty_limit_value} points`)
									.setDescription(`**Minimum value**: 10 000 points\nPrevious value: ${party_limit_value} points`)

									.setColor(`${colr}`);
								interaction.editReply({ content: '\u200B', embeds: [u1, setembed1], components: [r1, r2, r3, r4, r5], ephemeral: true });
							}
							if (newtemi.customId == 'CANCEL' || newtemi.customId == 'SAVE') {

								collectornd1.stop();
								if (newtemi.customId == 'SAVE') {
									party_limit_value = tempparty_limit_value;
									party();
								}
								const u1 = new MessageEmbed()
									.setTitle('Coco | Settings')
									.setColor('#36393F')
									.setDescription(`**Score Limits | Party games**\n\nSet the maximum number of points earned with this activity!\n\nThis limit applies to Social/Party games, i.e. games where multiple server members are directly interacting and playing a game together. UNO, Connect 4 and Rock, Paper, Scissors fall under this category, for example.\n\nYou should probably keep this limit a bit higher, as it provides a good incentive to engage in social games with other people on your server.`)
									.addFields(
										{ name: 'Set Limit', value: `Set the maximum number of points that can be earned daily.\n\nCurrent value: ${party_limit_value} points ${party_limit_intstatus}` },
										{ name: 'Set Interval', value: 'Set the interval for which the score limit should be valid, and how quickly it resets.' },
										{ name: 'Remove Limit', value: 'Remove the score limit for Party games entirely.' },
										{ name: '◀️ Back', value: 'Go back one page.' },

									);
								const button54 = new MessageButton()
									.setCustomId('s_lim_party')
									.setLabel('Set Limit')
									.setStyle('PRIMARY');
								const button55 = new MessageButton()
									.setCustomId('si_lim_party')
									.setLabel('Set Interval')
									.setStyle('PRIMARY');
								const button56 = new MessageButton()
									.setCustomId('r_lim_party')
									.setLabel('Remove limit')
									.setStyle('DANGER');
								const button57 = new MessageButton()
									.setCustomId('newbck')
									.setLabel('Back')
									.setStyle('SECONDARY')
									.setEmoji('◀️');

								const r1 = new MessageActionRow().addComponents(button54, button55);
								const r2 = new MessageActionRow().addComponents(button56);
								const r3 = new MessageActionRow().addComponents(button57);
								interaction.editReply({ content: '\u200B', embeds: [u1], components: [r1, r2, r3] });



							}










						})
						collectornd1.on("end", (collected, reason) => {


						});
					}
					///////////////////////////////////////////////////////////////set interval///////////////////////////////////////////////////////////////////////////////////////////////////////
					if (vemi.customId == 'si_lim_party') {
						const u1 = new MessageEmbed()
							.setTitle('Coco | Settings | Set Interval')
							.setColor('#36393F')
							.addFields(
								{ name: 'Set Interval', value: `Set the interval for which the score limit should be valid, and how quickly it resets.\n\nIf a server member hits the score limit, they will not receive any more points for this activity until the limit resets.` },
								{ name: 'Select', value: `Choose one of the listed items to continue!` },
							);
						const r1 = new MessageActionRow()
							.addComponents(
								new MessageSelectMenu()
									.setCustomId('select1')
									.setPlaceholder('Set Interval | Select one...')
									.addOptions([
										{
											label: `${party_limit_value} points per day`,
											description: 'Limit resets at everyday at midnight UTC',
											value: 'first_option1',
										},
										{
											label: `${party_limit_value} points per week`,
											description: 'Limit resets at every monday at midnight UTC',
											value: 'second_option1',
										},
										{
											label: `${party_limit_value} points per month`,
											description: 'Limit resets at every 1st of the month at midnight UTC',
											value: 'third_option1',
										}
									]),
							);
						const button57 = new MessageButton()
							.setCustomId('spcbck')
							.setLabel('Back')
							.setStyle('SECONDARY')
							.setEmoji('◀️');

						const r2 = new MessageActionRow().addComponents(button57);
						interaction.editReply({ content: '\u200B', embeds: [esle], components: [r1, r2] });
						mainmsg2 = await interaction.fetchReply();

						const collectorpd2 = mainmsg2.createMessageComponentCollector({
							type: "SELECT_MENU",

							time: 300000
						});


						const collectorpd1 = mainmsg2.createMessageComponentCollector({
							type: "BUTTON",

							time: 300000
						});
						collectorpd1.on("collect", async (mainvemi) => {
							if (mainvemi.customId == 'spcbck') {
								collectorpd1.stop();
								collectorpd2.stop();
								const u1 = new MessageEmbed()
									.setTitle('Coco | Settings')
									.setColor('#36393F')
									.setDescription(`**Score Limits | Party games**\n\nSet the maximum number of points earned with this activity!\n\nThis limit applies to Social/Party games, i.e. games where multiple server members are directly interacting and playing a game together. UNO, Connect 4 and Rock, Paper, Scissors fall under this category, for example.\n\nYou should probably keep this limit a bit higher, as it provides a good incentive to engage in social games with other people on your server.`)
									.addFields(
										{ name: 'Set Limit', value: `Set the maximum number of points that can be earned daily.\n\nCurrent value: ${party_limit_value} points ${party_limit_intstatus}` },
										{ name: 'Set Interval', value: 'Set the interval for which the score limit should be valid, and how quickly it resets.' },
										{ name: 'Remove Limit', value: 'Remove the score limit for Party games entirely.' },
										{ name: '◀️ Back', value: 'Go back one page.' },

									);
								const button54 = new MessageButton()
									.setCustomId('s_lim_party')
									.setLabel('Set Limit')
									.setStyle('PRIMARY');
								const button55 = new MessageButton()
									.setCustomId('si_lim_party')
									.setLabel('Set Interval')
									.setStyle('PRIMARY');
								const button56 = new MessageButton()
									.setCustomId('r_lim_party')
									.setLabel('Remove limit')
									.setStyle('DANGER');
								const button57 = new MessageButton()
									.setCustomId('newbck')
									.setLabel('Back')
									.setStyle('SECONDARY')
									.setEmoji('◀️');

								const r1 = new MessageActionRow().addComponents(button54, button55);
								const r2 = new MessageActionRow().addComponents(button56);
								const r3 = new MessageActionRow().addComponents(button57);
								interaction.editReply({ content: '\u200B', embeds: [u1], components: [r1, r2, r3] });


							}
						});
						collectorpd2.on("collect", async (mainvemi2) => {
							if (mainvemi2.customId == 'select1') {
								collectorpd1.stop();
								collectorpd2.stop();
								if (mainvemi2.values[0] == 'first_option1') {
									party_limit_interval = 1;
									party_limit_intstatus = 'daily';
									party();
								}
								if (mainvemi2.values[0] == 'second_option1') {
									party_limit_interval = 7;
									party_limit_intstatus = 'weekly';
									party();
								}
								if (mainvemi2.values[0] == 'third_option1') {
									party_limit_interval = 30;
									party_limit_intstatus = 'monthly';
									party();
								}
								const u1 = new MessageEmbed()
									.setTitle('Coco | Settings')
									.setColor('#36393F')
									.setDescription(`**Score Limits | Party games**\n\nSet the maximum number of points earned with this activity!\n\nThis limit applies to Social/Party games, i.e. games where multiple server members are directly interacting and playing a game together. UNO, Connect 4 and Rock, Paper, Scissors fall under this category, for example.\n\nYou should probably keep this limit a bit higher, as it provides a good incentive to engage in social games with other people on your server.`)
									.addFields(
										{ name: 'Set Limit', value: `Set the maximum number of points that can be earned daily.\n\nCurrent value: ${party_limit_value} points ${party_limit_intstatus}` },
										{ name: 'Set Interval', value: 'Set the interval for which the score limit should be valid, and how quickly it resets.' },
										{ name: 'Remove Limit', value: 'Remove the score limit for Party games entirely.' },
										{ name: '◀️ Back', value: 'Go back one page.' },

									);
								const button54 = new MessageButton()
									.setCustomId('s_lim_party')
									.setLabel('Set Limit')
									.setStyle('PRIMARY');
								const button55 = new MessageButton()
									.setCustomId('si_lim_party')
									.setLabel('Set Interval')
									.setStyle('PRIMARY');
								const button56 = new MessageButton()
									.setCustomId('r_lim_party')
									.setLabel('Remove limit')
									.setStyle('DANGER');
								const button57 = new MessageButton()
									.setCustomId('newbck')
									.setLabel('Back')
									.setStyle('SECONDARY')
									.setEmoji('◀️');

								const r1 = new MessageActionRow().addComponents(button54, button55);
								const r2 = new MessageActionRow().addComponents(button56);
								const r3 = new MessageActionRow().addComponents(button57);
								interaction.editReply({ content: '\u200B', embeds: [u1], components: [r1, r2, r3] });
							}

						});
						collectorpd2.on("end", (collected, reason) => {


						});
						collectorpd1.on("end", (collected, reason) => {


						});

					}
					///////////////////////////////////////////////////////////////party yes remove////////////////////////////////////////////////////////////////////////////////////////////////////
					if (vemi.customId == 'party_yes') {
						party_limit = 0;
						collectorud1.stop();
						collectorud2.stop();

						//vemi.deferUpdate();
						if (ldb == 0) {
							const setembed1 = new MessageEmbed()

								.setTitle('Coco | Settings')
								.setColor('#36393F')
								.addFields(
									{ name: 'Scoreboard', value: 'Create, edit or delete the live updating scoreboard from here.\n\nThere is no live scoreboard on this server. You can set one up here!' },
									{ name: 'Edit Score Limits', value: 'Change how many points each server member can gain with an activity each day, week or month.' },
									{ name: 'Change Decay', value: `Change how fast server members lose points due to inactivity.\n\nCurrent value: ${decayval} % / week` },
									{ name: 'Set Up', value: 'Sets up a new live updating scoreboard. Coco will create a new channel on your server that only contains the scoreboard.\nFor this command to work properly, ensure that Coco has the "Manage Channels" permission.' },
									{ name: '◀️ Back', value: 'Go back one page.' },

								);
							const buttonset1a = new MessageButton()
								.setCustomId('esl')
								.setLabel('Edit Score Limits')
								.setStyle('PRIMARY');
							const buttonset2a = new MessageButton()
								.setCustomId('cd')
								.setLabel('Change Decay')
								.setStyle('PRIMARY');
							const buttonset3a = new MessageButton()
								.setCustomId('seup')
								.setLabel('Set Up')
								.setStyle('SUCCESS');
							const buttonset1b = new MessageButton()
								.setCustomId('bck')
								.setLabel('Back')
								.setStyle('SECONDARY')
								.setEmoji('◀️');

							const r1 = new MessageActionRow().addComponents(buttonset1a, buttonset2a);
							const r2 = new MessageActionRow().addComponents(buttonset3a);
							const r3 = new MessageActionRow().addComponents(buttonset1b);
							interaction.editReply({ content: '\u200B', embeds: [setembed1], components: [r1, r2, r3] });
						}
						else {
							if (srlstatus == 0) {
								srlmsg = '🔴 Off';
							} else {
								srlmsg = '🟢 On';
							}
							const setembed1 = new MessageEmbed()

								.setTitle('Coco | Settings')
								.setColor('#36393F')
								.addFields(
									{ name: 'Scoreboard', value: 'Create, edit or delete the live updating scoreboard from here.\n\nThere is no live scoreboard on this server. You can set one up here!' },
									{ name: 'Edit Score Limits', value: 'Change how many points each server member can gain with an activity each day, week or month.' },
									{ name: 'Change Decay', value: `Change how fast server members lose points due to inactivity.\n\nCurrent value: ${decayval} % / week` },
									{ name: 'Change Size', value: `Change how many server members should be visible on the scoreboard.\n\nCurrent value: ${chsize} members` },
									{ name: 'Show Rank List', value: `Set whether the ranks are listed at the bottom of the scoreboard together with their minimum scores.\n\nCurrent state:  ${srlmsg}` },
									{ name: 'Remove', value: 'Removes the live updating scoreboard channel.' },
									{ name: '◀️ Back', value: 'Go back one page.' },

								);
							const buttonset1a = new MessageButton()
								.setCustomId('esl')
								.setLabel('Edit Score Limits')
								.setStyle('PRIMARY');
							const buttonset2a = new MessageButton()
								.setCustomId('cd')
								.setLabel('Change Decay')
								.setStyle('PRIMARY');
							const buttonset3a = new MessageButton()
								.setCustomId('csz')
								.setLabel('Change Size')
								.setStyle('PRIMARY');
							const buttonset3b = new MessageButton()
								.setCustomId('srl')
								.setLabel('Show Rank List')
								.setStyle('PRIMARY');
							const buttonset3c = new MessageButton()
								.setCustomId('rmv')
								.setLabel('Remove')
								.setStyle('DANGER');
							const buttonset1b = new MessageButton()
								.setCustomId('bck')
								.setLabel('Back')
								.setStyle('SECONDARY')
								.setEmoji('◀️');

							const r1 = new MessageActionRow().addComponents(buttonset1a, buttonset2a);
							const r2 = new MessageActionRow().addComponents(buttonset3a, buttonset3b);
							const r25 = new MessageActionRow().addComponents(buttonset3c);
							const r3 = new MessageActionRow().addComponents(buttonset1b);
							interaction.editReply({ content: '\u200B', embeds: [setembed1], components: [r1, r2, r25, r3] });

						}


					}
					//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////					
					////////////////////////////////////////////////////////////////chat activity limit ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////					//////////////////////////////////////////////////// mini
					/////////////////////////////////////////////create limit chat/////////////////////////////////////////////////////////////////////////////////////////////////////
					if (vemi.customId == 'cr_lim_chat') {
						chat_limit = 1;
						const u1 = new MessageEmbed()
							.setTitle('Coco | Settings')
							.setColor('#36393F')
							.setDescription(`**Score Limits | Chat activity**\nSet the maximum number of points earned with this activity!\n\nThis limit applies to Chat activity, i.e. messages sent in a text channel on your server. Coco has a few built-in anti-spam rules and a one-minute cooldown between messages, so that excessive spamming is not rewarded with points.\n\n:warning: It is recommended to keep this limit disabled, as any upper limit on chat activity can be discouraging to members who are actively participating on your server and aren't being rewarded for it.\nCurrent value: ${chat_limit_value} points ${chat_limit_intstatus}`)
							.addFields(
								{ name: 'Set Limit', value: `Set the maximum number of points that can be earned daily.\n\nCurrent value: ${chat_limit_value} points ${chat_limit_intstatus}` },
								{ name: 'Set Interval', value: 'Set the interval for which the score limit should be valid, and how quickly it resets.' },
								{ name: 'Remove Limit', value: 'Remove the score limit for Chat activity entirely.' },
								{ name: '◀️ Back', value: 'Go back one page.' },

							);
						const button54 = new MessageButton()
							.setCustomId('s_lim_chat')
							.setLabel('Set Limit')
							.setStyle('PRIMARY');
						const button55 = new MessageButton()
							.setCustomId('si_lim_chat')
							.setLabel('Set Interval')
							.setStyle('PRIMARY');
						const button56 = new MessageButton()
							.setCustomId('r_lim_chat')
							.setLabel('Remove limit')
							.setStyle('DANGER');
						const button57 = new MessageButton()
							.setCustomId('newbck')
							.setLabel('Back')
							.setStyle('SECONDARY')
							.setEmoji('◀️');

						const r1 = new MessageActionRow().addComponents(button54, button55);
						const r2 = new MessageActionRow().addComponents(button56);
						const r3 = new MessageActionRow().addComponents(button57);
						interaction.editReply({ content: '\u200B', embeds: [u1], components: [r1, r2, r3] });
						chat();


					}
					////////////////////////////////////////////////////////////////remove limit chat////////////////////////////////////////////////////////////////////////////////////////////////////					
					if (vemi.customId == 'r_lim_chat') {
						const u1 = new MessageEmbed()
							.setTitle('Coco | Settings | Remove Limit')
							.setColor('#36393F')
							.addFields(
								{ name: 'Remove Limit', value: `Remove the score limit for Chat activity entirely.\n\nThis will not affect any scores that have been awarded before now.\n\nWithout a score limit, members can gain an unlimited number of points with this activity. You may want to check the state of the scoreboard to get an idea for how balanced activity rewards are on your server.` },
								{ name: '🛑 Confimation Required', value: 'Are you sure you want to perform this action? You cannot undo it later!' },
							);
						const button54 = new MessageButton()
							.setCustomId('chat_yes')
							.setLabel('Yes')
							.setStyle('DANGER');
						const button55 = new MessageButton()
							.setCustomId('newbck')
							.setLabel('No')
							.setStyle('SECONDARY');
						const r1 = new MessageActionRow().addComponents(button54, button55);
						interaction.editReply({ content: '\u200B', embeds: [u1], components: [r1] });


					}
					///////////////////////////////////////////////////////////////set limit chat/////////////////////////////////////////////////////////////////////////////////////////////////////	
					if (vemi.customId == 's_lim_chat') {
						const u1 = new MessageEmbed()
							.setTitle('Coco | Settings | Set Limit')
							.setColor('#36393F')
							.addFields(
								{ name: 'Set Limit', value: `Set the maximum number of points that can be earned daily.\n\nIf a server member hits this limit, they will not receive any more points for this activity until the timer resets at midnight UTC.\nWeekly limits reset every Monday at midnight, monthly limits reset on the 1st of each month.\nYou can disable point rewards for this activity entirely by setting a limit of 0 points.` },
								{ name: 'Set Value', value: `Use the keypad to set the value and click Save when you're done.` },
							);
						numdis = true;
						numdis0 = true;
						backdis = false;
						tempchat_limit_value = chat_limit_value;
						savedis = false;

						const setembed1 = new MessageEmbed()

							.setTitle(`➡ ${chat_limit_value} points`)
							.setDescription(`Previous value: ${chat_limit_value} points`)

							.setColor('#90ee90');
						//.setColor('#90ee90');

						const n1 = new MessageButton()
							.setCustomId('1')
							.setLabel('1')
							.setStyle('PRIMARY')
							.setDisabled(`${numdis}`);
						const n2 = new MessageButton()
							.setCustomId('2')
							.setLabel('2')
							.setStyle('PRIMARY')
							.setDisabled(`${numdis}`);
						const n3 = new MessageButton()
							.setCustomId('3')
							.setLabel('3')
							.setStyle('PRIMARY')
							.setDisabled(`${numdis}`);
						const n4 = new MessageButton()
							.setCustomId('4')
							.setLabel('4')
							.setStyle('PRIMARY')
							.setDisabled(`${numdis}`);
						const n5 = new MessageButton()
							.setCustomId('5')
							.setLabel('5')
							.setStyle('PRIMARY')
							.setDisabled(`${numdis}`);
						const n6 = new MessageButton()
							.setCustomId('6')
							.setLabel('6')
							.setStyle('PRIMARY')
							.setDisabled(`${numdis}`);
						const n7 = new MessageButton()
							.setCustomId('7')
							.setLabel('7')
							.setStyle('PRIMARY')
							.setDisabled(`${numdis}`);
						const n8 = new MessageButton()
							.setCustomId('8')
							.setLabel('8')
							.setStyle('PRIMARY')
							.setDisabled(`${numdis}`);
						const n9 = new MessageButton()
							.setCustomId('9')
							.setLabel('9')
							.setStyle('PRIMARY')
							.setDisabled(`${numdis}`);
						const n0 = new MessageButton()
							.setCustomId('0')
							.setLabel('0')
							.setStyle('PRIMARY')
							.setDisabled(`${numdis0}`);
						const n00 = new MessageButton()
							.setCustomId('blank')
							.setLabel('\u200B')
							.setStyle('SECONDARY')
							.setDisabled(`true`);
						const ns = new MessageButton()
							.setCustomId('BACKSPACE')
							.setLabel('‹')
							.setStyle('DANGER')
							.setDisabled(`${backdis}`);
						const nc = new MessageButton()
							.setCustomId('CANCEL')
							.setLabel('Cancel')
							.setStyle('PRIMARY');
						const nsa = new MessageButton()
							.setCustomId('SAVE')
							.setLabel('Save')
							.setStyle('SUCCESS')
							.setDisabled(`${savedis}`);



						const r1 = new MessageActionRow().addComponents(n1, n2, n3);
						const r2 = new MessageActionRow().addComponents(n4, n5, n6);
						const r3 = new MessageActionRow().addComponents(n7, n8, n9);
						const r4 = new MessageActionRow().addComponents(n00, n0, ns);
						const r5 = new MessageActionRow().addComponents(nc, nsa);

						interaction.editReply({ content: '\u200B', embeds: [u1, setembed1], components: [r1, r2, r3, r4, r5], ephemeral: true });
						newm2 = await interaction.fetchReply();



						const collectornd1 = newm2.createMessageComponentCollector({
							type: "BUTTON",

							time: 300000
						});


						collectornd1.on("collect", async (newtemi) => {
							//newtemi.deferUpdate();
							if (newtemi.customId == 'BACKSPACE') {
								tempchat_limit_value = Math.floor(tempchat_limit_value / 10);
							}
							if (newtemi.customId != 'BACKSPACE' && newtemi.customId != 'SAVE' && newtemi.customId != 'CANCEL') {
								tempchat_limit_value = (tempchat_limit_value) + newtemi.customId;
								tempchat_limit_value = parseInt(tempchat_limit_value, 10);
							}
							savedis = true;
							if (tempchat_limit_value > 9999) {
								numdis = true;
								numdis0 = true;
								backdis = false;
								savedis = false;




							}
							if (tempchat_limit_value < 10000) {
								numdis = false;
								numdis0 = false;
								backdis = false;




							}
							if (tempchat_limit_value == 0) {
								backdis = true;
								numdis = false;
								savedis = true;
							}

							if (tempchat_limit_value > 9999) {
								colr = '#90ee90';
								savedis = false;
							}
							if (tempchat_limit_value < 10000) {
								colr = '#FF0000';
								savedis = true;
							}
							const n1 = new MessageButton()
								.setCustomId('1')
								.setLabel('1')
								.setStyle('PRIMARY')
								.setDisabled(`${numdis}`);
							const n2 = new MessageButton()
								.setCustomId('2')
								.setLabel('2')
								.setStyle('PRIMARY')
								.setDisabled(`${numdis}`);
							const n3 = new MessageButton()
								.setCustomId('3')
								.setLabel('3')
								.setStyle('PRIMARY')
								.setDisabled(`${numdis}`);
							const n4 = new MessageButton()
								.setCustomId('4')
								.setLabel('4')
								.setStyle('PRIMARY')
								.setDisabled(`${numdis}`);
							const n5 = new MessageButton()
								.setCustomId('5')
								.setLabel('5')
								.setStyle('PRIMARY')
								.setDisabled(`${numdis}`);
							const n6 = new MessageButton()
								.setCustomId('6')
								.setLabel('6')
								.setStyle('PRIMARY')
								.setDisabled(`${numdis}`);
							const n7 = new MessageButton()
								.setCustomId('7')
								.setLabel('7')
								.setStyle('PRIMARY')
								.setDisabled(`${numdis}`);
							const n8 = new MessageButton()
								.setCustomId('8')
								.setLabel('8')
								.setStyle('PRIMARY')
								.setDisabled(`${numdis}`);
							const n9 = new MessageButton()
								.setCustomId('9')
								.setLabel('9')
								.setStyle('PRIMARY')
								.setDisabled(`${numdis}`);
							const n0 = new MessageButton()
								.setCustomId('0')
								.setLabel('0')
								.setStyle('PRIMARY')
								.setDisabled(`${numdis0}`);
							const n00 = new MessageButton()
								.setCustomId('blank')
								.setLabel('\u200B')
								.setStyle('SECONDARY')
								.setDisabled(`true`);
							const ns = new MessageButton()
								.setCustomId('BACKSPACE')
								.setLabel('‹')
								.setStyle('DANGER')
								.setDisabled(`${backdis}`);
							const nc = new MessageButton()
								.setCustomId('CANCEL')
								.setLabel('Cancel')
								.setStyle('PRIMARY');
							const nsa = new MessageButton()
								.setCustomId('SAVE')
								.setLabel('Save')
								.setStyle('SUCCESS')
								.setDisabled(`${savedis}`);



							const r1 = new MessageActionRow().addComponents(n1, n2, n3);
							const r2 = new MessageActionRow().addComponents(n4, n5, n6);
							const r3 = new MessageActionRow().addComponents(n7, n8, n9);
							const r4 = new MessageActionRow().addComponents(n00, n0, ns);
							const r5 = new MessageActionRow().addComponents(nc, nsa);
							if (tempchat_limit_value > 9999) {
								const setembed1 = new MessageEmbed()

									.setTitle(`➡ ${tempchat_limit_value} points`)
									.setDescription(`Previous value: ${chat_limit_value} points`)

									.setColor(`${colr}`);
								interaction.editReply({ content: '\u200B', embeds: [u1, setembed1], components: [r1, r2, r3, r4, r5], ephemeral: true });
							}
							else {
								const setembed1 = new MessageEmbed()

									.setTitle(`➡ ${tempchat_limit_value} points`)
									.setDescription(`**Minimum value**: 10 000 points\nPrevious value: ${chat_limit_value} points`)

									.setColor(`${colr}`);
								interaction.editReply({ content: '\u200B', embeds: [u1, setembed1], components: [r1, r2, r3, r4, r5], ephemeral: true });
							}
							//mini
							if (newtemi.customId == 'CANCEL' || newtemi.customId == 'SAVE') {

								collectornd1.stop();
								if (newtemi.customId == 'SAVE') {
									chat_limit_value = tempchat_limit_value;
									chat();
								}
								const u1 = new MessageEmbed()
									.setTitle('Coco | Settings')
									.setColor('#36393F')
									.setDescription(`**Score Limits | Chat activity**\nSet the maximum number of points earned with this activity!\n\nThis limit applies to Chat activity, i.e. messages sent in a text channel on your server. Coco has a few built-in anti-spam rules and a one-minute cooldown between messages, so that excessive spamming is not rewarded with points.\n\n:warning: It is recommended to keep this limit disabled, as any upper limit on chat activity can be discouraging to members who are actively participating on your server and aren't being rewarded for it.\nCurrent value: ${chat_limit_value} points ${chat_limit_intstatus}`)
									.addFields(
										{ name: 'Set Limit', value: `Set the maximum number of points that can be earned daily.\n\nCurrent value: ${chat_limit_value} points ${chat_limit_intstatus}` },
										{ name: 'Set Interval', value: 'Set the interval for which the score limit should be valid, and how quickly it resets.' },
										{ name: 'Remove Limit', value: 'Remove the score limit for Chat activity entirely.' },
										{ name: '◀️ Back', value: 'Go back one page.' },

									);
								const button54 = new MessageButton()
									.setCustomId('s_lim_chat')
									.setLabel('Set Limit')
									.setStyle('PRIMARY');
								const button55 = new MessageButton()
									.setCustomId('si_lim_chat')
									.setLabel('Set Interval')
									.setStyle('PRIMARY');
								const button56 = new MessageButton()
									.setCustomId('r_lim_chat')
									.setLabel('Remove limit')
									.setStyle('DANGER');
								const button57 = new MessageButton()
									.setCustomId('newbck')
									.setLabel('Back')
									.setStyle('SECONDARY')
									.setEmoji('◀️');

								const r1 = new MessageActionRow().addComponents(button54, button55);
								const r2 = new MessageActionRow().addComponents(button56);
								const r3 = new MessageActionRow().addComponents(button57);
								interaction.editReply({ content: '\u200B', embeds: [u1], components: [r1, r2, r3] });



							}










						})
						collectornd1.on("end", (collected, reason) => {


						});
					}
					///////////////////////////////////////////////////////////////set interval///////////////////////////////////////////////////////////////////////////////////////////////////////
					if (vemi.customId == 'si_lim_chat') {
						const u1 = new MessageEmbed()
							.setTitle('Coco | Settings | Set Interval')
							.setColor('#36393F')
							.addFields(
								{ name: 'Set Interval', value: `Set the interval for which the score limit should be valid, and how quickly it resets.\n\nIf a server member hits the score limit, they will not receive any more points for this activity until the limit resets.` },
								{ name: 'Select', value: `Choose one of the listed items to continue!` },
							);
						const r1 = new MessageActionRow()
							.addComponents(
								new MessageSelectMenu()
									.setCustomId('select1')
									.setPlaceholder('Set Interval | Select one...')
									.addOptions([
										{
											label: `${chat_limit_value} points per day`,
											description: 'Limit resets at everyday at midnight UTC',
											value: 'first_option1',
										},
										{
											label: `${chat_limit_value} points per week`,
											description: 'Limit resets at every monday at midnight UTC',
											value: 'second_option1',
										},
										{
											label: `${chat_limit_value} points per month`,
											description: 'Limit resets at every 1st of the month at midnight UTC',
											value: 'third_option1',
										}
									]),
							);
						const button57 = new MessageButton()
							.setCustomId('spcbck')
							.setLabel('Back')
							.setStyle('SECONDARY')
							.setEmoji('◀️');

						const r2 = new MessageActionRow().addComponents(button57);
						interaction.editReply({ content: '\u200B', embeds: [esle], components: [r1, r2] });
						mainmsg2 = await interaction.fetchReply();

						const collectorpd2 = mainmsg2.createMessageComponentCollector({
							type: "SELECT_MENU",

							time: 300000
						});


						const collectorpd1 = mainmsg2.createMessageComponentCollector({
							type: "BUTTON",

							time: 300000
						});
						//mini
						collectorpd1.on("collect", async (mainvemi) => {
							if (mainvemi.customId == 'spcbck') {
								collectorpd1.stop();
								collectorpd2.stop();
								const u1 = new MessageEmbed()
									.setTitle('Coco | Settings')
									.setColor('#36393F')
									.setDescription(`**Score Limits | Chat activity**\nSet the maximum number of points earned with this activity!\n\nThis limit applies to Chat activity, i.e. messages sent in a text channel on your server. Coco has a few built-in anti-spam rules and a one-minute cooldown between messages, so that excessive spamming is not rewarded with points.\n\n:warning: It is recommended to keep this limit disabled, as any upper limit on chat activity can be discouraging to members who are actively participating on your server and aren't being rewarded for it.\nCurrent value: ${chat_limit_value} points ${chat_limit_intstatus}`)
									.addFields(
										{ name: 'Set Limit', value: `Set the maximum number of points that can be earned daily.\n\nCurrent value: ${chat_limit_value} points ${chat_limit_intstatus}` },
										{ name: 'Set Interval', value: 'Set the interval for which the score limit should be valid, and how quickly it resets.' },
										{ name: 'Remove Limit', value: 'Remove the score limit for Chat activity entirely.' },
										{ name: '◀️ Back', value: 'Go back one page.' },

									);
								const button54 = new MessageButton()
									.setCustomId('s_lim_chat')
									.setLabel('Set Limit')
									.setStyle('PRIMARY');
								const button55 = new MessageButton()
									.setCustomId('si_lim_chat')
									.setLabel('Set Interval')
									.setStyle('PRIMARY');
								const button56 = new MessageButton()
									.setCustomId('r_lim_chat')
									.setLabel('Remove limit')
									.setStyle('DANGER');
								const button57 = new MessageButton()
									.setCustomId('newbck')
									.setLabel('Back')
									.setStyle('SECONDARY')
									.setEmoji('◀️');

								const r1 = new MessageActionRow().addComponents(button54, button55);
								const r2 = new MessageActionRow().addComponents(button56);
								const r3 = new MessageActionRow().addComponents(button57);
								interaction.editReply({ content: '\u200B', embeds: [u1], components: [r1, r2, r3] });


							}
						});
						collectorpd2.on("collect", async (mainvemi2) => {
							if (mainvemi2.customId == 'select1') {
								collectorpd1.stop();
								collectorpd2.stop();
								if (mainvemi2.values[0] == 'first_option1') {
									chat_limit_interval = 1;
									chat_limit_intstatus = 'daily';
									chat();
								}
								if (mainvemi2.values[0] == 'second_option1') {
									chat_limit_interval = 7;
									chat_limit_intstatus = 'weekly';
									chat();
								}
								if (mainvemi2.values[0] == 'third_option1') {
									chat_limit_interval = 30;
									chat_limit_intstatus = 'monthly';
									chat();
								}
								const u1 = new MessageEmbed()
									.setTitle('Coco | Settings')
									.setColor('#36393F')
									.setDescription(`**Score Limits | Chat activity**\nSet the maximum number of points earned with this activity!\n\nThis limit applies to Chat activity, i.e. messages sent in a text channel on your server. Coco has a few built-in anti-spam rules and a one-minute cooldown between messages, so that excessive spamming is not rewarded with points.\n\n:warning: It is recommended to keep this limit disabled, as any upper limit on chat activity can be discouraging to members who are actively participating on your server and aren't being rewarded for it.\nCurrent value: ${chat_limit_value} points ${chat_limit_intstatus}`)
									.addFields(
										{ name: 'Set Limit', value: `Set the maximum number of points that can be earned daily.\n\nCurrent value: ${chat_limit_value} points ${chat_limit_intstatus}` },
										{ name: 'Set Interval', value: 'Set the interval for which the score limit should be valid, and how quickly it resets.' },
										{ name: 'Remove Limit', value: 'Remove the score limit for Chat activity entirely.' },
										{ name: '◀️ Back', value: 'Go back one page.' },

									);
								const button54 = new MessageButton()
									.setCustomId('s_lim_chat')
									.setLabel('Set Limit')
									.setStyle('PRIMARY');
								const button55 = new MessageButton()
									.setCustomId('si_lim_chat')
									.setLabel('Set Interval')
									.setStyle('PRIMARY');
								const button56 = new MessageButton()
									.setCustomId('r_lim_chat')
									.setLabel('Remove limit')
									.setStyle('DANGER');
								const button57 = new MessageButton()
									.setCustomId('newbck')
									.setLabel('Back')
									.setStyle('SECONDARY')
									.setEmoji('◀️');

								const r1 = new MessageActionRow().addComponents(button54, button55);
								const r2 = new MessageActionRow().addComponents(button56);
								const r3 = new MessageActionRow().addComponents(button57);
								interaction.editReply({ content: '\u200B', embeds: [u1], components: [r1, r2, r3] });
							}

						});
						collectorpd2.on("end", (collected, reason) => {


						});
						collectorpd1.on("end", (collected, reason) => {


						});

					}
					///////////////////////////////////////////////////////////////chat yes remove////////////////////////////////////////////////////////////////////////////////////////////////////
					if (vemi.customId == 'chat_yes') {
						chat_limit = 0;
						collectorud1.stop();
						collectorud2.stop();

						//vemi.deferUpdate();
						if (ldb == 0) {
							const setembed1 = new MessageEmbed()

								.setTitle('Coco | Settings')
								.setColor('#36393F')
								.addFields(
									{ name: 'Scoreboard', value: 'Create, edit or delete the live updating scoreboard from here.\n\nThere is no live scoreboard on this server. You can set one up here!' },
									{ name: 'Edit Score Limits', value: 'Change how many points each server member can gain with an activity each day, week or month.' },
									{ name: 'Change Decay', value: `Change how fast server members lose points due to inactivity.\n\nCurrent value: ${decayval} % / week` },
									{ name: 'Set Up', value: 'Sets up a new live updating scoreboard. Coco will create a new channel on your server that only contains the scoreboard.\nFor this command to work properly, ensure that Coco has the "Manage Channels" permission.' },
									{ name: '◀️ Back', value: 'Go back one page.' },

								);
							const buttonset1a = new MessageButton()
								.setCustomId('esl')
								.setLabel('Edit Score Limits')
								.setStyle('PRIMARY');
							const buttonset2a = new MessageButton()
								.setCustomId('cd')
								.setLabel('Change Decay')
								.setStyle('PRIMARY');
							const buttonset3a = new MessageButton()
								.setCustomId('seup')
								.setLabel('Set Up')
								.setStyle('SUCCESS');
							const buttonset1b = new MessageButton()
								.setCustomId('bck')
								.setLabel('Back')
								.setStyle('SECONDARY')
								.setEmoji('◀️');

							const r1 = new MessageActionRow().addComponents(buttonset1a, buttonset2a);
							const r2 = new MessageActionRow().addComponents(buttonset3a);
							const r3 = new MessageActionRow().addComponents(buttonset1b);
							interaction.editReply({ content: '\u200B', embeds: [setembed1], components: [r1, r2, r3] });
						}
						else {
							if (srlstatus == 0) {
								srlmsg = '🔴 Off';
							} else {
								srlmsg = '🟢 On';
							}
							const setembed1 = new MessageEmbed()

								.setTitle('Coco | Settings')
								.setColor('#36393F')
								.addFields(
									{ name: 'Scoreboard', value: 'Create, edit or delete the live updating scoreboard from here.\n\nThere is no live scoreboard on this server. You can set one up here!' },
									{ name: 'Edit Score Limits', value: 'Change how many points each server member can gain with an activity each day, week or month.' },
									{ name: 'Change Decay', value: `Change how fast server members lose points due to inactivity.\n\nCurrent value: ${decayval} % / week` },
									{ name: 'Change Size', value: `Change how many server members should be visible on the scoreboard.\n\nCurrent value: ${chsize} members` },
									{ name: 'Show Rank List', value: `Set whether the ranks are listed at the bottom of the scoreboard together with their minimum scores.\n\nCurrent state:  ${srlmsg}` },
									{ name: 'Remove', value: 'Removes the live updating scoreboard channel.' },
									{ name: '◀️ Back', value: 'Go back one page.' },

								);
							const buttonset1a = new MessageButton()
								.setCustomId('esl')
								.setLabel('Edit Score Limits')
								.setStyle('PRIMARY');
							const buttonset2a = new MessageButton()
								.setCustomId('cd')
								.setLabel('Change Decay')
								.setStyle('PRIMARY');
							const buttonset3a = new MessageButton()
								.setCustomId('csz')
								.setLabel('Change Size')
								.setStyle('PRIMARY');
							const buttonset3b = new MessageButton()
								.setCustomId('srl')
								.setLabel('Show Rank List')
								.setStyle('PRIMARY');
							const buttonset3c = new MessageButton()
								.setCustomId('rmv')
								.setLabel('Remove')
								.setStyle('DANGER');
							const buttonset1b = new MessageButton()
								.setCustomId('bck')
								.setLabel('Back')
								.setStyle('SECONDARY')
								.setEmoji('◀️');

							const r1 = new MessageActionRow().addComponents(buttonset1a, buttonset2a);
							const r2 = new MessageActionRow().addComponents(buttonset3a, buttonset3b);
							const r25 = new MessageActionRow().addComponents(buttonset3c);
							const r3 = new MessageActionRow().addComponents(buttonset1b);
							interaction.editReply({ content: '\u200B', embeds: [setembed1], components: [r1, r2, r25, r3] });

						}


					}
					//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////					
					////////////////////////////////////////////////////////////////voice activity limit ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////					////////////////////////////////////////////////////
					/////////////////////////////////////////////create limit voice/////////////////////////////////////////////////////////////////////////////////////////////////////
					if (vemi.customId == 'cr_lim_voice') {
						voice_limit = 1;
						const u1 = new MessageEmbed()
							.setTitle('Coco | Settings')
							.setColor('#36393F')
							.setDescription(`**Score Limits | Voice activity**\nSet the maximum number of points earned with this activity!\n\nThis limit applies to Voice activity, i.e. the amount of time that a server member spends in voice chat. The Voice activity reward only applies if the user is undeafened and unmuted, and only if at least two members are in the same voice channel.\n\nYou can make this reward dependent on how much more your server members chat in voice chat or text chat. For example, if only a few members hang out in voice chats but many more like to text, you may want to set a lower limit to give the texting members a better chance to catch up to the voice activity bonus.`)
							.addFields(
								{ name: 'Set Limit', value: `Set the maximum number of points that can be earned daily.\n\nCurrent value: ${voice_limit_value} points ${voice_limit_intstatus}` },
								{ name: 'Set Interval', value: 'Set the interval for which the score limit should be valid, and how quickly it resets.' },
								{ name: 'Remove Limit', value: 'Remove the score limit for voice games entirely.' },
								{ name: '◀️ Back', value: 'Go back one page.' },

							);
						const button54 = new MessageButton()
							.setCustomId('s_lim_voice')
							.setLabel('Set Limit')
							.setStyle('PRIMARY');
						const button55 = new MessageButton()
							.setCustomId('si_lim_voice')
							.setLabel('Set Interval')
							.setStyle('PRIMARY');
						const button56 = new MessageButton()
							.setCustomId('r_lim_voice')
							.setLabel('Remove limit')
							.setStyle('DANGER');
						const button57 = new MessageButton()
							.setCustomId('newbck')
							.setLabel('Back')
							.setStyle('SECONDARY')
							.setEmoji('◀️');

						const r1 = new MessageActionRow().addComponents(button54, button55);
						const r2 = new MessageActionRow().addComponents(button56);
						const r3 = new MessageActionRow().addComponents(button57);
						interaction.editReply({ content: '\u200B', embeds: [u1], components: [r1, r2, r3] });
						voice();


					}
					////////////////////////////////////////////////////////////////remove limit voice////////////////////////////////////////////////////////////////////////////////////////////////////					
					if (vemi.customId == 'r_lim_voice') {
						const u1 = new MessageEmbed()
							.setTitle('Coco | Settings | Remove Limit')
							.addFields(
								{ name: 'Remove Limit', value: `Remove the score limit for voice games entirely.\n\nThis will not affect any scores that have been awarded before now.\n\nWithout a score limit, members can gain an unlimited number of points with this activity. You may want to check the state of the scoreboard to get an idea for how balanced activity rewards are on your server.` },
								{ name: '🛑 Confimation Required', value: 'Are you sure you want to perform this action? You cannot undo it later!' },
							);
						const button54 = new MessageButton()
							.setCustomId('voice_yes')
							.setLabel('Yes')
							.setStyle('DANGER');
						const button55 = new MessageButton()
							.setCustomId('newbck')
							.setLabel('No')
							.setStyle('SECONDARY');
						const r1 = new MessageActionRow().addComponents(button54, button55);
						interaction.editReply({ content: '\u200B', embeds: [u1], components: [r1] });


					}
					///////////////////////////////////////////////////////////////set limit voice/////////////////////////////////////////////////////////////////////////////////////////////////////	
					if (vemi.customId == 's_lim_voice') {
						const u1 = new MessageEmbed()
							.setTitle('Coco | Settings | Set Limit')
							.addFields(
								{ name: 'Set Limit', value: `Set the maximum number of points that can be earned daily.\n\nIf a server member hits this limit, they will not receive any more points for this activity until the timer resets at midnight UTC.\nWeekly limits reset every Monday at midnight, monthly limits reset on the 1st of each month.\nYou can disable point rewards for this activity entirely by setting a limit of 0 points.` },
								{ name: 'Set Value', value: `Use the keypad to set the value and click Save when you're done.` },
							);
						numdis = true;
						numdis0 = true;
						backdis = false;
						tempvoice_limit_value = voice_limit_value;
						savedis = false;

						const setembed1 = new MessageEmbed()

							.setTitle(`➡ ${voice_limit_value} points`)
							.setDescription(`Previous value: ${voice_limit_value} points`)

							.setColor('#90ee90');
						//.setColor('#90ee90');

						const n1 = new MessageButton()
							.setCustomId('1')
							.setLabel('1')
							.setStyle('PRIMARY')
							.setDisabled(`${numdis}`);
						const n2 = new MessageButton()
							.setCustomId('2')
							.setLabel('2')
							.setStyle('PRIMARY')
							.setDisabled(`${numdis}`);
						const n3 = new MessageButton()
							.setCustomId('3')
							.setLabel('3')
							.setStyle('PRIMARY')
							.setDisabled(`${numdis}`);
						const n4 = new MessageButton()
							.setCustomId('4')
							.setLabel('4')
							.setStyle('PRIMARY')
							.setDisabled(`${numdis}`);
						const n5 = new MessageButton()
							.setCustomId('5')
							.setLabel('5')
							.setStyle('PRIMARY')
							.setDisabled(`${numdis}`);
						const n6 = new MessageButton()
							.setCustomId('6')
							.setLabel('6')
							.setStyle('PRIMARY')
							.setDisabled(`${numdis}`);
						const n7 = new MessageButton()
							.setCustomId('7')
							.setLabel('7')
							.setStyle('PRIMARY')
							.setDisabled(`${numdis}`);
						const n8 = new MessageButton()
							.setCustomId('8')
							.setLabel('8')
							.setStyle('PRIMARY')
							.setDisabled(`${numdis}`);
						const n9 = new MessageButton()
							.setCustomId('9')
							.setLabel('9')
							.setStyle('PRIMARY')
							.setDisabled(`${numdis}`);
						const n0 = new MessageButton()
							.setCustomId('0')
							.setLabel('0')
							.setStyle('PRIMARY')
							.setDisabled(`${numdis0}`);
						const n00 = new MessageButton()
							.setCustomId('blank')
							.setLabel('\u200B')
							.setStyle('SECONDARY')
							.setDisabled(`true`);
						const ns = new MessageButton()
							.setCustomId('BACKSPACE')
							.setLabel('‹')
							.setStyle('DANGER')
							.setDisabled(`${backdis}`);
						const nc = new MessageButton()
							.setCustomId('CANCEL')
							.setLabel('Cancel')
							.setStyle('PRIMARY');
						const nsa = new MessageButton()
							.setCustomId('SAVE')
							.setLabel('Save')
							.setStyle('SUCCESS')
							.setDisabled(`${savedis}`);



						const r1 = new MessageActionRow().addComponents(n1, n2, n3);
						const r2 = new MessageActionRow().addComponents(n4, n5, n6);
						const r3 = new MessageActionRow().addComponents(n7, n8, n9);
						const r4 = new MessageActionRow().addComponents(n00, n0, ns);
						const r5 = new MessageActionRow().addComponents(nc, nsa);

						interaction.editReply({ content: '\u200B', embeds: [u1, setembed1], components: [r1, r2, r3, r4, r5], ephemeral: true });
						newm2 = await interaction.fetchReply();



						const collectornd1 = newm2.createMessageComponentCollector({
							type: "BUTTON",

							time: 300000
						});


						collectornd1.on("collect", async (newtemi) => {
							//newtemi.deferUpdate();
							if (newtemi.customId == 'BACKSPACE') {
								tempvoice_limit_value = Math.floor(tempvoice_limit_value / 10);
							}
							if (newtemi.customId != 'BACKSPACE' && newtemi.customId != 'SAVE' && newtemi.customId != 'CANCEL') {
								tempvoice_limit_value = (tempvoice_limit_value) + newtemi.customId;
								tempvoice_limit_value = parseInt(tempvoice_limit_value, 10);
							}
							savedis = true;
							if (tempvoice_limit_value > 9999) {
								numdis = true;
								numdis0 = true;
								backdis = false;
								savedis = false;




							}
							if (tempvoice_limit_value < 10000) {
								numdis = false;
								numdis0 = false;
								backdis = false;




							}
							if (tempvoice_limit_value == 0) {
								backdis = true;
								numdis = false;
								savedis = true;
							}

							if (tempvoice_limit_value > 9999) {
								colr = '#90ee90';
								savedis = false;
							}
							if (tempvoice_limit_value < 10000) {
								colr = '#FF0000';
								savedis = true;
							}
							const n1 = new MessageButton()
								.setCustomId('1')
								.setLabel('1')
								.setStyle('PRIMARY')
								.setDisabled(`${numdis}`);
							const n2 = new MessageButton()
								.setCustomId('2')
								.setLabel('2')
								.setStyle('PRIMARY')
								.setDisabled(`${numdis}`);
							const n3 = new MessageButton()
								.setCustomId('3')
								.setLabel('3')
								.setStyle('PRIMARY')
								.setDisabled(`${numdis}`);
							const n4 = new MessageButton()
								.setCustomId('4')
								.setLabel('4')
								.setStyle('PRIMARY')
								.setDisabled(`${numdis}`);
							const n5 = new MessageButton()
								.setCustomId('5')
								.setLabel('5')
								.setStyle('PRIMARY')
								.setDisabled(`${numdis}`);
							const n6 = new MessageButton()
								.setCustomId('6')
								.setLabel('6')
								.setStyle('PRIMARY')
								.setDisabled(`${numdis}`);
							const n7 = new MessageButton()
								.setCustomId('7')
								.setLabel('7')
								.setStyle('PRIMARY')
								.setDisabled(`${numdis}`);
							const n8 = new MessageButton()
								.setCustomId('8')
								.setLabel('8')
								.setStyle('PRIMARY')
								.setDisabled(`${numdis}`);
							const n9 = new MessageButton()
								.setCustomId('9')
								.setLabel('9')
								.setStyle('PRIMARY')
								.setDisabled(`${numdis}`);
							const n0 = new MessageButton()
								.setCustomId('0')
								.setLabel('0')
								.setStyle('PRIMARY')
								.setDisabled(`${numdis0}`);
							const n00 = new MessageButton()
								.setCustomId('blank')
								.setLabel('\u200B')
								.setStyle('SECONDARY')
								.setDisabled(`true`);
							const ns = new MessageButton()
								.setCustomId('BACKSPACE')
								.setLabel('‹')
								.setStyle('DANGER')
								.setDisabled(`${backdis}`);
							const nc = new MessageButton()
								.setCustomId('CANCEL')
								.setLabel('Cancel')
								.setStyle('PRIMARY');
							const nsa = new MessageButton()
								.setCustomId('SAVE')
								.setLabel('Save')
								.setStyle('SUCCESS')
								.setDisabled(`${savedis}`);



							const r1 = new MessageActionRow().addComponents(n1, n2, n3);
							const r2 = new MessageActionRow().addComponents(n4, n5, n6);
							const r3 = new MessageActionRow().addComponents(n7, n8, n9);
							const r4 = new MessageActionRow().addComponents(n00, n0, ns);
							const r5 = new MessageActionRow().addComponents(nc, nsa);
							if (tempvoice_limit_value > 9999) {
								const setembed1 = new MessageEmbed()

									.setTitle(`➡ ${tempvoice_limit_value} points`)
									.setDescription(`Previous value: ${voice_limit_value} points`)

									.setColor(`${colr}`);
								interaction.editReply({ content: '\u200B', embeds: [u1, setembed1], components: [r1, r2, r3, r4, r5], ephemeral: true });
							}
							else {
								const setembed1 = new MessageEmbed()

									.setTitle(`➡ ${tempvoice_limit_value} points`)
									.setDescription(`**Minimum value**: 10 000 points\nPrevious value: ${voice_limit_value} points`)

									.setColor(`${colr}`);
								interaction.editReply({ content: '\u200B', embeds: [u1, setembed1], components: [r1, r2, r3, r4, r5], ephemeral: true });
							}
							if (newtemi.customId == 'CANCEL' || newtemi.customId == 'SAVE') {

								collectornd1.stop();
								if (newtemi.customId == 'SAVE') {
									voice_limit_value = tempvoice_limit_value;
									voice();
								}
								const u1 = new MessageEmbed()
									.setTitle('Coco | Settings')
									.setColor('#36393F')
									.setDescription(`**Score Limits | Voice activity**\nSet the maximum number of points earned with this activity!\n\nThis limit applies to Voice activity, i.e. the amount of time that a server member spends in voice chat. The Voice activity reward only applies if the user is undeafened and unmuted, and only if at least two members are in the same voice channel.\n\nYou can make this reward dependent on how much more your server members chat in voice chat or text chat. For example, if only a few members hang out in voice chats but many more like to text, you may want to set a lower limit to give the texting members a better chance to catch up to the voice activity bonus.`)
									.addFields(
										{ name: 'Set Limit', value: `Set the maximum number of points that can be earned daily.\n\nCurrent value: ${voice_limit_value} points ${voice_limit_intstatus}` },
										{ name: 'Set Interval', value: 'Set the interval for which the score limit should be valid, and how quickly it resets.' },
										{ name: 'Remove Limit', value: 'Remove the score limit for voice games entirely.' },
										{ name: '◀️ Back', value: 'Go back one page.' },

									);
								const button54 = new MessageButton()
									.setCustomId('s_lim_voice')
									.setLabel('Set Limit')
									.setStyle('PRIMARY');
								const button55 = new MessageButton()
									.setCustomId('si_lim_voice')
									.setLabel('Set Interval')
									.setStyle('PRIMARY');
								const button56 = new MessageButton()
									.setCustomId('r_lim_voice')
									.setLabel('Remove limit')
									.setStyle('DANGER');
								const button57 = new MessageButton()
									.setCustomId('newbck')
									.setLabel('Back')
									.setStyle('SECONDARY')
									.setEmoji('◀️');

								const r1 = new MessageActionRow().addComponents(button54, button55);
								const r2 = new MessageActionRow().addComponents(button56);
								const r3 = new MessageActionRow().addComponents(button57);
								interaction.editReply({ content: '\u200B', embeds: [u1], components: [r1, r2, r3] });



							}










						})
						collectornd1.on("end", (collected, reason) => {


						});
					}
					///////////////////////////////////////////////////////////////set interval///////////////////////////////////////////////////////////////////////////////////////////////////////
					if (vemi.customId == 'si_lim_voice') {
						const u1 = new MessageEmbed()
							.setTitle('Coco | Settings | Set Interval')
							.setColor('#36393F')
							.addFields(
								{ name: 'Set Interval', value: `Set the interval for which the score limit should be valid, and how quickly it resets.\n\nIf a server member hits the score limit, they will not receive any more points for this activity until the limit resets.` },
								{ name: 'Select', value: `Choose one of the listed items to continue!` },
							);
						const r1 = new MessageActionRow()
							.addComponents(
								new MessageSelectMenu()
									.setCustomId('select1')
									.setPlaceholder('Set Interval | Select one...')
									.addOptions([
										{
											label: `${voice_limit_value} points per day`,
											description: 'Limit resets at everyday at midnight UTC',
											value: 'first_option1',
										},
										{
											label: `${voice_limit_value} points per week`,
											description: 'Limit resets at every monday at midnight UTC',
											value: 'second_option1',
										},
										{
											label: `${voice_limit_value} points per month`,
											description: 'Limit resets at every 1st of the month at midnight UTC',
											value: 'third_option1',
										}
									]),
							);
						const button57 = new MessageButton()
							.setCustomId('spcbck')
							.setLabel('Back')
							.setStyle('SECONDARY')
							.setEmoji('◀️');

						const r2 = new MessageActionRow().addComponents(button57);
						interaction.editReply({ content: '\u200B', embeds: [esle], components: [r1, r2] });
						mainmsg2 = await interaction.fetchReply();

						const collectorpd2 = mainmsg2.createMessageComponentCollector({
							type: "SELECT_MENU",

							time: 300000
						});


						const collectorpd1 = mainmsg2.createMessageComponentCollector({
							type: "BUTTON",

							time: 300000
						});
						collectorpd1.on("collect", async (mainvemi) => {
							if (mainvemi.customId == 'spcbck') {
								collectorpd1.stop();
								collectorpd2.stop();
								const u1 = new MessageEmbed()
									.setTitle('Coco | Settings')
									.setColor('#36393F')
									.setDescription(`**Score Limits | Voice activity**\nSet the maximum number of points earned with this activity!\n\nThis limit applies to Voice activity, i.e. the amount of time that a server member spends in voice chat. The Voice activity reward only applies if the user is undeafened and unmuted, and only if at least two members are in the same voice channel.\n\nYou can make this reward dependent on how much more your server members chat in voice chat or text chat. For example, if only a few members hang out in voice chats but many more like to text, you may want to set a lower limit to give the texting members a better chance to catch up to the voice activity bonus.`)
									.addFields(
										{ name: 'Set Limit', value: `Set the maximum number of points that can be earned daily.\n\nCurrent value: ${voice_limit_value} points ${voice_limit_intstatus}` },
										{ name: 'Set Interval', value: 'Set the interval for which the score limit should be valid, and how quickly it resets.' },
										{ name: 'Remove Limit', value: 'Remove the score limit for voice games entirely.' },
										{ name: '◀️ Back', value: 'Go back one page.' },

									);
								const button54 = new MessageButton()
									.setCustomId('s_lim_voice')
									.setLabel('Set Limit')
									.setStyle('PRIMARY');
								const button55 = new MessageButton()
									.setCustomId('si_lim_voice')
									.setLabel('Set Interval')
									.setStyle('PRIMARY');
								const button56 = new MessageButton()
									.setCustomId('r_lim_voice')
									.setLabel('Remove limit')
									.setStyle('DANGER');
								const button57 = new MessageButton()
									.setCustomId('newbck')
									.setLabel('Back')
									.setStyle('SECONDARY')
									.setEmoji('◀️');

								const r1 = new MessageActionRow().addComponents(button54, button55);
								const r2 = new MessageActionRow().addComponents(button56);
								const r3 = new MessageActionRow().addComponents(button57);
								interaction.editReply({ content: '\u200B', embeds: [u1], components: [r1, r2, r3] });


							}
						});
						collectorpd2.on("collect", async (mainvemi2) => {
							if (mainvemi2.customId == 'select1') {
								collectorpd1.stop();
								collectorpd2.stop();
								if (mainvemi2.values[0] == 'first_option1') {
									voice_limit_interval = 1;
									voice_limit_intstatus = 'daily';
									voice();
								}
								if (mainvemi2.values[0] == 'second_option1') {
									voice_limit_interval = 7;
									voice_limit_intstatus = 'weekly';
									voice();
								}
								if (mainvemi2.values[0] == 'third_option1') {
									voice_limit_interval = 30;
									voice_limit_intstatus = 'monthly';
									voice();
								}
								const u1 = new MessageEmbed()
									.setTitle('Coco | Settings')
									.setColor('#36393F')
									.setDescription(`**Score Limits | Voice activity**\nSet the maximum number of points earned with this activity!\n\nThis limit applies to Voice activity, i.e. the amount of time that a server member spends in voice chat. The Voice activity reward only applies if the user is undeafened and unmuted, and only if at least two members are in the same voice channel.\n\nYou can make this reward dependent on how much more your server members chat in voice chat or text chat. For example, if only a few members hang out in voice chats but many more like to text, you may want to set a lower limit to give the texting members a better chance to catch up to the voice activity bonus.`)
									.addFields(
										{ name: 'Set Limit', value: `Set the maximum number of points that can be earned daily.\n\nCurrent value: ${voice_limit_value} points ${voice_limit_intstatus}` },
										{ name: 'Set Interval', value: 'Set the interval for which the score limit should be valid, and how quickly it resets.' },
										{ name: 'Remove Limit', value: 'Remove the score limit for voice games entirely.' },
										{ name: '◀️ Back', value: 'Go back one page.' },

									);
								const button54 = new MessageButton()
									.setCustomId('s_lim_voice')
									.setLabel('Set Limit')
									.setStyle('PRIMARY');
								const button55 = new MessageButton()
									.setCustomId('si_lim_voice')
									.setLabel('Set Interval')
									.setStyle('PRIMARY');
								const button56 = new MessageButton()
									.setCustomId('r_lim_voice')
									.setLabel('Remove limit')
									.setStyle('DANGER');
								const button57 = new MessageButton()
									.setCustomId('newbck')
									.setLabel('Back')
									.setStyle('SECONDARY')
									.setEmoji('◀️');

								const r1 = new MessageActionRow().addComponents(button54, button55);
								const r2 = new MessageActionRow().addComponents(button56);
								const r3 = new MessageActionRow().addComponents(button57);
								interaction.editReply({ content: '\u200B', embeds: [u1], components: [r1, r2, r3] });
							}

						});
						collectorpd2.on("end", (collected, reason) => {


						});
						collectorpd1.on("end", (collected, reason) => {


						});

					}
					///////////////////////////////////////////////////////////////voice yes remove////////////////////////////////////////////////////////////////////////////////////////////////////
					if (vemi.customId == 'voice_yes') {
						voice_limit = 0;
						collectorud1.stop();
						collectorud2.stop();

						//vemi.deferUpdate();
						if (ldb == 0) {
							const setembed1 = new MessageEmbed()

								.setTitle('Coco | Settings')
								.setColor('#36393F')
								.addFields(
									{ name: 'Scoreboard', value: 'Create, edit or delete the live updating scoreboard from here.\n\nThere is no live scoreboard on this server. You can set one up here!' },
									{ name: 'Edit Score Limits', value: 'Change how many points each server member can gain with an activity each day, week or month.' },
									{ name: 'Change Decay', value: `Change how fast server members lose points due to inactivity.\n\nCurrent value: ${decayval} % / week` },
									{ name: 'Set Up', value: 'Sets up a new live updating scoreboard. Coco will create a new channel on your server that only contains the scoreboard.\nFor this command to work properly, ensure that Coco has the "Manage Channels" permission.' },
									{ name: '◀️ Back', value: 'Go back one page.' },

								);
							const buttonset1a = new MessageButton()
								.setCustomId('esl')
								.setLabel('Edit Score Limits')
								.setStyle('PRIMARY');
							const buttonset2a = new MessageButton()
								.setCustomId('cd')
								.setLabel('Change Decay')
								.setStyle('PRIMARY');
							const buttonset3a = new MessageButton()
								.setCustomId('seup')
								.setLabel('Set Up')
								.setStyle('SUCCESS');
							const buttonset1b = new MessageButton()
								.setCustomId('bck')
								.setLabel('Back')
								.setStyle('SECONDARY')
								.setEmoji('◀️');

							const r1 = new MessageActionRow().addComponents(buttonset1a, buttonset2a);
							const r2 = new MessageActionRow().addComponents(buttonset3a);
							const r3 = new MessageActionRow().addComponents(buttonset1b);
							interaction.editReply({ content: '\u200B', embeds: [setembed1], components: [r1, r2, r3] });
						}
						else {
							if (srlstatus == 0) {
								srlmsg = '🔴 Off';
							} else {
								srlmsg = '🟢 On';
							}
							const setembed1 = new MessageEmbed()

								.setTitle('Coco | Settings')
								.setColor('#36393F')
								.addFields(
									{ name: 'Scoreboard', value: 'Create, edit or delete the live updating scoreboard from here.\n\nThere is no live scoreboard on this server. You can set one up here!' },
									{ name: 'Edit Score Limits', value: 'Change how many points each server member can gain with an activity each day, week or month.' },
									{ name: 'Change Decay', value: `Change how fast server members lose points due to inactivity.\n\nCurrent value: ${decayval} % / week` },
									{ name: 'Change Size', value: `Change how many server members should be visible on the scoreboard.\n\nCurrent value: ${chsize} members` },
									{ name: 'Show Rank List', value: `Set whether the ranks are listed at the bottom of the scoreboard together with their minimum scores.\n\nCurrent state:  ${srlmsg}` },
									{ name: 'Remove', value: 'Removes the live updating scoreboard channel.' },
									{ name: '◀️ Back', value: 'Go back one page.' },

								);
							const buttonset1a = new MessageButton()
								.setCustomId('esl')
								.setLabel('Edit Score Limits')
								.setStyle('PRIMARY');
							const buttonset2a = new MessageButton()
								.setCustomId('cd')
								.setLabel('Change Decay')
								.setStyle('PRIMARY');
							const buttonset3a = new MessageButton()
								.setCustomId('csz')
								.setLabel('Change Size')
								.setStyle('PRIMARY');
							const buttonset3b = new MessageButton()
								.setCustomId('srl')
								.setLabel('Show Rank List')
								.setStyle('PRIMARY');
							const buttonset3c = new MessageButton()
								.setCustomId('rmv')
								.setLabel('Remove')
								.setStyle('DANGER');
							const buttonset1b = new MessageButton()
								.setCustomId('bck')
								.setLabel('Back')
								.setStyle('SECONDARY')
								.setEmoji('◀️');

							const r1 = new MessageActionRow().addComponents(buttonset1a, buttonset2a);
							const r2 = new MessageActionRow().addComponents(buttonset3a, buttonset3b);
							const r25 = new MessageActionRow().addComponents(buttonset3c);
							const r3 = new MessageActionRow().addComponents(buttonset1b);
							interaction.editReply({ content: '\u200B', embeds: [setembed1], components: [r1, r2, r25, r3] });


						}


					}
					//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
					if (vemi.customId == 'newbck') {
						collectorud1.stop();
						collectorud2.stop();

						//vemi.deferUpdate();
						if (ldb == 0) {
							const setembed1 = new MessageEmbed()

								.setTitle('Coco | Settings')
								.setColor('#36393F')
								.addFields(
									{ name: 'Scoreboard', value: 'Create, edit or delete the live updating scoreboard from here.\n\nThere is no live scoreboard on this server. You can set one up here!' },
									{ name: 'Edit Score Limits', value: 'Change how many points each server member can gain with an activity each day, week or month.' },
									{ name: 'Change Decay', value: `Change how fast server members lose points due to inactivity.\n\nCurrent value: ${decayval} % / week` },
									{ name: 'Set Up', value: 'Sets up a new live updating scoreboard. Coco will create a new channel on your server that only contains the scoreboard.\nFor this command to work properly, ensure that Coco has the "Manage Channels" permission.' },
									{ name: '◀️ Back', value: 'Go back one page.' },

								);
							const buttonset1a = new MessageButton()
								.setCustomId('esl')
								.setLabel('Edit Score Limits')
								.setStyle('PRIMARY');
							const buttonset2a = new MessageButton()
								.setCustomId('cd')
								.setLabel('Change Decay')
								.setStyle('PRIMARY');
							const buttonset3a = new MessageButton()
								.setCustomId('seup')
								.setLabel('Set Up')
								.setStyle('SUCCESS');
							const buttonset1b = new MessageButton()
								.setCustomId('bck')
								.setLabel('Back')
								.setStyle('SECONDARY')
								.setEmoji('◀️');

							const r1 = new MessageActionRow().addComponents(buttonset1a, buttonset2a);
							const r2 = new MessageActionRow().addComponents(buttonset3a);
							const r3 = new MessageActionRow().addComponents(buttonset1b);
							interaction.editReply({ content: '\u200B', embeds: [setembed1], components: [r1, r2, r3] });
						}
						else {
							if (srlstatus == 0) {
								srlmsg = '🔴 Off';
							} else {
								srlmsg = '🟢 On';
							}
							const setembed1 = new MessageEmbed()

								.setTitle('Coco | Settings')
								.setColor('#36393F')
								.addFields(
									{ name: 'Scoreboard', value: 'Create, edit or delete the live updating scoreboard from here.\n\nThere is no live scoreboard on this server. You can set one up here!' },
									{ name: 'Edit Score Limits', value: 'Change how many points each server member can gain with an activity each day, week or month.' },
									{ name: 'Change Decay', value: `Change how fast server members lose points due to inactivity.\n\nCurrent value: ${decayval} % / week` },
									{ name: 'Change Size', value: `Change how many server members should be visible on the scoreboard.\n\nCurrent value: ${chsize} members` },
									{ name: 'Show Rank List', value: `Set whether the ranks are listed at the bottom of the scoreboard together with their minimum scores.\n\nCurrent state:  ${srlmsg}` },
									{ name: 'Remove', value: 'Removes the live updating scoreboard channel.' },
									{ name: '◀️ Back', value: 'Go back one page.' },

								);
							const buttonset1a = new MessageButton()
								.setCustomId('esl')
								.setLabel('Edit Score Limits')
								.setStyle('PRIMARY');
							const buttonset2a = new MessageButton()
								.setCustomId('cd')
								.setLabel('Change Decay')
								.setStyle('PRIMARY');
							const buttonset3a = new MessageButton()
								.setCustomId('csz')
								.setLabel('Change Size')
								.setStyle('PRIMARY');
							const buttonset3b = new MessageButton()
								.setCustomId('srl')
								.setLabel('Show Rank List')
								.setStyle('PRIMARY');
							const buttonset3c = new MessageButton()
								.setCustomId('rmv')
								.setLabel('Remove')
								.setStyle('DANGER');
							const buttonset1b = new MessageButton()
								.setCustomId('bck')
								.setLabel('Back')
								.setStyle('SECONDARY')
								.setEmoji('◀️');

							const r1 = new MessageActionRow().addComponents(buttonset1a, buttonset2a);
							const r2 = new MessageActionRow().addComponents(buttonset3a, buttonset3b);
							const r25 = new MessageActionRow().addComponents(buttonset3c);
							const r3 = new MessageActionRow().addComponents(buttonset1b);
							interaction.editReply({ content: '\u200B', embeds: [setembed1], components: [r1, r2, r25, r3] });

						}
					}


				})
				collectorud1.on("end", (collected, reason) => {

				});


				collectorud2.on("collect", async (uemi) => {
					uemi.deferUpdate();
					if (uemi.customId == 'select') {
						if (uemi.values[0] == 'first_option') {
							if (solo_limit == 0) {
								const u1 = new MessageEmbed()
									.setTitle('Coco | Settings')
									.setColor('#36393F')
									.setDescription(`**Score Limits | Solo games**\nSet the maximum number of points earned with this activity!\n\nThis limit applies to Solo games, i.e. games that a server member can play in a text channel on your server, but doesn't directly involve another player (unless they are trying to get a better score than someone else).\n\nYou can set this limit fairly low, as it doesn't generate as much social activity for your server as the other activity rewards.`)
									.addFields(
										{ name: 'Create Limit', value: 'With a score limit you can decide how many points a user can earn per day, week or month with Solo games.' },
										{ name: '◀️ Back', value: 'Go back one page.' },

									);
								const button56 = new MessageButton()
									.setCustomId('cr_lim_solo')
									.setLabel('Create Limit')
									.setStyle('SUCCESS');
								const button57 = new MessageButton()
									.setCustomId('newbck')
									.setLabel('Back')
									.setStyle('SECONDARY')
									.setEmoji('◀️');

								const r2 = new MessageActionRow().addComponents(button56, button57);
								interaction.editReply({ content: '\u200B', embeds: [u1], components: [r2] });
							} else if (solo_limit == 1) {
								const u1 = new MessageEmbed()
									.setTitle('Coco | Settings')
									.setColor('#36393F')
									.setDescription(`**Score Limits | Solo games**\nSet the maximum number of points earned with this activity!\n\nThis limit applies to Solo games, i.e. games that a server member can play in a text channel on your server, but doesn't directly involve another player (unless they are trying to get a better score than someone else).\n\nYou can set this limit fairly low, as it doesn't generate as much social activity for your server as the other activity rewards.`)
									.addFields(
										{ name: 'Set Limit', value: `Set the maximum number of points that can be earned daily.\n\nCurrent value: ${solo_limit_value} points ${solo_limit_intstatus}` },
										{ name: 'Set Interval', value: 'Set the interval for which the score limit should be valid, and how quickly it resets.' },
										{ name: 'Remove Limit', value: 'Remove the score limit for Solo games entirely.' },
										{ name: '◀️ Back', value: 'Go back one page.' },

									);
								const button54 = new MessageButton()
									.setCustomId('s_lim_solo')
									.setLabel('Set Limit')
									.setStyle('PRIMARY');
								const button55 = new MessageButton()
									.setCustomId('si_lim_solo')
									.setLabel('Set Interval')
									.setStyle('PRIMARY');
								const button56 = new MessageButton()
									.setCustomId('r_lim_solo')
									.setLabel('Remove limit')
									.setStyle('DANGER');
								const button57 = new MessageButton()
									.setCustomId('newbck')
									.setLabel('Back')
									.setStyle('SECONDARY')
									.setEmoji('◀️');

								const r1 = new MessageActionRow().addComponents(button54, button55);
								const r2 = new MessageActionRow().addComponents(button56);
								const r3 = new MessageActionRow().addComponents(button57);
								interaction.editReply({ content: '\u200B', embeds: [u1], components: [r1, r2, r3] });
							}

						}
						if (uemi.values[0] == 'second_option') {
							////////////////////////////////////////to be put under select value collector////////////////////////////////////////////////////////////////////////////////////////
							if (party_limit == 0) {
								const u1 = new MessageEmbed()
									.setTitle('Coco | Settings')
									.setColor('#36393F')
									.setDescription(`**Score Limits | Party games**\n\nSet the maximum number of points earned with this activity!\n\nThis limit applies to Social/Party games, i.e. games where multiple server members are directly interacting and playing a game together. UNO, Connect 4 and Rock, Paper, Scissors fall under this category, for example.\n\nYou should probably keep this limit a bit higher, as it provides a good incentive to engage in social games with other people on your server.`)
									.addFields(
										{ name: 'Create Limit', value: 'With a score limit you can decide how many points a user can earn per day, week or month with Party games.' },
										{ name: '◀️ Back', value: 'Go back one page.' },

									);
								const button56 = new MessageButton()
									.setCustomId('cr_lim_party')
									.setLabel('Create Limit')
									.setStyle('SUCCESS');
								const button57 = new MessageButton()
									.setCustomId('newbck')
									.setLabel('Back')
									.setStyle('SECONDARY')
									.setEmoji('◀️');

								const r2 = new MessageActionRow().addComponents(button56, button57);
								interaction.editReply({ content: '\u200B', embeds: [u1], components: [r2] });
							} else if (party_limit == 1) {
								const u1 = new MessageEmbed()
									.setTitle('Coco | Settings')
									.setColor('#36393F')
									.setDescription(`**Score Limits | Party games**\n\nSet the maximum number of points earned with this activity!\n\nThis limit applies to Social/Party games, i.e. games where multiple server members are directly interacting and playing a game together. UNO, Connect 4 and Rock, Paper, Scissors fall under this category, for example.\n\nYou should probably keep this limit a bit higher, as it provides a good incentive to engage in social games with other people on your server.`)
									.addFields(
										{ name: 'Set Limit', value: `Set the maximum number of points that can be earned daily.\n\nCurrent value: ${party_limit_value} points ${party_limit_intstatus}` },
										{ name: 'Set Interval', value: 'Set the interval for which the score limit should be valid, and how quickly it resets.' },
										{ name: 'Remove Limit', value: 'Remove the score limit for Party games entirely.' },
										{ name: '◀️ Back', value: 'Go back one page.' },

									);
								const button54 = new MessageButton()
									.setCustomId('s_lim_party')
									.setLabel('Set Limit')
									.setStyle('PRIMARY');
								const button55 = new MessageButton()
									.setCustomId('si_lim_party')
									.setLabel('Set Interval')
									.setStyle('PRIMARY');
								const button56 = new MessageButton()
									.setCustomId('r_lim_party')
									.setLabel('Remove limit')
									.setStyle('DANGER');
								const button57 = new MessageButton()
									.setCustomId('newbck')
									.setLabel('Back')
									.setStyle('SECONDARY')
									.setEmoji('◀️');

								const r1 = new MessageActionRow().addComponents(button54, button55);
								const r2 = new MessageActionRow().addComponents(button56);
								const r3 = new MessageActionRow().addComponents(button57);
								interaction.editReply({ content: '\u200B', embeds: [u1], components: [r1, r2, r3] });
							}

						}
						if (uemi.values[0] == 'third_option') {
							if (chat_limit == 0) {
								const u1 = new MessageEmbed()
									.setTitle('Coco | Settings')
									.setColor('#36393F')
									.setDescription(`**Score Limits | Chat activity**\nSet the maximum number of points earned with this activity!\n\nThis limit applies to Chat activity, i.e. messages sent in a text channel on your server. Coco has a few built-in anti-spam rules and a one-minute cooldown between messages, so that excessive spamming is not rewarded with points.\n\n:warning: It is recommended to keep this limit disabled, as any upper limit on chat activity can be discouraging to members who are actively participating on your server and aren't being rewarded for it.`)
									.addFields(
										{ name: 'Create Limit', value: 'With a score limit you can decide how many points a user can earn per day, week or month with Chat activity.' },
										{ name: '◀️ Back', value: 'Go back one page.' },

									);
								const button56 = new MessageButton()
									.setCustomId('cr_lim_chat')
									.setLabel('Create Limit')
									.setStyle('SUCCESS');
								const button57 = new MessageButton()
									.setCustomId('newbck')
									.setLabel('Back')
									.setStyle('SECONDARY')
									.setEmoji('◀️');

								const r2 = new MessageActionRow().addComponents(button56, button57);
								interaction.editReply({ content: '\u200B', embeds: [u1], components: [r2] });
							} else if (chat_limit == 1) {
								const u1 = new MessageEmbed()
									.setTitle('Coco | Settings')
									.setColor('#36393F')
									.setDescription(`**Score Limits | Chat activity**\nSet the maximum number of points earned with this activity!\n\nThis limit applies to Chat activity, i.e. messages sent in a text channel on your server. Coco has a few built-in anti-spam rules and a one-minute cooldown between messages, so that excessive spamming is not rewarded with points.\n\n:warning: It is recommended to keep this limit disabled, as any upper limit on chat activity can be discouraging to members who are actively participating on your server and aren't being rewarded for it.\nCurrent value: ${chat_limit_value} points ${chat_limit_intstatus}`)
									.addFields(
										{ name: 'Set Limit', value: `Set the maximum number of points that can be earned daily.\n\nCurrent value: ${chat_limit_value} points ${chat_limit_intstatus}` },
										{ name: 'Set Interval', value: 'Set the interval for which the score limit should be valid, and how quickly it resets.' },
										{ name: 'Remove Limit', value: 'Remove the score limit for Chat activity entirely.' },
										{ name: '◀️ Back', value: 'Go back one page.' },

									);
								const button54 = new MessageButton()
									.setCustomId('s_lim_chat')
									.setLabel('Set Limit')
									.setStyle('PRIMARY');
								const button55 = new MessageButton()
									.setCustomId('si_lim_chat')
									.setLabel('Set Interval')
									.setStyle('PRIMARY');
								const button56 = new MessageButton()
									.setCustomId('r_lim_chat')
									.setLabel('Remove limit')
									.setStyle('DANGER');
								const button57 = new MessageButton()
									.setCustomId('newbck')
									.setLabel('Back')
									.setStyle('SECONDARY')
									.setEmoji('◀️');

								const r1 = new MessageActionRow().addComponents(button54, button55);
								const r2 = new MessageActionRow().addComponents(button56);
								const r3 = new MessageActionRow().addComponents(button57);
								interaction.editReply({ content: '\u200B', embeds: [u1], components: [r1, r2, r3] });
							}
						}
						if (uemi.values[0] == 'fourth_option') {
							////////////////////////////////////////to be put under select value collector////////////////////////////////////////////////////////////////////////////////////////
							if (voice_limit == 0) {
								const u1 = new MessageEmbed()
									.setTitle('Coco | Settings')
									.setColor('#36393F')
									.setDescription(`**Score Limits | Voice activity**\nSet the maximum number of points earned with this activity!\n\nThis limit applies to Voice activity, i.e. the amount of time that a server member spends in voice chat. The Voice activity reward only applies if the user is undeafened and unmuted, and only if at least two members are in the same voice channel.\n\nYou can make this reward dependent on how much more your server members chat in voice chat or text chat. For example, if only a few members hang out in voice chats but many more like to text, you may want to set a lower limit to give the texting members a better chance to catch up to the voice activity bonus.`)
									.addFields(
										{ name: 'Create Limit', value: 'With a score limit you can decide how many points a user can earn per day, week or month with voice games.' },
										{ name: '◀️ Back', value: 'Go back one page.' },

									);
								const button56 = new MessageButton()
									.setCustomId('cr_lim_voice')
									.setLabel('Create Limit')
									.setStyle('SUCCESS');
								const button57 = new MessageButton()
									.setCustomId('newbck')
									.setLabel('Back')
									.setStyle('SECONDARY')
									.setEmoji('◀️');

								const r2 = new MessageActionRow().addComponents(button56, button57);
								interaction.editReply({ content: '\u200B', embeds: [u1], components: [r2] });
							} else if (voice_limit == 1) {
								const u1 = new MessageEmbed()
									.setTitle('Coco | Settings')
									.setColor('#36393F')
									.setDescription(`**Score Limits | Voice activity**\nSet the maximum number of points earned with this activity!\n\nThis limit applies to Voice activity, i.e. the amount of time that a server member spends in voice chat. The Voice activity reward only applies if the user is undeafened and unmuted, and only if at least two members are in the same voice channel.\n\nYou can make this reward dependent on how much more your server members chat in voice chat or text chat. For example, if only a few members hang out in voice chats but many more like to text, you may want to set a lower limit to give the texting members a better chance to catch up to the voice activity bonus.`)
									.addFields(
										{ name: 'Set Limit', value: `Set the maximum number of points that can be earned daily.\n\nCurrent value: ${voice_limit_value} points ${voice_limit_intstatus}` },
										{ name: 'Set Interval', value: 'Set the interval for which the score limit should be valid, and how quickly it resets.' },
										{ name: 'Remove Limit', value: 'Remove the score limit for voice games entirely.' },
										{ name: '◀️ Back', value: 'Go back one page.' },

									);
								const button54 = new MessageButton()
									.setCustomId('s_lim_voice')
									.setLabel('Set Limit')
									.setStyle('PRIMARY');
								const button55 = new MessageButton()
									.setCustomId('si_lim_voice')
									.setLabel('Set Interval')
									.setStyle('PRIMARY');
								const button56 = new MessageButton()
									.setCustomId('r_lim_voice')
									.setLabel('Remove limit')
									.setStyle('DANGER');
								const button57 = new MessageButton()
									.setCustomId('newbck')
									.setLabel('Back')
									.setStyle('SECONDARY')
									.setEmoji('◀️');

								const r1 = new MessageActionRow().addComponents(button54, button55);
								const r2 = new MessageActionRow().addComponents(button56);
								const r3 = new MessageActionRow().addComponents(button57);
								interaction.editReply({ content: '\u200B', embeds: [u1], components: [r1, r2, r3] });
							}
						}
					}
				})


				collectorud2.on("end", (collected, reason) => {

				});

			}
			////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

			///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

		});
		collectorud.on("end", (collected, reason) => {
			interaction.editReply({ content: 'gg', embeds: [], components: [], ephemeral: false });

		});
	}
	//leaderboard();
	tropi = [];
	tropi[0] = '<a:FirstPlaceTrophy:901949111530553345>';
	tropi[1] = '<a:SecondPlaceTrophy:901949111694151710>';
	tropi[2] = '<a:3rdPlaceTrophy:901949111346020363>';



	async function chdelete() {

		hannel = await client.channels.cache.get(`${chid}`);

		await hannel.delete();
	}
	const alluphi = await Tags.findAll();
	alluphi.forEach(b => {
		now1 = b.get('lastused');
		now2 = new Date() - now1;
		b.update({ 'ladifference': now2 })
		/////total///////////////////////////////////////////////////////////////////
		act1 = b.get('activity');
		act2 = b.get('sologamescore');
		act3 = b.get('partygamescore');
		act4 = b.get('voicescore');
		act6 = b.get('inactivity');
		act5 = (act1 + act2 + act3 + act4) - act6;
		/////////////////decay inactivity////////////////////////////////////////////
		now3 = b.get('ladifference');
		now1ind = ((((now3 / 1000) / 60) / 60) / 24);
		if (now1ind >= 7) {
			inact1 = (decayval / 100) * act5
			b.update({ 'inactivity': inact1 });
		}
		/////total///////////////////////////////////////////////////////////////////
		act1 = b.get('activity');
		act2 = b.get('sologamescore');
		act3 = b.get('partygamescore');
		act4 = b.get('voicescore');
		act6 = b.get('inactivity');
		act5 = (act1 + act2 + act3 + act4) - act6;

		b.update({ 'total': act5 });
	});
	if (commandName === 'score') {
		const mag = await Tags.findOne({ where: { id: interaction.user.id } });




		if (mag) {
			const allup2 = await Ranks.findAll();
			solo4sb = mag.get('sologamescore');
			party4sb = mag.get('partygamescore');
			activity4sb = mag.get('activity');
			voice4sb = mag.get('voicescore');
			total4sb = mag.get('total');
			inactivity4sb = mag.get('inactivity');
			game4sb = solo4sb + party4sb;
			tactive4sb = activity4sb + voice4sb;
			allup2.sort((a, b) => a.points - b.points)
				.map(user => {
					if (total4sb >= user.points) {
						return rank4sb = user.name;

					}
				})
				.join('\n');





			scoreborde = new MessageEmbed()
				.setTitle(`<a:Trophy:901950137914519574> ${interaction.user.username}  Score: ${total4sb} points`)
				.setColor('#36393F')
				.addFields(
					{ name: `<a:Award1:901950137683832904> Your Rank: ${rank4sb}`, value: '▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬' },
					{ name: '<a:peepoGamer:873429403596636231> Coco Arcade Games', value: `${interaction.user.username} has earned ${game4sb} points playing in the arcade!` },
					{ name: '<a:BunnyParty:901944552317919232> Solo', value: `${solo4sb} points`, inline: true },
					{ name: '<a:BirdParty:901944551890104400> Party/Social', value: `${party4sb} points`, inline: true },
					{ name: '\u200B', value: '▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬' },
					{ name: `<a:Money:897420259903025153> Payments`, value: '0 points exchanged using the /pay command' },
					{ name: '<a:BearMail:886730331942682694> Received', value: '0 points', inline: true },
					{ name: '<a:Hanging:886723582032506960> Sent', value: `0 points`, inline: true },
					{ name: '\u200B', value: '▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬' },
					{ name: `<a:Holla:886730332055961631> Server Activity`, value: `${tactive4sb} points earned for sending messages and joining voice chats` },
					{ name: '<:Message:891104566685347881> Messages', value: `${activity4sb} points`, inline: true },
					{ name: '<:VoiceChat:891103809189863444> Voice Chat', value: `${voice4sb} points`, inline: true },
					{ name: '\u200B', value: '▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬' },
					{ name: `<a:CuteNo:887371032447557632> Decay`, value: `-${inactivity4sb} points lost due to inactivity over time` },

				);
		} else {
			scoreborde = new MessageEmbed()
				.setTitle('You are removed from the leaderboard')
				.setColor('#36393F')
				.setDescription('!!!');

		}

		interaction.reply({ content: '\u200B', embeds: [scoreborde] })
	}

});


async function leaderboard() {
	

	if (ldb != 0) {
		i9 = new Date() - 0;
		const allup1 = await Tags.findAll();
		const allup2 = await Ranks.findAll();
		if (srlstatus == 0) {
			leaderembed = new MessageEmbed()
				.setTitle(`<a:Trophy:901950137914519574>Coco Arcade Scoreboard | TOP ${chsize}!`)
				.setColor('#36393F')
				.setDescription(`**Last Updated** ${time(new Date(), 'd')}\n\n` + allup1.sort((a, b) => b.total - a.total)
					.filter(user => client.users.cache.has(user.id))
					.slice(0, chsize)
					.map((user, position) => `${position > 2 ? '<a:Award1:901950137683832904>' : tropi[position]}**${position + 1}. ${(user.username)}**— ${user.total} points`)
					.join('\n'))

		} else if (srlstatus == 1) {
			leaderembed = new MessageEmbed()
				.setTitle(`<a:Trophy:901950137914519574>Coco Arcade Scoreboard | TOP ${chsize}!`)
				.setColor('#36393F')
				.setDescription(`**Last Updated** ${time(new Date(), 'd')}\n\n` + allup1.sort((a, b) => b.total - a.total)
					.filter(user => client.users.cache.has(user.id))
					.slice(0, chsize)
					.map((user, position) => `${position > 2 ? '<a:Award1:901950137683832904>' : tropi[position]}**${position + 1}. ${(user.username)}**— ${user.total} points`)
					.join('\n') + '\u200B\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬' + '<a:Megaaward:901950138078097409> **Ranks**' + allup2.sort((a, b) => b.points - a.points)
						.map(user => `🔹 **${user.name}**${user.role==null? '(no role linked)': `<@&${user.role}>`}\n**${user.points}** points`)
						.join('\n'))

		}
		mastermind.edit({
			content: '\u200B', embeds: [leaderembed]

		});
	}
}

async function chat() {
	clearInterval(chat_nIntervId1);
	chat_nIntervId1 = null;
	clearInterval(chat_nIntervId2);
	chat_nIntervId2 = null;
	clearInterval(chat_nIntervId3);
	chat_nIntervId3 = null;
	//setchatwlim 0////
	///////////////////
	clearTimeout(chat_timeout1);
	chat_timeout1 = null;
	clearTimeout(chat_timeout2);
	chat_timeout2 = null;
	clearTimeout(chat_timeout3);
	chat_timeout3 = null;
	const allup = await Tags.findAll();
	allup.forEach(b => {

		b.update({ 'activitywlim': 0 });
	})
	if (chat_limit_interval == 1) {
		var chat_now = new Date();
		var chat_millisTill10 = new Date(chat_now.getFullYear(), chat_now.getMonth(), chat_now.getDate(), 0, 0, 0, 0) - chat_now;
		/*var sow = new Date();
		var millisTill101 = new Date(sow.getFullYear(), sow.getMonth(), sow.getDay(), 0, 0, 0, 0) - sow;*/

		if (chat_millisTill10 < 0) {
			chat_millisTill10 += 86400000; // it's after 10am, try 10am tomorrow.
			console.log('mst' + chat_millisTill10);
		}
		chat_timeout1 = setTimeout(chat_mainf, chat_millisTill10);
		async function chat_mainf() {
			clearInterval(chat_nIntervId1);
			// release our intervalID from the variable
			chat_nIntervId1 = null;
			chat_nIntervId1 = setInterval(chat_mainf, 86400000);
			const allup = await Tags.findAll();
			allup.forEach(b => {

				b.update({ 'activitywlim': 0 });
			})
			//console.log('you can do it');
		}


	} else if (chat_limit_interval == 7) {
		var chat_sow = new Date();
		var chat_millisTill101 = new Date(chat_sow.getFullYear(), chat_sow.getMonth(), chat_sow.getDay(), 0, 0, 0, 0) - chat_sow;
		let chat_day = chat_sow.getDay();

		//console.log(chat_day);
		chat_millisTill101 = (chat_millisTill101 - chat_day * 86400000) + 86400000;
		if (chat_millisTill101 < 0) {
			for (chat_pol = 0; chat_pol <= 6; chat_pol++) {
				if (chat_millisTill101 > 0) {
					break;
				}
				chat_millisTill101 += 604800000; // every monday
			}

		}

		//console.log(millisTill10);
		//console.log(chat_millisTill101);
		setTimeout(chat_mainf2, chat_millisTill101);
		async function chat_mainf2() {
			clearInterval(chat_nIntervId2);
			// release our intervalID from the variable
			chat_nIntervId2 = null;
			chat_nIntervId2 = setInterval(chat_mainf2, 604800000);
			const allup = await Tags.findAll();
			allup.forEach(b => {

				b.update({ 'activitywlim': 0 });
			})
			//console.log('you can do it');
		}
	} else if (chat_limit_interval == 30) {
		var chat_kow = new Date()
		chat_mon = chat_kow.getMonth() + 1;
		chat_yea = chat_kow.getFullYear();
		if (chat_kow.getMonth() == 12) {
			chat_mon = 1;
			chat_yea = chat_yea + 1;
		}
		var chat_millisTill102 = new Date(chat_yea, chat_mon, 1, 0, 0, 0, 0) - chat_kow;



		//console.log(millisTill10);
		console.log(chat_millisTill102);
		setTimeout(chat_mainf3, chat_millisTill102);
		async function chat_mainf3() {
			clearInterval(chat_nIntervId3);
			// release our intervalID from the variable
			chat_nIntervId3 = null;
			var chat_kow = new Date()
			chat_mon = chat_kow.getMonth() + 1;
			chat_yea = chat_kow.getFullYear();
			if (chat_kow.getMonth() == 12) {
				chat_mon = 1;
				chat_yea = yea + 1;
			}
			var chat_millisTill102 = new Date(chat_yea, chat_mon, 1, 0, 0, 0, 0) - chat_kow;
			chat_nIntervId3 = setInterval(chat_mainf3, chat_millisTill102);
			const allup = await Tags.findAll();
			allup.forEach(b => {

				b.update({ 'activitywlim': 0 });
			})
			//console.log('you can do it');
		}

	}


}
async function solo() {
	clearInterval(solo_nIntervId1);
	solo_nIntervId1 = null;
	clearInterval(solo_nIntervId2);
	solo_nIntervId2 = null;
	clearInterval(solo_nIntervId3);
	solo_nIntervId3 = null;
	//setsolowlim 0////
	///////////////////
	clearTimeout(solo_timeout1);
	solo_timeout1 = null;
	clearTimeout(solo_timeout2);
	solo_timeout2 = null;
	clearTimeout(solo_timeout3);
	solo_timeout3 = null;
	const allup = await Tags.findAll();
	allup.forEach(b => {

		b.update({ 'sologamescorewlim': 0 });
	})
	if (solo_limit_interval == 1) {
		var solo_now = new Date();
		var solo_millisTill10 = new Date(solo_now.getFullYear(), solo_now.getMonth(), solo_now.getDate(), 0, 0, 0, 0) - solo_now;
		/*var sow = new Date();
		var millisTill101 = new Date(sow.getFullYear(), sow.getMonth(), sow.getDay(), 0, 0, 0, 0) - sow;*/

		if (solo_millisTill10 < 0) {
			solo_millisTill10 += 86400000; // it's after 10am, try 10am tomorrow.
			console.log('mst' + solo_millisTill10);
		}
		solo_timeout1 = setTimeout(solo_mainf, solo_millisTill10);
		async function solo_mainf() {
			clearInterval(solo_nIntervId1);
			// release our intervalID from the variable
			solo_nIntervId1 = null;
			solo_nIntervId1 = setInterval(solo_mainf, 86400000);
			const allup = await Tags.findAll();
			allup.forEach(b => {

				b.update({ 'sologamescorewlim': 0 });
			})
			//console.log('you can do it');
		}


	} else if (solo_limit_interval == 7) {
		var solo_sow = new Date();
		var solo_millisTill101 = new Date(solo_sow.getFullYear(), solo_sow.getMonth(), solo_sow.getDay(), 0, 0, 0, 0) - solo_sow;
		let solo_day = solo_sow.getDay();

		//console.log(solo_day);
		solo_millisTill101 = (solo_millisTill101 - solo_day * 86400000) + 86400000;
		if (solo_millisTill101 < 0) {
			for (solo_pol = 0; solo_pol <= 6; solo_pol++) {
				if (solo_millisTill101 > 0) {
					break;
				}
				solo_millisTill101 += 604800000; // every monday
			}

		}

		//console.log(millisTill10);
		//console.log(solo_millisTill101);
		setTimeout(solo_mainf2, solo_millisTill101);
		async function solo_mainf2() {
			clearInterval(solo_nIntervId2);
			// release our intervalID from the variable
			solo_nIntervId2 = null;
			solo_nIntervId2 = setInterval(solo_mainf2, 604800000);
			const allup = await Tags.findAll();
			allup.forEach(b => {

				b.update({ 'sologamescorewlim': 0 });
			})
			//console.log('you can do it');
		}
	} else if (solo_limit_interval == 30) {
		var solo_kow = new Date()
		solo_mon = solo_kow.getMonth() + 1;
		solo_yea = solo_kow.getFullYear();
		if (solo_kow.getMonth() == 12) {
			solo_mon = 1;
			solo_yea = solo_yea + 1;
		}
		var solo_millisTill102 = new Date(solo_yea, solo_mon, 1, 0, 0, 0, 0) - solo_kow;



		//console.log(millisTill10);
		console.log(solo_millisTill102);
		setTimeout(solo_mainf3, solo_millisTill102);
		async function solo_mainf3() {
			clearInterval(solo_nIntervId3);
			// release our intervalID from the variable
			solo_nIntervId3 = null;
			var solo_kow = new Date()
			solo_mon = solo_kow.getMonth() + 1;
			solo_yea = solo_kow.getFullYear();
			if (solo_kow.getMonth() == 12) {
				solo_mon = 1;
				solo_yea = yea + 1;
			}
			var solo_millisTill102 = new Date(solo_yea, solo_mon, 1, 0, 0, 0, 0) - solo_kow;
			solo_nIntervId3 = setInterval(solo_mainf3, solo_millisTill102);
			const allup = await Tags.findAll();
			allup.forEach(b => {

				b.update({ 'sologamescorewlim': 0 });
			})
			//console.log('you can do it');
		}

	}


}
async function party() {
	clearInterval(party_nIntervId1);
	party_nIntervId1 = null;
	clearInterval(party_nIntervId2);
	party_nIntervId2 = null;
	clearInterval(party_nIntervId3);
	party_nIntervId3 = null;
	//setpartywlim 0////
	///////////////////
	clearTimeout(party_timeout1);
	party_timeout1 = null;
	clearTimeout(party_timeout2);
	party_timeout2 = null;
	clearTimeout(party_timeout3);
	party_timeout3 = null;
	const allup = await Tags.findAll();
	allup.forEach(b => {

		b.update({ 'partygamescorewlim': 0 });
	})
	if (party_limit_interval == 1) {
		var party_now = new Date();
		var party_millisTill10 = new Date(party_now.getFullYear(), party_now.getMonth(), party_now.getDate(), 0, 0, 0, 0) - party_now;
		/*var sow = new Date();
		var millisTill101 = new Date(sow.getFullYear(), sow.getMonth(), sow.getDay(), 0, 0, 0, 0) - sow;*/

		if (party_millisTill10 < 0) {
			party_millisTill10 += 86400000; // it's after 10am, try 10am tomorrow.
			console.log('mst' + party_millisTill10);
		}
		party_timeout1 = setTimeout(party_mainf, party_millisTill10);
		async function party_mainf() {
			clearInterval(party_nIntervId1);
			// release our intervalID from the variable
			party_nIntervId1 = null;
			party_nIntervId1 = setInterval(party_mainf, 86400000);
			const allup = await Tags.findAll();
			allup.forEach(b => {

				b.update({ 'partygamescorewlim': 0 });
			})
			//console.log('you can do it');
		}


	} else if (party_limit_interval == 7) {
		var party_sow = new Date();
		var party_millisTill101 = new Date(party_sow.getFullYear(), party_sow.getMonth(), party_sow.getDay(), 0, 0, 0, 0) - party_sow;
		let party_day = party_sow.getDay();

		//console.log(party_day);
		party_millisTill101 = (party_millisTill101 - party_day * 86400000) + 86400000;
		if (party_millisTill101 < 0) {
			for (party_pol = 0; party_pol <= 6; party_pol++) {
				if (party_millisTill101 > 0) {
					break;
				}
				party_millisTill101 += 604800000; // every monday
			}

		}

		//console.log(millisTill10);
		//console.log(party_millisTill101);
		setTimeout(party_mainf2, party_millisTill101);
		async function party_mainf2() {
			clearInterval(party_nIntervId2);
			// release our intervalID from the variable
			party_nIntervId2 = null;
			party_nIntervId2 = setInterval(party_mainf2, 604800000);
			const allup = await Tags.findAll();
			allup.forEach(b => {

				b.update({ 'partygamescorewlim': 0 });
			})
			//console.log('you can do it');
		}
	} else if (party_limit_interval == 30) {
		var party_kow = new Date()
		party_mon = party_kow.getMonth() + 1;
		party_yea = party_kow.getFullYear();
		if (party_kow.getMonth() == 12) {
			party_mon = 1;
			party_yea = party_yea + 1;
		}
		var party_millisTill102 = new Date(party_yea, party_mon, 1, 0, 0, 0, 0) - party_kow;



		//console.log(millisTill10);
		console.log(party_millisTill102);
		setTimeout(party_mainf3, party_millisTill102);
		async function party_mainf3() {
			clearInterval(party_nIntervId3);
			// release our intervalID from the variable
			party_nIntervId3 = null;
			var party_kow = new Date()
			party_mon = party_kow.getMonth() + 1;
			party_yea = party_kow.getFullYear();
			if (party_kow.getMonth() == 12) {
				party_mon = 1;
				party_yea = yea + 1;
			}
			var party_millisTill102 = new Date(party_yea, party_mon, 1, 0, 0, 0, 0) - party_kow;
			party_nIntervId3 = setInterval(party_mainf3, party_millisTill102);
			const allup = await Tags.findAll();
			allup.forEach(b => {

				b.update({ 'partygamescorewlim': 0 });
			})
			//console.log('you can do it');
		}

	}


}
async function voice() {
	clearInterval(voice_nIntervId1);
	voice_nIntervId1 = null;
	clearInterval(voice_nIntervId2);
	voice_nIntervId2 = null;
	clearInterval(voice_nIntervId3);
	voice_nIntervId3 = null;
	//setvoicewlim 0////
	///////////////////
	clearTimeout(voice_timeout1);
	voice_timeout1 = null;
	clearTimeout(voice_timeout2);
	voice_timeout2 = null;
	clearTimeout(voice_timeout3);
	voice_timeout3 = null;
	const allup = await Tags.findAll();
	allup.forEach(b => {

		b.update({ 'voicescorewlim': 0 });
	})
	if (voice_limit_interval == 1) {
		var voice_now = new Date();
		var voice_millisTill10 = new Date(voice_now.getFullYear(), voice_now.getMonth(), voice_now.getDate(), 0, 0, 0, 0) - voice_now;
		/*var sow = new Date();
		var millisTill101 = new Date(sow.getFullYear(), sow.getMonth(), sow.getDay(), 0, 0, 0, 0) - sow;*/

		if (voice_millisTill10 < 0) {
			voice_millisTill10 += 86400000; // it's after 10am, try 10am tomorrow.
			console.log('mst' + voice_millisTill10);
		}
		voice_timeout1 = setTimeout(voice_mainf, voice_millisTill10);
		async function voice_mainf() {
			clearInterval(voice_nIntervId1);
			// release our intervalID from the variable
			voice_nIntervId1 = null;
			voice_nIntervId1 = setInterval(voice_mainf, 86400000);
			const allup = await Tags.findAll();
			allup.forEach(b => {

				b.update({ 'voicescorewlim': 0 });
			})
			//console.log('you can do it');
		}


	} else if (voice_limit_interval == 7) {
		var voice_sow = new Date();
		var voice_millisTill101 = new Date(voice_sow.getFullYear(), voice_sow.getMonth(), voice_sow.getDay(), 0, 0, 0, 0) - voice_sow;
		let voice_day = voice_sow.getDay();

		//console.log(voice_day);
		voice_millisTill101 = (voice_millisTill101 - voice_day * 86400000) + 86400000;
		if (voice_millisTill101 < 0) {
			for (voice_pol = 0; voice_pol <= 6; voice_pol++) {
				if (voice_millisTill101 > 0) {
					break;
				}
				voice_millisTill101 += 604800000; // every monday
			}

		}

		//console.log(millisTill10);
		//console.log(voice_millisTill101);
		setTimeout(voice_mainf2, voice_millisTill101);
		async function voice_mainf2() {
			clearInterval(voice_nIntervId2);
			// release our intervalID from the variable
			voice_nIntervId2 = null;
			voice_nIntervId2 = setInterval(voice_mainf2, 604800000);
			const allup = await Tags.findAll();
			allup.forEach(b => {

				b.update({ 'voicescorewlim': 0 });
			})
			//console.log('you can do it');
		}
	} else if (voice_limit_interval == 30) {
		var voice_kow = new Date()
		voice_mon = voice_kow.getMonth() + 1;
		voice_yea = voice_kow.getFullYear();
		if (voice_kow.getMonth() == 12) {
			voice_mon = 1;
			voice_yea = voice_yea + 1;
		}
		var voice_millisTill102 = new Date(voice_yea, voice_mon, 1, 0, 0, 0, 0) - voice_kow;



		//console.log(millisTill10);
		console.log(voice_millisTill102);
		setTimeout(voice_mainf3, voice_millisTill102);
		async function voice_mainf3() {
			clearInterval(voice_nIntervId3);
			// release our intervalID from the variable
			voice_nIntervId3 = null;
			var voice_kow = new Date()
			voice_mon = voice_kow.getMonth() + 1;
			voice_yea = voice_kow.getFullYear();
			if (voice_kow.getMonth() == 12) {
				voice_mon = 1;
				voice_yea = yea + 1;
			}
			var voice_millisTill102 = new Date(voice_yea, voice_mon, 1, 0, 0, 0, 0) - voice_kow;
			voice_nIntervId3 = setInterval(voice_mainf3, voice_millisTill102);
			const allup = await Tags.findAll();
			allup.forEach(b => {

				b.update({ 'voicescorewlim': 0 });
			})
			//console.log('you can do it');
		}

	}


}
/*
	var now = new Date();
var millisTill10 = new Date(now.getFullYear(), now.getMonth(), now.getDate(), 0, 0, 0, 0) - now;
//var sow = new Date();
//var millisTill101 = new Date(sow.getFullYear(), sow.getMonth(), sow.getDay(), 0, 0, 0, 0) - sow;

if (millisTill10 < 0) {
   millisTill10 += 86400000; // it's after 10am, try 10am tomorrow.
}
chat_timeout1 = setTimeout(mainf, millisTill10);
async function mainf(){
	clearInterval(nIntervId1);
  // release our intervalID from the variable
  nIntervId1 = null;
	nIntervId1 = setInterval(mainf, 86400000);
	console.log('you can do it');
}

///////////weekly///////////////////////
var sow = new Date();
var millisTill101 = new Date(sow.getFullYear(), sow.getMonth(), sow.getDay(), 0, 0, 0, 0) - sow;
let day = sow.getDay();

console.log(day);
millisTill101 = (millisTill101 - day*86400000)+86400000;
if (millisTill101 < 0) {
	for(pol=0; pol<=6; pol++){
	 if (millisTill101 > 0){
		 break;
	 }
	 millisTill101 += 604800000; // every monday
 }
 
  }

 //console.log(millisTill10);
 console.log(millisTill101);
 setTimeout(mainf2, millisTill10);
async function mainf2(){
	clearInterval(nIntervId2);
  // release our intervalID from the variable
  nIntervId2 = null;
	nIntervId2 = setInterval(mainf2, 604800000);
	console.log('you can do it');
}
/////////////monthly//////////////////////////////
var kow = new Date()
mon= kow.getMonth()+1;
yea = kow.getFullYear();
if(kow.getMonth()==12){
	mon = 1;
	yea = yea+1;
}
var millisTill102 = new Date(yea, mon, 1, 0, 0, 0, 0) - kow;



 //console.log(millisTill10);
 console.log(millisTill102);
 setTimeout(mainf3, millisTill102);
async function mainf3(){
	clearInterval(nIntervId3);
  // release our intervalID from the variable
  nIntervId3 = null;
  var kow = new Date()
mon= kow.getMonth()+1;
yea = kow.getFullYear();
if(kow.getMonth()==12){
	mon = 1;
	yea = yea+1;
}
var millisTill102 = new Date(yea, mon, 1, 0, 0, 0, 0) - kow;
	nIntervId3 = setInterval(mainf3, millisTill102);
	console.log('you can do it');
}
*/






















































//##########################################################################################################################################################
client.on('interactionCreate', async interaction => {
	if (!interaction.isButton()) return;
	if (interaction.customId === 'youtube-together') {
		interaction.deferUpdate();
	}
	if (interaction.customId === 'secondary') {
		interaction.deferUpdate();

	} if (interaction.customId === '3ary') {
		interaction.deferUpdate();
	} if (interaction.customId === '4ary') {
		interaction.deferUpdate();
	} if (interaction.customId === '5ary') {
		interaction.deferUpdate();
	} if (interaction.customId === '6ary') {
		interaction.deferUpdate();
	} if (interaction.customId === '7ary') {
		interaction.deferUpdate();
	} if (interaction.customId === '8ary') {
		interaction.deferUpdate();
	}
});
process.on("unhandledRejection", (reason, p) => {
  
    console.log(" [antiCrash] :: Unhandled Rejection/Catch");
    console.log(reason, p);
});
process.on("uncaughtException", (err, origin) => {
  
    console.log(" [antiCrash] :: Uncaught Exception/Catch");
    console.log(err, origin);
});
process.on("uncaughtExceptionMonitor", (err, origin) => {
 
    console.log(" [antiCrash] :: Uncaught Exception/Catch (MONITOR)");
  console.log(err, origin);
});
process.on("multipleResolves", (type, promise, reason) => {
  
    console.log(" [antiCrash] :: Multiple Resolves");
    console.log(type, promise, reason);
});



// Login to Discord with your client's token
client.login(token);
